<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE DDL SYSTEM "schema.dtd">
<DDL>

<statement>
	CREATE TABLE "SYS_MODULES_ALTERNATIVE" (   "MODULE_ID" VARCHAR2(35BYTE) NOT NULL, "WORKSTATION_ID" VARCHAR2(40BYTE) NOT NULL, "ALT_MODULE_ID" VARCHAR2(35BYTE))
</statement>

<statement>
	ALTER TABLE "SYS_MODULES_ALTERNATIVE" ADD CONSTRAINT "SYS_C0011435" PRIMARY KEY("MODULE_ID","WORKSTATION_ID")
</statement>

<statement>
	ALTER TABLE "SYS_MODULES_ALTERNATIVE" ADD CONSTRAINT "SYS_C0011433" CHECK ("MODULE_ID" IS NOT NULL) ENABLE ADD CONSTRAINT "SYS_C0011434" CHECK ("WORKSTATION_ID" IS NOT NULL) ENABLE
</statement>

<statement> 
	INSERT INTO SYS_MODULES (MODULE_ID, RF_ACTIVE, DK_ACTIVE, MODULE_TYPE, HINT, MNEMONIC, ICON_FILENAME, HELPSET_ID, REPORT_FILENAME, EXEC_FILENAME, EXEC_DIR, PRINT_PREVIEW, PRINT_DIALOG, PRINT_COPIES, REPORT_TYPE, RESOURCE_KEY) VALUES ('FRM_ADMIN_MODULE_ALTERNATE', 'N', 'Y', 'FORM', 'btn_Alternative', '0', 'alternative.gif', '', '', '', '', 'N', 'N', '1', '', 'mod_FRM_ADMIN_MODULE_GROUPS')
</statement> 	
	
<statement>
	INSERT INTO SYS_GROUP_PERMISSIONS (GROUP_ID, MODULE_ID) VALUES ('ADMIN', 'FRM_ADMIN_MODULE_ALTERNATE')
</statement>

<statement> 
	INSERT INTO SYS_MODULES (MODULE_ID, RF_ACTIVE, DK_ACTIVE, MODULE_TYPE, HINT, MNEMONIC, ICON_FILENAME, HELPSET_ID, REPORT_FILENAME, EXEC_FILENAME, EXEC_DIR, PRINT_PREVIEW, PRINT_DIALOG, PRINT_COPIES, REPORT_TYPE, RESOURCE_KEY) VALUES ('FRM_ADMIN_MODULE_COPY', 'N', 'Y', 'FUNCTION', NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'btn_Copy')
</statement> 	
	
<statement>
	INSERT INTO SYS_GROUP_PERMISSIONS (GROUP_ID, MODULE_ID) VALUES ('ADMIN', 'FRM_ADMIN_MODULE_COPY')
</statement>

<statement>
	DELETE FROM SYS_ARCHIVE WHERE ARCHIVE_ID = 'INT_LOG'
</statement>

<statement>
	INSERT INTO SYS_ARCHIVE (ARCHIVE_ID,DESCRIPTION,ENABLED,BACKGROUND_TASK,RETENTION_DAYS,SQL_TABLE,SQL_CRITERIA,SEQUENCE) VALUES 
	                        ('INT_LOG','System Interface Log','Y','Y',30,'SYS_INTERFACE_LOG','EVENT_TIME &lt; ?',10)
</statement>

<statement>
	DELETE FROM SYS_ARCHIVE WHERE ARCHIVE_ID = 'JOURNEY_REF'
</statement>

<statement>
	INSERT INTO SYS_ARCHIVE (ARCHIVE_ID,DESCRIPTION,ENABLED,BACKGROUND_TASK,RETENTION_DAYS,SQL_TABLE,SQL_CRITERIA,SEQUENCE) VALUES 
	                        ('JOURNEY_REF','Journey Refs','Y','Y',2,'APP_JOURNEY','STATUS = ''Unassigned'' AND TIMESLOT &lt; ?',20)
</statement>

<statement>
	CREATE VIEW view_permissions AS
	SELECT
	"SYS_USERS"."USER_ID",
	"SYS_USERS"."USER_COMMENT",
	"SYS_GROUPS"."GROUP_ID",
	"SYS_GROUPS".DESCRIPTION,
	"SYS_MODULES"."MODULE_ID",
	"SYS_MODULES"."RF_ACTIVE",
	"SYS_MODULES"."DK_ACTIVE",
	"SYS_MODULES"."MODULE_TYPE",
	"SYS_LANGUAGE".TEXT
	FROM
	"SYS_USER_GROUP_MEMBERSHIP"
	RIGHT JOIN "SYS_USERS"
	ON "SYS_USER_GROUP_MEMBERSHIP"."USER_ID" = "SYS_USERS"."USER_ID" 
	LEFT JOIN "SYS_GROUPS"
	ON "SYS_GROUPS"."GROUP_ID" = "SYS_USER_GROUP_MEMBERSHIP"."GROUP_ID" 
	LEFT JOIN "SYS_GROUP_PERMISSIONS"
	ON "SYS_GROUP_PERMISSIONS"."GROUP_ID" = "SYS_GROUPS"."GROUP_ID" 
	LEFT JOIN "SYS_MODULES"
	ON "SYS_MODULES"."MODULE_ID" = "SYS_GROUP_PERMISSIONS"."MODULE_ID" 
	LEFT JOIN "SYS_LANGUAGE"
	ON "SYS_LANGUAGE"."RESOURCE_KEY" = "SYS_MODULES"."RESOURCE_KEY"
	AND "SYS_LANGUAGE"."LANGUAGE_ID" = "SYS_USERS"."LANGUAGE_ID"
	WHERE
	ACCOUNT_ENABLED = 'Y' AND (ACCOUNT_EXPIRES = 'N' OR (ACCOUNT_EXPIRES = 'Y' AND ACCOUNT_EXPIRY_DATE > CURRENT_DATE))
</statement>

<statement>
	INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('btn_Export', 'EN', 'Export', '')
</statement>

<statement>
		INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('btn_Alternative','EN','Alternative','')
</statement>

<statement> 
	INSERT INTO SYS_MODULES (MODULE_ID, RF_ACTIVE, DK_ACTIVE, MODULE_TYPE, HINT, MNEMONIC, ICON_FILENAME, HELPSET_ID, REPORT_FILENAME, EXEC_FILENAME, EXEC_DIR, PRINT_PREVIEW, PRINT_DIALOG, PRINT_COPIES, REPORT_TYPE, RESOURCE_KEY) VALUES ('FRM_ADMIN_USER_PERM_EXPORT', 'N', 'Y', 'FUNCTION', NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'btn_Export')
</statement> 	
	
<statement>
	INSERT INTO SYS_GROUP_PERMISSIONS (GROUP_ID, MODULE_ID) VALUES ('ADMIN', 'FRM_ADMIN_USER_PERM_EXPORT')
</statement>
	
<statement>
ALTER FUNCTION C4J_GETBASEQUANTITY COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETCONTROLVALUE COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETDAY COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETEXPIRYDATE COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETFINALBATCHNUMBER COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETFINALEXPIRYDATE COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETFULLPALLETQUANTITY COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETJULIAN COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETLAYERS COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETMONTH COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETPLANT COMPILE
</statement>
	
<statement>
ALTER FUNCTION C4J_GETYEAR COMPILE
</statement>

	
<statement>
ALTER VIEW view_auto_labeller_full COMPILE
</statement>
	
<statement>
ALTER VIEW view_auto_labeller_printer COMPILE
</statement>
	
<statement>
ALTER VIEW view_journeys COMPILE
</statement>
	
<statement>
ALTER VIEW view_label_data COMPILE
</statement>
	
<statement>
ALTER VIEW view_label_data_process_order COMPILE
</statement>
	
<statement>
ALTER VIEW view_pallet_expiry COMPILE
</statement>
	
<statement>
ALTER VIEW view_pallet_history COMPILE
</statement>
	
<statement>
ALTER VIEW view_pallet_history_expiry COMPILE
</statement>
	
<statement>
ALTER VIEW view_permissions COMPILE
</statement>
	
<statement>
ALTER VIEW view_qm_analysis_01 COMPILE
</statement>
	
<statement>
ALTER VIEW view_qm_results COMPILE
</statement>


</DDL>