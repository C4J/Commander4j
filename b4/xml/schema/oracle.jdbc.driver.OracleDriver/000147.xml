<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE DDL SYSTEM "schema.dtd">
<DDL>
   
   <statement>
      CREATE TABLE APP_WASTE_LOCATION_REPORTING 
       (  WASTE_LOCATION_ID VARCHAR2(25 BYTE) NOT NULL ENABLE, 
          WASTE_REPORTING_ID VARCHAR2(25 BYTE) NOT NULL ENABLE, 
           CONSTRAINT APP_WASTE_LOCATION_REPORTING_PK PRIMARY KEY (WASTE_LOCATION_ID, WASTE_REPORTING_ID)
      )
     </statement>
    
    <statement> 
      CREATE TABLE APP_WASTE_LOCATION_TYPES 
       (  WASTE_LOCATION_ID VARCHAR2(25 BYTE) NOT NULL ENABLE, 
          WASTE_TYPE_ID VARCHAR2(25 BYTE) NOT NULL ENABLE, 
           CONSTRAINT APP_WASTE_LOCATION_TYPES_PK PRIMARY KEY (WASTE_LOCATION_ID, WASTE_TYPE_ID)
       )
     </statement>
          
     <statement>    
      CREATE TABLE APP_WASTE_LOCATIONS 
       (  WASTE_LOCATION_ID VARCHAR2(25 BYTE) NOT NULL ENABLE, 
          DESCRIPTION VARCHAR2(80 BYTE), 
          PROCESS_ORDER_REQUIRED VARCHAR2(1 BYTE) DEFAULT 'N', 
          REASON_ID_REQUIRED VARCHAR2(1 BYTE) DEFAULT 'N', 
          ENABLED VARCHAR2(1 BYTE) DEFAULT 'Y', 
           CONSTRAINT APP_WASTE_LOCATIONS_PK PRIMARY KEY (WASTE_LOCATION_ID)
       )
   </statement>
        
   <statement>    
      CREATE TABLE APP_WASTE_LOG 
       (  TRANSACTION_REF NUMBER(38,0) NOT NULL ENABLE, 
          WASTE_TRANSACTION_TYPE VARCHAR2(25 BYTE) NOT NULL ENABLE, 
          WASTE_LOCATION_ID VARCHAR2(25 BYTE) DEFAULT '', 
          REPORT_TIME DATE, 
          WASTE_MATERIAL_ID VARCHAR2(25 BYTE) DEFAULT '', 
          PROCESS_ORDER VARCHAR2(10 BYTE) DEFAULT '', 
          WASTE_REASON_ID VARCHAR2(25 BYTE) DEFAULT '', 
          USER_ID VARCHAR2(20 BYTE) DEFAULT '', 
          QUANTITY NUMBER(22,3) DEFAULT 0, 
           CONSTRAINT APP_WASTE_LOG_PK PRIMARY KEY (TRANSACTION_REF, WASTE_TRANSACTION_TYPE)
       )
   </statement>
        
   <statement>    
      CREATE TABLE APP_WASTE_MATERIAL 
       (  WASTE_MATERIAL_ID VARCHAR2(25 BYTE) NOT NULL ENABLE, 
          WASTE_TYPE_ID VARCHAR2(25 BYTE) DEFAULT '', 
          UOM VARCHAR2(3 BYTE) DEFAULT '', 
          COST_PER_UOM NUMBER(22,3) DEFAULT 0, 
          CONVERSION_TO_KG NUMBER(22,3) DEFAULT 1, 
          DESCRIPTION VARCHAR2(80 BYTE) DEFAULT '', 
          ENABLED VARCHAR2(1 BYTE) DEFAULT 'Y', 
           CONSTRAINT APP_WASTE_MATERIAL_PK PRIMARY KEY (WASTE_MATERIAL_ID)
       )
     </statement>
        
     <statement>  
      CREATE TABLE APP_WASTE_REASONS 
       (  WASTE_REASON_ID VARCHAR2(25 BYTE) NOT NULL ENABLE, 
          DESCRIPTION VARCHAR2(80 BYTE) DEFAULT '', 
          ENABLED VARCHAR2(20 BYTE) DEFAULT 'Y', 
           CONSTRAINT APP_WASTE_REASONS_PK PRIMARY KEY (WASTE_REASON_ID)
       )
     </statement>
          
     <statement>  
      CREATE TABLE APP_WASTE_REPORTING_GROUP 
       (  REPORTING_GROUP NUMBER(*,0) DEFAULT -1 NOT NULL ENABLE, 
          DESCRIPTION VARCHAR2(80 BYTE) DEFAULT '', 
          ENABLED VARCHAR2(1 BYTE) DEFAULT 'Y', 
           CONSTRAINT APP_WASTE_REPORTING_GROUP_PK PRIMARY KEY (REPORTING_GROUP)
       )
      </statement>
      
     <statement>  
      CREATE TABLE APP_WASTE_REPORTING_IDS 
       (  WASTE_REPORTING_ID VARCHAR2(25 BYTE) NOT NULL ENABLE, 
          DESCRIPTION VARCHAR2(80 BYTE) DEFAULT '', 
          REPORTING_GROUP NUMBER(*,0) DEFAULT -1, 
          ENABLED VARCHAR2(1 BYTE) DEFAULT 'Y', 
           CONSTRAINT APP_WASTE_REPORTING_IDS_PK PRIMARY KEY (WASTE_REPORTING_ID)
       )
      </statement>
      
     <statement>    
      CREATE TABLE APP_WASTE_TRANSACTIONS 
       (  WASTE_TRANSACTION_TYPE VARCHAR2(25 BYTE) NOT NULL ENABLE, 
          DESCRIPTION VARCHAR2(80 BYTE) DEFAULT '', 
          INCLUDE_IN_TOTALS VARCHAR2(1 BYTE) DEFAULT 'Y', 
          STORE_AS_NEGATIVE VARCHAR2(1 BYTE) DEFAULT 'N', 
          ENABLED VARCHAR2(1 BYTE) DEFAULT 'Y', 
           CONSTRAINT APP_WASTE_TRANSACTIONS_PK PRIMARY KEY (WASTE_TRANSACTION_TYPE)
       )
      </statement>
      
   <statement>      
      CREATE TABLE APP_WASTE_TYPES 
       (  WASTE_TYPE_ID VARCHAR2(25 BYTE) NOT NULL ENABLE, 
          RECYCLABLE VARCHAR2(1 BYTE) DEFAULT 'Y', 
          HAZARDOUS VARCHAR2(1 BYTE) DEFAULT 'N', 
          PPE_REQUIRED VARCHAR2(1 BYTE) DEFAULT 'N', 
          DESCRIPTION VARCHAR2(80 BYTE) DEFAULT '', 
          ENABLED VARCHAR2(1 BYTE) DEFAULT 'Y', 
           CONSTRAINT APP_WASTE_TYPES_PK PRIMARY KEY (WASTE_TYPE_ID)
       )
      </statement>
      
     <statement>  
      CREATE OR REPLACE VIEW VIEW_WASTE_LOG AS 
      SELECT
          LOG.TRANSACTION_REF AS TRANSACTION_REF,
          LOG.REPORT_TIME AS REPORT_TIME,
          LOG.WASTE_TRANSACTION_TYPE AS WASTE_TRANSACTION_TYPE,
          TRANS.DESCRIPTION AS DESCRIPTION_TRANSACTION,
          LOG.WASTE_LOCATION_ID AS WASTE_LOCATION_ID,
          LOCN.DESCRIPTION AS DESCRIPTION_LOCATION,
          LOG.WASTE_MATERIAL_ID AS WASTE_MATERIAL_ID,
          MAT.DESCRIPTION AS DESCRIPTION_MATERIAL,
          MAT.WASTE_TYPE_ID AS WASTE_TYPE_ID,
          TYP.DESCRIPTION AS DESCRIPTION_TYPE,
          TYP.RECYCLABLE AS RECYCLABLE,
          TYP.HAZARDOUS AS HAZARDOUS,
          TYP.PPE_REQUIRED AS PPE_REQUIRED,
          LOCN.REASON_ID_REQUIRED AS REASON_ID_REQUIRED,
          LOG.WASTE_REASON_ID AS WASTE_REASON_ID,
          REAS.DESCRIPTION AS DESCRIPTION_REASON,
          LOCN.PROCESS_ORDER_REQUIRED AS PROCESS_ORDER_REQUIRED,
          LOG.PROCESS_ORDER AS PROCESS_ORDER,
          LOG.USER_ID AS USER_ID,
          LOG.QUANTITY AS QUANTITY,
          MAT.UOM AS UOM,
          MAT.COST_PER_UOM AS COST_PER_UOM,
          MAT.CONVERSION_TO_KG AS CONVERSION_TO_KG,
          (LOG.QUANTITY * MAT.CONVERSION_TO_KG) AS WEIGHT_KG,
          (LOG.QUANTITY * MAT.COST_PER_UOM) AS COST,
          TRANS.INCLUDE_IN_TOTALS AS INCLUDE_IN_TOTALS
     FROM APP_WASTE_MATERIAL  MAT INNER JOIN
          APP_WASTE_LOG LOG ON MAT.WASTE_MATERIAL_ID = LOG.WASTE_MATERIAL_ID INNER JOIN
          APP_WASTE_TYPES TYP ON TYP.WASTE_TYPE_ID = MAT.WASTE_TYPE_ID INNER JOIN
          APP_WASTE_REASONS REAS ON REAS.WASTE_REASON_ID = LOG.WASTE_REASON_ID INNER JOIN
          APP_WASTE_LOCATIONS LOCN ON LOCN.WASTE_LOCATION_ID = LOG.WASTE_LOCATION_ID INNER JOIN
          APP_WASTE_TRANSACTIONS TRANS ON TRANS.WASTE_TRANSACTION_TYPE = LOG.WASTE_TRANSACTION_TYPE
        </statement>
                
     <statement>  
      CREATE OR REPLACE VIEW VIEW_WASTE_REPORTING AS 
      SELECT
          LOG.TRANSACTION_REF AS TRANSACTION_REF,
          LOG.REPORT_TIME AS REPORT_TIME,
          LOG.WASTE_TRANSACTION_TYPE AS WASTE_TRANSACTION_TYPE,
          TRANS.DESCRIPTION AS DESCRIPTION,
          LOG.WASTE_LOCATION_ID AS WASTE_LOCATION_ID,
          LOCN.DESCRIPTION AS DESCRIPTION_LOCATION,
          LOG.WASTE_MATERIAL_ID AS WASTE_MATERIAL_ID,
          MAT.DESCRIPTION AS DESCRIPTION_MATERIAL,
          MAT.WASTE_TYPE_ID AS WASTE_TYPE_ID,
          TYP.DESCRIPTION AS DESCRIPTION_TYPE,
          TYP.RECYCLABLE AS RECYCLABLE,
          TYP.HAZARDOUS AS HAZARDOUS,
          TYP.PPE_REQUIRED AS PPE_REQUIRED,
          LOG.WASTE_REASON_ID AS WASTE_REASON_ID,
          REAS.DESCRIPTION AS DESCRIPTION_REASON,
          LOG.PROCESS_ORDER AS PROCESS_ORDER,
          LOG.USER_ID AS USER_ID,
          LOG.QUANTITY AS QUANTITY,
          MAT.UOM AS UOM,
          MAT.COST_PER_UOM AS COST_PER_UOM,
          MAT.CONVERSION_TO_KG AS CONVERSION_TO_KG,
          REPIDS.WASTE_REPORTING_ID AS WASTE_REPORTING_ID,
          REPIDS.DESCRIPTION AS REPORTING_ID_DESCRIPTION,
          REPIDS.REPORTING_GROUP AS REPORTING_GROUP,
          GRP.DESCRIPTION AS GROUP_DESCRIPTION 
     FROM APP_WASTE_MATERIAL  MAT INNER JOIN
          APP_WASTE_LOG LOG ON MAT.WASTE_MATERIAL_ID = LOG.WASTE_MATERIAL_ID INNER JOIN
          APP_WASTE_TYPES TYP ON TYP.WASTE_TYPE_ID = MAT.WASTE_TYPE_ID INNER JOIN
          APP_WASTE_REASONS REAS ON REAS.WASTE_REASON_ID = LOG.WASTE_REASON_ID INNER JOIN
          APP_WASTE_LOCATIONS LOCN ON LOCN.WASTE_LOCATION_ID = LOG.WASTE_LOCATION_ID INNER JOIN
          APP_WASTE_LOCATION_REPORTING LOCNREP ON LOCNREP.WASTE_LOCATION_ID = LOG.WASTE_LOCATION_ID INNER JOIN 
          APP_WASTE_REPORTING_IDS REPIDS ON REPIDS.WASTE_REPORTING_ID = LOCNREP.WASTE_REPORTING_ID INNER JOIN
          APP_WASTE_TRANSACTIONS TRANS ON TRANS.WASTE_TRANSACTION_TYPE = LOG.WASTE_TRANSACTION_TYPE INNER JOIN
          APP_WASTE_REPORTING_GROUP GRP ON GRP.REPORTING_GROUP = REPIDS.REPORTING_GROUP
          AND ( TRANS.INCLUDE_IN_TOTALS = 'Y' )
     </statement>
     
     <statement>
     	   INSERT INTO SYS_CONTROL (SYSTEM_KEY, KEY_VALUE, DESCRIPTION) VALUES ('WASTE TXN REF', '100', 'Waste Transaction Log Number')
     </statement>

     <statement>
	    CREATE OR REPLACE VIEW view_waste_location_materials AS SELECT
	        LOCN.WASTE_LOCATION_ID,
	        LOCN.DESCRIPTION AS DESCRIPTION_LOCATION,
	        TYP.WASTE_TYPE_ID,
	        TYP.DESCRIPTION AS DESCRIPTION_TYPE,
	        MAT.WASTE_MATERIAL_ID,
	        MAT.DESCRIPTION AS DESCRIPTION_MATERIAL 
	    FROM
	        APP_WASTE_LOCATION_TYPES LOCN_TYP
	        JOIN APP_WASTE_LOCATIONS LOCN ON LOCN_TYP.WASTE_LOCATION_ID = LOCN.WASTE_LOCATION_ID
	        JOIN APP_WASTE_TYPES TYP ON TYP.WASTE_TYPE_ID = LOCN_TYP.WASTE_TYPE_ID
	        JOIN APP_WASTE_MATERIAL MAT ON MAT.WASTE_TYPE_ID = TYP.WASTE_TYPE_ID 
	    WHERE
	        LOCN.ENABLED = 'Y'
	        AND TYP.ENABLED = 'Y' 
	        AND MAT.ENABLED = 'Y'
     </statement>

</DDL>

