<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE DDL SYSTEM "schema.dtd">
<DDL>

<statement>
	ALTER TABLE APP_LABEL_DATA RENAME COLUMN EAN TO PROD_EAN
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA RENAME COLUMN VARIANT TO PROD_VARIANT
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD BASE_EAN VARCHAR2(14)
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD BASE_VARIANT VARCHAR2(2)
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA RENAME COLUMN QUANTITY TO PROD_QUANTITY
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA RENAME COLUMN UOM TO PROD_UOM 
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD BASE_QUANTITY NUMBER(22,3)
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD BASE_UOM VARCHAR2(10)
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD MODULE_ID VARCHAR2(35)
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD OVERRIDE_MANUFACTURE_DATE VARCHAR2(1)
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD OVERRIDE_EXPIRY_DATE VARCHAR2(1)
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD OVERRIDE_BATCH_PREFIX VARCHAR2(1)
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD BATCH_PREFIX VARCHAR2(12)
</statement>

<statement>
	ALTER TABLE APP_LABEL_DATA ADD BATCH_SUFFIX VARCHAR2(12)
</statement>

<statement>
CREATE OR REPLACE VIEW view_label_data	AS 
	SELECT APP_LABEL_DATA.*, APP_CUSTOMER.CUSTOMER_NAME, APP_MATERIAL.DESCRIPTION
	FROM   APP_LABEL_DATA 
	INNER JOIN APP_CUSTOMER ON APP_LABEL_DATA.CUSTOMER_ID = APP_CUSTOMER.CUSTOMER_ID 
	INNER JOIN APP_MATERIAL ON APP_LABEL_DATA.MATERIAL = APP_MATERIAL.MATERIAL
</statement>

<statement>
	ALTER FUNCTION C4J_GETBASEQUANTITY COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETCONTROLVALUE COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETDAY COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETEXPIRYDATE COMPILE
</statement>

<statement>
CREATE OR REPLACE
FUNCTION C4J_GETFINALBATCHNUMBER 
(
  XPRODUCTION_DATE IN DATE  
, XOVERRIDE_BATCH IN VARCHAR2  
, XOVERRIDE_BATCH_NUMBER IN VARCHAR2  
, XBATCH_OPTIONAL IN VARCHAR2  
, XPROCESS_ORDER IN VARCHAR2 
) RETURN VARCHAR2 AS 
  result        varchar2(40);
  batchformat   varchar2(50);
BEGIN

	IF (XOVERRIDE_BATCH = 'Y') THEN
      result := XOVERRIDE_BATCH_NUMBER;
	END IF;

	IF XOVERRIDE_BATCH = 'N' THEN
			batchformat := c4j_GetControlValue('BATCH FORMAT');
			result := batchformat;
			result := REPLACE(result,'{PLANT}',c4j_GetPlant());
			result := REPLACE(result,'{PROCESS_ORDER}',XPROCESS_ORDER);
			result := REPLACE(result,'{YEAR4}',c4j_GetYear(XPRODUCTION_DATE,4));
			result := REPLACE(result,'{YEAR2}',c4j_GetYear(XPRODUCTION_DATE,2));
			result := REPLACE(result,'{YEAR1}',c4j_GetYear(XPRODUCTION_DATE,1));
			result := REPLACE(result,'{MONTH}',c4j_GetMonth(XPRODUCTION_DATE));
			result := REPLACE(result,'{DAY}',c4j_GetDay(XPRODUCTION_DATE));
			result := REPLACE(result,'{JULIAN_DAY}',c4j_GetJulian(XPRODUCTION_DATE,1));
			result := REPLACE(result,'{JULIAN0_DAY}',c4j_GetJulian(XPRODUCTION_DATE,0));
			result := REPLACE(result,'{JULIAN1_DAY}',c4j_GetJulian(XPRODUCTION_DATE,1));
	END IF;

	result := CONCAT(result,XBATCH_OPTIONAL);

  RETURN result;
END C4J_GETFINALBATCHNUMBER;
</statement>

<statement>
	ALTER FUNCTION C4J_GETFINALEXPIRYDATE COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETFULLPALLETQUANTITY COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETJULIAN COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETLAYERS COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETMONTH COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETPLANT COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETYEAR COMPILE
</statement>

<statement>
	ALTER VIEW view_auto_labeller COMPILE
</statement>

<statement>
	ALTER VIEW view_auto_labeller_full COMPILE
</statement>

<statement>
	ALTER VIEW view_label_data COMPILE
</statement>

<statement>
	ALTER VIEW view_pallet_expiry COMPILE
</statement>

<statement>
	ALTER VIEW view_pallet_history COMPILE
</statement>

<statement>
	ALTER VIEW view_pallet_history_expiry COMPILE
</statement>

<statement>
	ALTER VIEW view_qm_results COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETJULIAN COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETLAYERS COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETMONTH COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETPLANT COMPILE
</statement>

<statement>
	ALTER FUNCTION C4J_GETYEAR COMPILE
</statement>

<statement>
 CREATE OR REPLACE FORCE VIEW view_pallet_expiry ("SSCC", "LOCATION_ID", "MATERIAL", "BATCH_NUMBER", "PROCESS_ORDER", "QUANTITY", "UOM", "DATE_OF_MANUFACTURE", "STATUS", "EAN", "VARIANT", "DESPATCH_NO", "CONFIRMED", "LAYERS", "SSCC_EXPIRY_DATE", "CUSTOMER_ID", "MHN_NUMBER", "DECISION", "EXPIRY_DATE", "DESCRIPTION", "OLD_MATERIAL", "CUSTOMER_NAME", "PRINT_ON_LABEL", "DATE_CREATED", "CREATED_BY_USER_ID", "DATE_UPDATED", "UPDATED_BY_USER_ID", "GROSS_WEIGHT", "NET_WEIGHT", "WEIGHT_UOM") AS 
  (SELECT P."SSCC",
  P."LOCATION_ID",
  P."MATERIAL",
  P."BATCH_NUMBER",
  P."PROCESS_ORDER",
  P."QUANTITY",
  P."UOM",
  P."DATE_OF_MANUFACTURE",
  P."STATUS",
  P."EAN",
  P."VARIANT",
  P."DESPATCH_NO",
  P."CONFIRMED",
  P."LAYERS",
  P."SSCC_EXPIRY_DATE",
  P."CUSTOMER_ID",
  P."MHN_NUMBER",
  P."DECISION",
  B.EXPIRY_DATE,
  M.DESCRIPTION,
  M.OLD_MATERIAL,
  C.CUSTOMER_NAME,
  C.PRINT_ON_LABEL,
  p.DATE_CREATED,
  P.CREATED_BY_USER_ID,
  P.DATE_UPDATED,
  P.UPDATED_BY_USER_ID,
  M.GROSS_WEIGHT,
  M.NET_WEIGHT,
  M.WEIGHT_UOM
  FROM APP_PALLET P
  LEFT JOIN APP_MATERIAL_BATCH B ON (P.MATERIAL = B.MATERIAL AND P.BATCH_NUMBER = B.BATCH_NUMBER)
  LEFT JOIN APP_MATERIAL M ON P.MATERIAL = M.MATERIAL
  LEFT JOIN APP_CUSTOMER C ON P.CUSTOMER_ID = C.CUSTOMER_ID)
</statement>

</DDL>