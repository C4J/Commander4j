<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE DDL SYSTEM "schema.dtd">
<DDL>

<statement>
	ALTER TABLE APP_CUSTOMER ADD [UPDATED] DATETIME NULL
</statement>

<statement>
	UPDATE APP_CUSTOMER SET UPDATED = GETDATE()
</statement>

<statement>
	ALTER TABLE APP_CUSTOMER ADD [CUSTOMER_DATA_01] VARCHAR(40) DEFAULT ''
</statement>

<statement>
	ALTER TABLE APP_CUSTOMER ADD [CUSTOMER_DATA_02] VARCHAR(40) DEFAULT ''
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_01', 'EN', 'Customer Data 1', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_01', 'NL', 'Customer Data 1', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_01', 'HU', 'Customer Data 1', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_01', 'IT', 'Customer Data 1', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_01', 'DE', 'Customer Data 1', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_01', 'ES', 'Customer Data 1', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_01', 'PL', 'Customer Data 1', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_02', 'EN', 'Customer Data 2', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_02', 'NL', 'Customer Data 2', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_02', 'HU', 'Customer Data 2', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_02', 'IT', 'Customer Data 2', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_02', 'DE', 'Customer Data 2', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_02', 'ES', 'Customer Data 2', 'Q')
</statement>

<statement>
INSERT INTO SYS_LANGUAGE (RESOURCE_KEY,LANGUAGE_ID,TEXT,MNEMONIC) VALUES ('lbl_Customer_Data_02', 'PL', 'Customer Data 2', 'Q')
</statement>

<statement>
		ALTER VIEW [dbo].[view_label_data_process_order_cdf]
		AS
		SELECT PO.PROCESS_ORDER, PO.STATUS, PO.MATERIAL, PO.REQUIRED_UOM, PO.REQUIRED_RESOURCE, PO.DUE_DATE, MAT.MATERIAL_TYPE, MAT.DESCRIPTION, RIGHT('00000000000000' + MATUOM_PROD.EAN, 14) 
		                  AS PROD_EAN, RIGHT('00' + MATUOM_PROD.VARIANT, 2) AS PROD_VARIANT, MATUOM_BASE.NUMERATOR AS PROD_QUANTITY, RIGHT('00000000000000' + ISNULL(PART2.DATA,''), 14) AS BASE_EAN, 
		                  RIGHT('00' + ISNULL(PART4.DATA,''), 2) AS BASE_VARIANT, ISNULL(PART3.DATA, 0) AS BASE_QUANTITY, dbo.c4j_GetFullPalletQuantity(PO.PROCESS_ORDER) AS PALLET_QUANTITY, 
		                  dbo.c4j_GetLayers(PO.PROCESS_ORDER) AS PALLET_LAYERS, MAT.OLD_MATERIAL, MAT.SHELF_LIFE, MAT.SHELF_LIFE_UOM, MAT.SHELF_LIFE_RULE, PO.CUSTOMER_ID, CUST.CUSTOMER_NAME, 
		                  dbo.c4j_GetFinalBatchNumber(GETDATE(), 'N', '', '', PO.PROCESS_ORDER) AS BATCH_NUMBER, dbo.c4j_GetFinalExpiryDate(GETDATE(), MAT.SHELF_LIFE, MAT.SHELF_LIFE_UOM, MAT.SHELF_LIFE_RULE, 'N', 
		                  GETDATE()) AS EXPIRY_DATE, MAT.UPDATED AS MATERIAL_UPDATED, PO.UPDATED AS PROCESS_ORDER_UPDATED, ISNULL(PART1.DATA, '') AS PART_NO,
		                  ISNULL(CUST.CUSTOMER_DATA_01,'') AS CASE__LABEL,ISNULL(CUST.CUSTOMER_DATA_02,'') AS PALLET__LABEL,CUST.UPDATED AS CUSTOMER_UPDATED
		FROM     dbo.APP_PROCESS_ORDER AS PO INNER JOIN
		                  dbo.APP_MATERIAL AS MAT ON MAT.MATERIAL = PO.MATERIAL INNER JOIN
		                  dbo.APP_CUSTOMER AS CUST ON CUST.CUSTOMER_ID = PO.CUSTOMER_ID INNER JOIN
		                  dbo.APP_MATERIAL_UOM AS MATUOM_PROD ON MATUOM_PROD.MATERIAL = PO.MATERIAL AND MATUOM_PROD.UOM = PO.REQUIRED_UOM INNER JOIN
		                  dbo.APP_MATERIAL_UOM AS MATUOM_BASE ON MATUOM_BASE.MATERIAL = PO.MATERIAL AND MATUOM_BASE.UOM = MAT.BASE_UOM LEFT OUTER JOIN
		                  dbo.APP_MATERIAL_CUSTOMER_DATA AS PART3 ON PO.MATERIAL = PART3.MATERIAL AND PO.CUSTOMER_ID = PART3.CUSTOMER_ID AND PART3.DATA_ID = 'CU_QUANTITY' LEFT OUTER JOIN
		                  dbo.APP_MATERIAL_CUSTOMER_DATA AS PART2 ON PO.MATERIAL = PART2.MATERIAL AND PO.CUSTOMER_ID = PART2.CUSTOMER_ID AND PART2.DATA_ID = 'CU_EAN' LEFT OUTER JOIN
		                  dbo.APP_MATERIAL_CUSTOMER_DATA AS PART4 ON PO.MATERIAL = PART4.MATERIAL AND PO.CUSTOMER_ID = PART4.CUSTOMER_ID AND PART4.DATA_ID = 'CU_VARIANT' LEFT OUTER JOIN
		                  dbo.APP_MATERIAL_CUSTOMER_DATA AS PART1 ON PO.MATERIAL = PART1.MATERIAL AND PO.CUSTOMER_ID = PART1.CUSTOMER_ID AND PART1.DATA_ID = 'PART_NO'
</statement>

<statement>
	ALTER VIEW [dbo].[view_label_data_process_order]
		AS
		SELECT        PO.PROCESS_ORDER, PO.STATUS, PO.MATERIAL, PO.REQUIRED_UOM, PO.REQUIRED_RESOURCE, PO.DUE_DATE, MAT.MATERIAL_TYPE, MAT.DESCRIPTION, 
		                         RIGHT('00000000000000' + MATUOM_PROD.EAN, 14) AS PROD_EAN, RIGHT('00' + MATUOM_PROD.VARIANT, 2) AS PROD_VARIANT, 
		                         MATUOM_BASE.NUMERATOR AS PROD_QUANTITY, RIGHT('00000000000000' + MATUOM_BASE.EAN, 14) AS BASE_EAN, RIGHT('00' + MATUOM_BASE.VARIANT, 2) 
		                         AS BASE_VARIANT, MATUOM_PROD.NUMERATOR AS BASE_QUANTITY, dbo.c4j_GetFullPalletQuantity(PO.PROCESS_ORDER) AS PALLET_QUANTITY, 
		                         dbo.c4j_GetLayers(PO.PROCESS_ORDER) AS PALLET_LAYERS, MAT.OLD_MATERIAL, MAT.SHELF_LIFE, MAT.SHELF_LIFE_UOM, MAT.SHELF_LIFE_RULE, 
		                         PO.CUSTOMER_ID, CUST.CUSTOMER_NAME, dbo.c4j_GetFinalBatchNumber(GETDATE(), 'N', '', '', PO.PROCESS_ORDER) AS BATCH_NUMBER, 
		                         dbo.c4j_GetFinalExpiryDate(GETDATE(), MAT.SHELF_LIFE, MAT.SHELF_LIFE_UOM, MAT.SHELF_LIFE_RULE, 'N', GETDATE()) AS EXPIRY_DATE, 
		                         MAT.UPDATED AS MATERIAL_UPDATED, PO.UPDATED AS PROCESS_ORDER_UPDATED, dbo.APP_MATERIAL_CUSTOMER_DATA.DATA AS PART_NO,
                                 ISNULL(CUST.CUSTOMER_DATA_01,'') AS CASE__LABEL,ISNULL(CUST.CUSTOMER_DATA_02,'') AS PALLET__LABEL,CUST.UPDATED AS CUSTOMER_UPDATED
		FROM            dbo.APP_PROCESS_ORDER AS PO INNER JOIN
		                         dbo.APP_MATERIAL AS MAT ON MAT.MATERIAL = PO.MATERIAL INNER JOIN
		                         dbo.APP_CUSTOMER AS CUST ON CUST.CUSTOMER_ID = PO.CUSTOMER_ID INNER JOIN
		                         dbo.APP_MATERIAL_UOM AS MATUOM_PROD ON MATUOM_PROD.MATERIAL = PO.MATERIAL AND MATUOM_PROD.UOM = PO.REQUIRED_UOM INNER JOIN
		                         dbo.APP_MATERIAL_UOM AS MATUOM_BASE ON MATUOM_BASE.MATERIAL = PO.MATERIAL AND MATUOM_BASE.UOM = MAT.BASE_UOM AND 
		                         MATUOM_BASE.UOM = MAT.BASE_UOM LEFT OUTER JOIN
		                         dbo.APP_MATERIAL_CUSTOMER_DATA ON PO.MATERIAL = dbo.APP_MATERIAL_CUSTOMER_DATA.MATERIAL AND 
		                         PO.CUSTOMER_ID = dbo.APP_MATERIAL_CUSTOMER_DATA.CUSTOMER_ID AND dbo.APP_MATERIAL_CUSTOMER_DATA.DATA_ID = 'PART_NO'
</statement>

<statement>
		ALTER VIEW [dbo].[view_labeller_process_order_info]
		AS
		SELECT        PO.PROCESS_ORDER, PO.MATERIAL, PO.STATUS, PO.DUE_DATE, MAT.DESCRIPTION, MAT.SHELF_LIFE, MAT.SHELF_LIFE_UOM, MAT.SHELF_LIFE_RULE, 
		                         PO.REQUIRED_UOM, MATUOM.EAN, MATUOM.VARIANT, MAT.OLD_MATERIAL, dbo.GetFullPalletLayers(PO.MATERIAL, PO.REQUIRED_UOM) AS DEFAULT_LAYERS, 
		                         dbo.GetFullPalletQuantity(PO.PROCESS_ORDER) AS DEFAULT_QUANTITY, PO.UPDATED AS PROCESS_ORDER_UPDATED, MAT.UPDATED AS MATERIAL_UPDATED, 
		                         CUST.CUSTOMER_NAME, dbo.APP_MATERIAL_CUSTOMER_DATA.DATA AS PART_NO,
		                         ISNULL(CUST.CUSTOMER_DATA_01,'') AS CASE__LABEL,ISNULL(CUST.CUSTOMER_DATA_02,'') AS PALLET__LABEL,CUST.UPDATED AS CUSTOMER_UPDATED
		FROM            dbo.APP_PROCESS_ORDER AS PO INNER JOIN
		                         dbo.APP_CUSTOMER AS CUST ON PO.CUSTOMER_ID = CUST.CUSTOMER_ID INNER JOIN
		                         dbo.APP_MATERIAL AS MAT ON PO.MATERIAL = MAT.MATERIAL INNER JOIN
		                         dbo.APP_MATERIAL_UOM AS MATUOM ON PO.MATERIAL = MATUOM.MATERIAL AND PO.REQUIRED_UOM = MATUOM.UOM INNER JOIN
		                         dbo.APP_MATERIAL_UOM AS MATUOMFULL ON PO.MATERIAL = MATUOMFULL.MATERIAL LEFT OUTER JOIN
		                         dbo.APP_MATERIAL_CUSTOMER_DATA ON PO.MATERIAL = dbo.APP_MATERIAL_CUSTOMER_DATA.MATERIAL AND 
		                         PO.CUSTOMER_ID = dbo.APP_MATERIAL_CUSTOMER_DATA.CUSTOMER_ID AND dbo.APP_MATERIAL_CUSTOMER_DATA.DATA_ID = 'PART_NO'
		WHERE        (MATUOMFULL.UOM = 'PAL')
</statement>

<statement>
		UPDATE
		  [dbo].[APP_MHN] SET DATE_RESOLVED = 
		  (SELECT MAX(TRANSACTION_DATE) FROM APP_PALLET_HISTORY AS HIST 
		   WHERE TRANSACTION_TYPE = 'MHN' 
		   AND TRANSACTION_SUBTYPE = 'DECISION' 
		   AND MHN_NUMBER = [dbo].[APP_MHN].MHN_NUMBER)
		   WHERE STATUS = 'Closed' and DATE_RESOLVED is null
</statement>

<statement>
		UPDATE [APP_MHN] SET DATE_RESOLVED = DATE_CREATED WHERE STATUS = 'Closed' and DATE_RESOLVED is null
</statement>

</DDL>