<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE DDL SYSTEM "schema.dtd">
<DDL>
       
	<statement>	
		ALTER TABLE [dbo].[APP_WASTE_LOCATIONS] ADD [TARE_WEIGHT] numeric(22,3) DEFAULT 0.00
	</statement>
	
	<statement>
		UPDATE [dbo].[APP_WASTE_LOCATIONS] SET [TARE_WEIGHT] = 0.000
	</statement>
 
	<statement>	
		ALTER TABLE [dbo].[APP_WASTE_LOG] ADD [TARE_WEIGHT] numeric(22,3) DEFAULT 0.00
	</statement>
	
	<statement>
		UPDATE [dbo].[APP_WASTE_LOG] SET [TARE_WEIGHT] = 0.000
	</statement>
	
	<statement>
		DROP VIEW [dbo].[view_waste_log]
	</statement>
	
	<statement>
		ALTER TABLE [dbo].[APP_WASTE_MATERIAL] DROP CONSTRAINT [DF_APP_WASTE_MATERIAL_UOM]
	</statement>

	<statement>
		ALTER TABLE [dbo].[APP_WASTE_MATERIAL] DROP COLUMN [UOM]
	</statement>
	
	<statement>
		EXEC sp_rename '[dbo].[APP_WASTE_MATERIAL].[COST_PER_UOM]', 'COST_PER_KG', 'COLUMN'
	</statement>
		
	<statement>
		ALTER TABLE [dbo].[APP_WASTE_MATERIAL] DROP CONSTRAINT [DF_APP_WASTE_MATERIAL_CONVERSION_TO_KG]
	</statement>
		
	<statement>
		ALTER TABLE [dbo].[APP_WASTE_MATERIAL] DROP COLUMN [CONVERSION_TO_KG]
	</statement>
	
	<statement>
		EXEC sp_rename '[dbo].[APP_WASTE_LOG].[QUANTITY]', 'WEIGHT_KG', 'COLUMN'
	</statement>
	
	<statement>
		ALTER TABLE [dbo].[APP_WASTE_LOG] ADD DEFAULT 0.000 FOR [WEIGHT_KG]
	</statement>
		
	<statement>
		CREATE VIEW [dbo].[view_waste_log] AS SELECT
			LOG.TRANSACTION_REF AS TRANSACTION_REF,
			LOG.REPORT_TIME AS REPORT_TIME,
			LOG.WASTE_TRANSACTION_TYPE AS WASTE_TRANSACTION_TYPE,
			TRANS.DESCRIPTION AS DESCRIPTION_TRANSACTION,
			LOG.WASTE_LOCATION_ID AS WASTE_LOCATION_ID,
			LOCN.DESCRIPTION AS DESCRIPTION_LOCATION,
			LOG.WASTE_MATERIAL_ID AS WASTE_MATERIAL_ID,
			MAT.DESCRIPTION AS DESCRIPTION_MATERIAL,
			MAT.WASTE_TYPE_ID AS WASTE_TYPE_ID,
			TYP.DESCRIPTION AS DESCRIPTION_TYPE,
			TYP.RECYCLABLE AS RECYCLABLE,
			TYP.HAZARDOUS AS HAZARDOUS,
			TYP.PPE_REQUIRED AS PPE_REQUIRED,
			LOCN.REASON_ID_REQUIRED AS REASON_ID_REQUIRED,
			LOG.WASTE_REASON_ID AS WASTE_REASON_ID,
			REAS.DESCRIPTION AS DESCRIPTION_REASON,
			LOCN.PROCESS_ORDER_REQUIRED AS PROCESS_ORDER_REQUIRED,
			LOG.PROCESS_ORDER AS PROCESS_ORDER,
			LOG.USER_ID AS USER_ID,
			LOG.WEIGHT_KG AS WEIGHT_KG,
			LOG.TARE_WEIGHT AS TARE_WEIGHT,
			( LOG.WEIGHT_KG - LOG.TARE_WEIGHT ) AS NET_WEIGHT,
			MAT.COST_PER_KG AS COST_PER_KG,
			( (LOG.WEIGHT_KG - LOG.TARE_WEIGHT) * MAT.COST_PER_KG ) AS COST,
			TRANS.INCLUDE_IN_TOTALS AS INCLUDE_IN_TOTALS 
		FROM
			dbo.APP_WASTE_MATERIAL AS MAT
			INNER JOIN dbo.APP_WASTE_LOG AS [LOG] ON MAT.WASTE_MATERIAL_ID = [LOG].WASTE_MATERIAL_ID
			INNER JOIN dbo.APP_WASTE_TYPES AS TYP ON TYP.WASTE_TYPE_ID = MAT.WASTE_TYPE_ID
			LEFT JOIN dbo.APP_WASTE_REASONS AS REAS ON REAS.WASTE_REASON_ID = [LOG].WASTE_REASON_ID
			INNER JOIN dbo.APP_WASTE_LOCATIONS AS LOCN ON LOCN.WASTE_LOCATION_ID = [LOG].WASTE_LOCATION_ID
			INNER JOIN dbo.APP_WASTE_TRANSACTIONS AS TRANS ON TRANS.WASTE_TRANSACTION_TYPE = [LOG].WASTE_TRANSACTION_TYPE
	</statement>
	
	<statement>
		DROP VIEW [dbo].[view_waste_location_materials]
	</statement>
	
	<statement>
		CREATE VIEW [dbo].[view_waste_location_materials] AS SELECT
			LOCNS.[WASTE_LOCATION_ID],
			LOCNS.DESCRIPTION AS [DESCRIPTION_LOCATION],
			TYPS.[WASTE_TYPE_ID],
			TYPS.DESCRIPTION AS [DESCRIPTION_TYPE],
			MAT.[WASTE_MATERIAL_ID],
			MAT.DESCRIPTION AS [DESCRIPTION_MATERIAL] 
		FROM
			[APP_WASTE_LOCATION_TYPES] AS [LOCN_TYP]
			JOIN [APP_WASTE_LOCATIONS] AS LOCNS ON [LOCN_TYP].[WASTE_LOCATION_ID] = LOCNS.[WASTE_LOCATION_ID]
			JOIN [APP_WASTE_TYPES] AS TYPS ON TYPS.[WASTE_TYPE_ID] = [LOCN_TYP].[WASTE_TYPE_ID]
			JOIN [APP_WASTE_MATERIAL] AS MAT ON MAT.[WASTE_TYPE_ID] = TYPS.[WASTE_TYPE_ID] 
		WHERE
			LOCNS.ENABLED = 'Y' 
			AND TYPS.ENABLED = 'Y' 
			AND MAT.ENABLED = 'Y'
	</statement>
	
	<statement>
			DROP VIEW [dbo].[view_waste_reporting]
	</statement>
	
	<statement>
		CREATE VIEW [dbo].[view_waste_reporting] AS SELECT
			LOG.TRANSACTION_REF AS TRANSACTION_REF,
			LOG.REPORT_TIME AS REPORT_TIME,
			LOG.WASTE_TRANSACTION_TYPE AS WASTE_TRANSACTION_TYPE,
			TRANS.DESCRIPTION AS DESCRIPTION,
			LOG.WASTE_LOCATION_ID AS WASTE_LOCATION_ID,
			LOCN.DESCRIPTION AS DESCRIPTION_LOCATION,
			LOG.WASTE_MATERIAL_ID AS WASTE_MATERIAL_ID,
			MAT.DESCRIPTION AS DESCRIPTION_MATERIAL,
			MAT.WASTE_TYPE_ID AS WASTE_TYPE_ID,
			TYP.DESCRIPTION AS DESCRIPTION_TYPE,
			TYP.RECYCLABLE AS RECYCLABLE,
			TYP.HAZARDOUS AS HAZARDOUS,
			PPE_REQUIRED AS PPE_REQUIRED,
			LOG.WASTE_REASON_ID AS WASTE_REASON_ID,
			REAS.DESCRIPTION AS DESCRIPTION_REASON,
			LOG.PROCESS_ORDER AS PROCESS_ORDER,
			LOG.USER_ID AS USER_ID,
			LOG.WEIGHT_KG AS WEIGHT_KG,
			LOG.TARE_WEIGHT AS TARE_WEIGHT,
			MAT.COST_PER_KG AS COST_PER_KG,
			REPIDS.WASTE_REPORTING_ID AS WASTE_REPORTING_ID,
			REPIDS.DESCRIPTION AS REPORTING_ID_DESCRIPTION,
			REPIDS.REPORTING_GROUP AS REPORTING_GROUP,
			GRP.DESCRIPTION AS GROUP_DESCRIPTION 
		FROM
			dbo.APP_WASTE_MATERIAL AS MAT
			INNER JOIN dbo.APP_WASTE_LOG AS [LOG] ON MAT.WASTE_MATERIAL_ID = [LOG].WASTE_MATERIAL_ID
			INNER JOIN dbo.APP_WASTE_TYPES AS TYP ON TYP.WASTE_TYPE_ID = MAT.WASTE_TYPE_ID
			LEFT JOIN dbo.APP_WASTE_REASONS AS REAS ON REAS.WASTE_REASON_ID = [LOG].WASTE_REASON_ID
			INNER JOIN dbo.APP_WASTE_LOCATIONS AS LOCN ON LOCN.WASTE_LOCATION_ID = [LOG].WASTE_LOCATION_ID
			INNER JOIN dbo.APP_WASTE_LOCATION_REPORTING AS LOCNREP ON LOCNREP.WASTE_LOCATION_ID = LOG.WASTE_LOCATION_ID
			INNER JOIN dbo.APP_WASTE_REPORTING_IDS AS REPIDS ON REPIDS.WASTE_REPORTING_ID = LOCNREP.WASTE_REPORTING_ID
			INNER JOIN dbo.APP_WASTE_TRANSACTIONS AS TRANS ON TRANS.WASTE_TRANSACTION_TYPE = [LOG].WASTE_TRANSACTION_TYPE
			INNER JOIN dbo.APP_WASTE_REPORTING_GROUP AS GRP ON GRP.REPORTING_GROUP = REPIDS.REPORTING_GROUP 
			AND ( TRANS.INCLUDE_IN_TOTALS = 'Y' )
	</statement>
	
	<statement>
		CREATE VIEW [dbo].[view_waste_reporting2] AS SELECT
			LOG.TRANSACTION_REF AS TRANSACTION_REF,
			LOG.REPORT_TIME AS REPORT_TIME,
			LOG.WASTE_TRANSACTION_TYPE AS WASTE_TRANSACTION_TYPE,
			TRANS.DESCRIPTION AS DESCRIPTION,
			LOG.WASTE_LOCATION_ID AS WASTE_LOCATION_ID,
			LOCN.DESCRIPTION AS DESCRIPTION_LOCATION,
			LOG.WASTE_MATERIAL_ID AS WASTE_MATERIAL_ID,
			MAT.DESCRIPTION AS DESCRIPTION_MATERIAL,
			MAT.WASTE_TYPE_ID AS WASTE_TYPE_ID,
			TYP.DESCRIPTION AS DESCRIPTION_TYPE,
			TYP.RECYCLABLE AS RECYCLABLE,
			TYP.HAZARDOUS AS HAZARDOUS,
			PPE_REQUIRED AS PPE_REQUIRED,
			LOG.WASTE_REASON_ID AS WASTE_REASON_ID,
			REAS.DESCRIPTION AS DESCRIPTION_REASON,
			LOG.PROCESS_ORDER AS PROCESS_ORDER,
			LOG.USER_ID AS USER_ID,
			LOG.WEIGHT_KG AS WEIGHT_KG,
			LOG.TARE_WEIGHT AS TARE_WEIGHT,
			( LOG.WEIGHT_KG - LOG.TARE_WEIGHT ) AS NET_WEIGHT,
			MAT.COST_PER_KG AS COST_PER_KG,
			( (LOG.WEIGHT_KG - LOG.TARE_WEIGHT) * MAT.COST_PER_KG ) AS COST,
			REPIDS.WASTE_REPORTING_ID AS WASTE_REPORTING_ID,
			REPIDS.DESCRIPTION AS REPORTING_ID_DESCRIPTION,
			REPIDS.REPORTING_GROUP AS REPORTING_GROUP,
			GRP.DESCRIPTION AS GROUP_DESCRIPTION 
		FROM
			dbo.APP_WASTE_MATERIAL AS MAT
			INNER JOIN dbo.APP_WASTE_LOG AS [LOG] ON MAT.WASTE_MATERIAL_ID = [LOG].WASTE_MATERIAL_ID
			INNER JOIN dbo.APP_WASTE_TYPES AS TYP ON TYP.WASTE_TYPE_ID = MAT.WASTE_TYPE_ID
			LEFT JOIN dbo.APP_WASTE_REASONS AS REAS ON REAS.WASTE_REASON_ID = [LOG].WASTE_REASON_ID
			INNER JOIN dbo.APP_WASTE_LOCATIONS AS LOCN ON LOCN.WASTE_LOCATION_ID = [LOG].WASTE_LOCATION_ID
			INNER JOIN dbo.APP_WASTE_LOCATION_REPORTING AS LOCNREP ON LOCNREP.WASTE_LOCATION_ID = LOG.WASTE_LOCATION_ID
			INNER JOIN dbo.APP_WASTE_REPORTING_IDS AS REPIDS ON REPIDS.WASTE_REPORTING_ID = LOCNREP.WASTE_REPORTING_ID
			INNER JOIN dbo.APP_WASTE_TRANSACTIONS AS TRANS ON TRANS.WASTE_TRANSACTION_TYPE = [LOG].WASTE_TRANSACTION_TYPE
			INNER JOIN dbo.APP_WASTE_REPORTING_GROUP AS GRP ON GRP.REPORTING_GROUP = REPIDS.REPORTING_GROUP 
			AND ( TRANS.INCLUDE_IN_TOTALS = 'Y' )
	</statement>
	
	<statement>
        UPDATE SYS_LANGUAGE SET RESOURCE_KEY = 'lbl_Cost_Per_KG' WHERE RESOURCE_KEY = 'lbl_Cost_Per_UOM'
    </statement>
    
   	<statement>
    	 UPDATE SYS_LANGUAGE SET TEXT = 'Kosten pro kg' WHERE RESOURCE_KEY = 'lbl_Cost_Per_KG' AND LANGUAGE_ID = 'DE'
    </statement>
   
   	<statement>
    	 UPDATE SYS_LANGUAGE SET TEXT = 'Cost Per KG' WHERE RESOURCE_KEY = 'lbl_Cost_Per_KG' AND LANGUAGE_ID = 'EN'
    </statement>
    
    <statement>
    	 UPDATE SYS_LANGUAGE SET TEXT = 'Costo por KG' WHERE RESOURCE_KEY = 'lbl_Cost_Per_KG' AND LANGUAGE_ID = 'ES'
    </statement>

   	<statement>
    	 UPDATE SYS_LANGUAGE SET TEXT = 'Coût par kg' WHERE RESOURCE_KEY = 'lbl_Cost_Per_KG' AND LANGUAGE_ID = 'FR'
    </statement>
    
    <statement>
    	 UPDATE SYS_LANGUAGE SET TEXT = 'Kg-ra jutó költség' WHERE RESOURCE_KEY = 'lbl_Cost_Per_KG' AND LANGUAGE_ID = 'HU'
    </statement>
    
    <statement>
    	 UPDATE SYS_LANGUAGE SET TEXT = 'Costo per KG' WHERE RESOURCE_KEY = 'lbl_Cost_Per_KG' AND LANGUAGE_ID = 'IT'
    </statement>

    <statement>
    	 UPDATE SYS_LANGUAGE SET TEXT = 'Kosten per kg' WHERE RESOURCE_KEY = 'lbl_Cost_Per_KG' AND LANGUAGE_ID = 'NL'
    </statement>

    <statement>
    	 UPDATE SYS_LANGUAGE SET TEXT = 'Koszt za KG' WHERE RESOURCE_KEY = 'lbl_Cost_Per_KG' AND LANGUAGE_ID = 'PL'
    </statement>
	
</DDL>
