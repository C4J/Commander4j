<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE SQL SYSTEM "sql.dtd"> 
<SQL>
	<jdbcDriver Type="oracle.jdbc.driver.OracleDriver">
		<?JDBPalletHistory ?>
		<statement>
			<id>JDBPalletHistory.write</id>
			<text>insert into {schema}APP_PALLET_HISTORY (transaction_ref,transaction_type,transaction_subtype,transaction_date,sscc,despatch_no,location_id,material,batch_number,process_order,quantity,uom,date_of_manufacture,status,ean,variant,user_id,confirmed,layers,sscc_expiry_date,customer_id,mhn_number,decision,equipment_type) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBPalletHistory.selectWithExpiry</id>
			<text>select * from [view_pallet_history_expiry]</text>
		</statement>
		<statement>
			<id>JDBPalletHistory.select</id>
			<text>select * from [view_pallet_history]</text>
		</statement>
		<statement>
			<id>JDBPalletHistory.insertFromPallet</id>
			<text>INSERT INTO APP_PALLET_HISTORY (TRANSACTION_REF,TRANSACTION_TYPE,TRANSACTION_SUBTYPE,TRANSACTION_DATE,SSCC,LOCATION_ID,MATERIAL,BATCH_NUMBER,	PROCESS_ORDER,QUANTITY,
					    	UOM,DATE_OF_MANUFACTURE,STATUS,EAN,VARIANT,DESPATCH_NO,USER_ID,CONFIRMED,LAYERS,SSCC_EXPIRY_DATE,CUSTOMER_ID,MHN_NUMBER,DECISION,EQUIPMENT_TYPE) 
				  SELECT ? as TRANSACTION_REF,? as TRANSACTION_TYPE,? AS TRANSACTION_SUBTYPE,? AS TRANSACTION_DATE,SSCC,LOCATION_ID,MATERIAL,BATCH_NUMBER,PROCESS_ORDER,QUANTITY,
							UOM,DATE_OF_MANUFACTURE,STATUS,EAN,VARIANT,DESPATCH_NO,? AS USER_ID,CONFIRMED,LAYERS,SSCC_EXPIRY_DATE,CUSTOMER_ID,MHN_NUMBER,DECISION,EQUIPMENT_TYPE FROM APP_PALLET WHERE DESPATCH_NO = ?</text>
		</statement>		
		<?JDBControl ?>
		<statement>
			<id>JDBControl.lockRecord</id>
			<text>update SYS_CONTROL set key_value = key_value where system_key = ?</text>
		</statement>
		<statement>
			<id>JDBControl.create</id>
			<text>insert into {schema}SYS_CONTROL (system_key,key_value,description) values (?,?,?)</text>
		</statement>
		<statement>
			<id>JDBControl.delete</id>
			<text>delete from {schema}SYS_CONTROL where system_key = ?</text>
		</statement>
		<statement>
			<id>JDBControl.getControlData</id>
			<text>select * from {schema}SYS_CONTROL order by system_key</text>
		</statement>
		<statement>
			<id>JDBControl.getProperties</id>
			<text>select * from {schema}SYS_CONTROL where system_key = ?</text>
		</statement>
		<statement>
			<id>JDBControl.isValidSystemKey</id>
			<text>select system_key from {schema}SYS_CONTROL where system_key = ?</text>
		</statement>
		<statement>
			<id>JDBControl.update</id>
			<text>update {schema}SYS_CONTROL set key_value =?,description=? where System_key = ?</text>
		</statement>
		<?JDBGroup ?>
		<statement>
			<id>JDBGroup.create</id>
			<text>insert into {schema}SYS_GROUPS (group_id,description) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBGroup.delete</id>
			<text>delete from {schema}SYS_GROUPS where group_id = ?</text>
		</statement>
		<statement>
			<id>JDBGroup.getGroupIds</id>
			<text>select group_id from {schema}SYS_GROUPS order by group_id</text>
		</statement>
		<statement>
			<id>JDBGroup.getGroups</id>
			<text>select * from {schema}SYS_GROUPS order by group_id</text>
		</statement>		
		<statement>
			<id>JDBGroup.getGroupProperties</id>
			<text>select * from {schema}SYS_GROUPS where group_id = ?</text>
		</statement>
		<statement>
			<id>JDBGroup.isValidGroupId</id>
			<text>select group_id from {schema}SYS_GROUPS where group_id = ?</text>
		</statement>
		<statement>
			<id>JDBGroup.renameTo</id>
			<text>update {schema}SYS_GROUPS set group_id=? where group_id = ?</text>
		</statement>
		<statement>
			<id>JDBGroup.update</id>
			<text>update {schema}SYS_GROUPS set description=? where group_id=?</text>
		</statement>
		<?JDBGroupPermissions ?>
		<statement>
			<id>JDBGroupPermissions.create</id>
			<text>insert into {schema}SYS_GROUP_PERMISSIONS (group_id,module_id) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBGroupPermissions.deletePermissionsForModule</id>
			<text>delete from {schema}SYS_GROUP_PERMISSIONS where module_id=?</text>
		</statement>
		<statement>
			<id>JDBGroupPermissions.delete</id>
			<text>delete from {schema}SYS_GROUP_PERMISSIONS where group_id = ? and module_id=?</text>
		</statement>
		<statement>
			<id>JDBGroupPermissions.getModulesAssigned</id>
			<text>select * from [view_group_permissions]where group_id = ? order by module_id</text>
		</statement>
		<statement>
			<id>JDBGroupPermissions.getModulesUnAssigned</id>
			<text>select * from {schema}SYS_MODULES where module_id not in (select module_id from {schema}SYS_GROUP_PERMISSIONS where group_id = ?) order by module_id</text>
		</statement>
		<statement>
			<id>JDBGroupPermissions.isValidGroupPermission</id>
			<text>select group_id from {schema}SYS_GROUP_PERMISSIONS where group_id = ? and module_id = ?</text>
		</statement>
		<statement>
			<id>JDBGroupPermissions.removeModulesfromGroup</id>
			<text>delete from {schema}SYS_GROUP_PERMISSIONS where group_id = ?</text>
		</statement>
		<statement>
			<id>JDBGroupPermissions.renameGroupTo</id>
			<text>update {schema}SYS_GROUP_PERMISSIONS set group_id =? where group_id = ?</text>
		</statement>
		<statement>
			<id>JDBGroupPermissions.renameModuleTo</id>
			<text>update {schema}SYS_GROUP_PERMISSIONS set module_id =? where module_id = ?</text>
		</statement>
		<?JDBMenus ?>
		<statement>
			<id>JDBMenus.create</id>
			<text>insert into {schema}SYS_MENUS (menu_id,module_id,sequence_id) values (?,?,?)</text>
		</statement>
		<statement>
			<id>JDBMenus.delete</id>
			<text>delete from {schema}SYS_MENUS where menu_id = ? and module_id = ?</text>
		</statement>
		<statement>
			<id>JDBMenus.deleteMenusForModuleId</id>
			<text>delete from {schema}SYS_MENUS where module_id = ?</text>
		</statement>
		<statement>
			<id>JDBMenus.deleteMenusForMenuId</id>
			<text>delete from {schema}SYS_MENUS where menu_id = ?</text>
		</statement>
		<statement>
			<id>JDBMenus.rewriteMenu</id>
			<text>delete from {schema}SYS_MENUS where menu_id = ?</text>
		</statement>
		<statement>
			<id>JDBMenus.update</id>
			<text>update {schema}SYS_MENUS set menu_id=?,module_id=?,sequence_id=? where menu_id=? and module_id=?</text>
		</statement>
		<statement>
			<id>JDBMenus.renameModuleTo</id>
			<text>update {schema}SYS_MENUS set module_id = ? where module_id = ?</text>
		</statement>
		<statement>
			<id>JDBMenus.renameMenuTo</id>
			<text>update {schema}SYS_MENUS set menu_id = ? where menu_id = ?</text>
		</statement>
		<?JDBModule ?>
		<statement>
			<id>JDBModule.getModulesUnAssignedtoToolbar</id>
			<text>select * from {schema}SYS_MODULES where module_type = 'FORM' and module_id not in (select module_id from {schema}SYS_TOOLBAR) order by module_id</text>
		</statement>
		<statement>
			<id>JDBModule.getModulesAssignedtoToolbar</id>
			<text>select * from [view_toolbar]order by sequence_id</text>
		</statement>
		<statement>
			<id>JDBModule.getModulesUnAssignedtoRFMenu</id>
			<text>select * from {schema}SYS_MODULES where module_type = 'FORM' and rf_active = 'Y' and module_id not in (select module_id from {schema}SYS_RF_MENU) order by module_id</text>
		</statement>
		<statement>
			<id>JDBModule.getModulesAssignedtoRFMenu</id>
			<text>select * from [view_rf_menu]order by sequence_id</text>
		</statement>
		<statement>
			<id>JDBModule.addGroup</id>
			<text>insert into {schema}SYS_GROUP_PERMISSIONS (group_id,module_id) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBModule.create</id>
			<text>insert into {schema}SYS_MODULES (module_id,resource_key,dk_active,rf_active,module_type,helpset_id) values (?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBModule.delete</id>
			<text>delete from {schema}SYS_MODULES where module_id = ?</text>
		</statement>
		<statement>
			<id>JDBModule.getFormIds</id>
			<text>select module_id from {schema}SYS_MODULES where module_type = 'FORM' order by module_id</text>
		</statement>
		<statement>
			<id>JDBModule.getGroupsAssigned</id>
			<text>select sg.* from SYS_GROUP_PERMISSIONS sgp, SYS_GROUPS sg where sgp.module_id = ? and sg.GROUP_ID = sgp.GROUP_ID order by sgp.group_id</text>
		</statement>
		<statement>
			<id>JDBModule.getGroupsUnAssigned</id>
			<text>select group_id from {schema}SYS_GROUPS where group_id not in (select group_id from {schema}SYS_GROUP_PERMISSIONS where module_id = ?) order by group_id</text>
		</statement>
		<statement>
			<id>JDBModule.getMenuIds</id>
			<text>select module_id,module_type,icon_filename from {schema}SYS_MODULES where module_type = 'MENU' order by module_id</text>
		</statement>
		<statement>
			<id>JDBModule.getModuleIds</id>
			<text>select * from {schema}SYS_MODULES order by module_id</text>
		</statement>
		<statement>
			<id>JDBModule.getModuleIdsByType</id>
			<text>select * from {schema}SYS_MODULES where module_type = ? order by module_id</text>
		</statement>
		<statement>
			<id>JDBModule.getModuleProperties</id>
			<text>select * from {schema}SYS_MODULES where module_id = ?</text>
		</statement>
		<statement>
			<id>JDBModule.getModulesAssignedtoMenu</id>
			<text>select * from [view_menu_structure]where menu_id = ? order by sequence_id</text>
		</statement>
		<statement>
			<id>JDBModule.getModulesUnAssignedtoMenu</id>
			<text>select * from {schema}SYS_MODULES where module_id&lt;&gt;? and module_type&lt;&gt;'FUNCTION' and module_type&lt;&gt;'REPORT' and module_id not in (select module_id from {schema}SYS_MENUS where menu_id = ?) order by module_id</text>
		</statement>
		<statement>
			<id>JDBModule.removeGroup</id>
			<text>delete from {schema}SYS_GROUP_PERMISSIONS where module_id = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBModule.renameTo</id>
			<text>update {schema}SYS_MODULES set module_id=? where module_id = ?</text>
		</statement>
		<statement>
			<id>JDBModule.update</id>
			<text>update {schema}SYS_MODULES set resource_key=?,dk_active=?,rf_active=?,module_type=?,hint=?,icon_filename=?,helpset_id=?,report_filename=?,exec_filename=?,exec_dir=?,print_preview=?,print_dialog=?,print_copies=?,report_type=?,auto_labeller_command_file=?,auto_labeller_label_file=? where module_id=?</text>
		</statement>
		<statement>
			<id>JDBModule.getModulesofTypeforUser</id>
			<text>SELECT * from {schema}SYS_MODULES WHERE module_type = ? AND MODULE_ID IN (select module_id from {schema}SYS_MODULES where dk_active = 'Y' and module_id in (select module_id from {schema}SYS_GROUP_PERMISSIONS where group_id in (select group_id from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ?))) order by module_id</text>
		</statement>
		<statement>
			<id>JDBModule.isValidModuleId</id>
			<text>select * from {schema}SYS_MODULES where module_id = ?</text>
		</statement>
		<?JDBToolbar ?>
		<statement>
			<id>JDBToolbar.create</id>
			<text>insert into {schema}SYS_TOOLBAR (module_id,sequence_id) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBToolbar.delete</id>
			<text>delete from {schema}SYS_TOOLBAR where module_id = ?</text>
		</statement>
		<statement>
			<id>JDBToolbar.renameModuleTo</id>
			<text>update {schema}SYS_TOOLBAR set module_id = ? where module_id = ?</text>
		</statement>
		<statement>
			<id>JDBToolbar.rewriteToolbar</id>
			<text>delete from {schema}SYS_TOOLBAR</text>
		</statement>
		<statement>
			<id>JDBToolbar.update</id>
			<text>update {schema}SYS_TOOLBAR set sequence_id=? where module_id=?</text>
		</statement>
		<?JDBRFMenu ?>
		<statement>
			<id>JDBRFMenu.create</id>
			<text>insert into {schema}SYS_RF_MENU (module_id,sequence_id) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBRFMenu.delete</id>
			<text>delete from {schema}SYS_RF_MENU where module_id = ?</text>
		</statement>
		<statement>
			<id>JDBRFMenu.renameModuleTo</id>
			<text>update {schema}SYS_RF_MENU set module_id = ? where module_id = ?</text>
		</statement>
		<statement>
			<id>JDBRFMenu.rewriteRFMenu</id>
			<text>delete from {schema}SYS_RF_MENU</text>
		</statement>
		<statement>
			<id>JDBRFMenu.update</id>
			<text>update {schema}SYS_RF_MENU set sequence_id=? where module_id=?</text>
		</statement>
		<?JDBUser ?>
		<statement>
			<id>JDBUser.loadModules</id>
			<text>select distinct(module_id) from [view_security] where user_id = ? order by module_id</text>
		</statement>
		<statement>
			<id>JDBUser.changePassword</id>
			<text>update {schema}SYS_USERS set Password = ?,last_password_change = ?,password_version=password_version+1,password_change_required='N',password_encrypted=?  where user_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.recordPasswordChange</id>
			<text>insert into {schema}SYS_USERS_password_history (user_id,password_version,password)  (select user_id,password_version,password from {schema}SYS_USERS where user_id=?)</text>
		</statement>
		<statement>
			<id>JDBUser.archivePasswordHistory</id>
			<text>delete from {schema}SYS_USERS_password_history where user_id = ? and password_version &lt;= ? </text>
		</statement>	
		<statement>
			<id>JDBUser.renamePasswordHistory</id>
			<text>update {schema}SYS_USERS_password_history set user_id = ? where user_id = ?</text>
		</statement>	
		<statement>
			<id>JDBUser.deletePasswordHistory</id>
			<text>delete from {schema}SYS_USERS_password_history where user_id = ?</text>
		</statement>		
		<statement>
			<id>JDBUser.findInPasswordHistory</id>
			<text>select * from {schema}SYS_USERS_password_history where user_id = ? and password_version &gt;= ? and password = ? </text>
		</statement>			
		<statement>
			<id>JDBUser.create</id>
			<text>insert into {schema}SYS_USERS(user_id,password,password_version) values (?,'tempcreate',0)</text>
		</statement>
		<statement>
			<id>JDBUser.delete</id>
			<text>delete from {schema}SYS_USERS where user_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.lock</id>
			<text>update {schema}SYS_USERS set account_locked = 'Y',account_locked_date=? where User_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.unlock</id>
			<text>update {schema}SYS_USERS set account_locked = 'N',bad_password_attempts = 0,account_locked_date=null where user_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.disable</id>
			<text>update {schema}SYS_USERS set account_enabled = 'N' where User_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.enable</id>
			<text>update {schema}SYS_USERS set account_enabled = 'Y' where user_id = ?</text>
		</statement>		
		<statement>
			<id>JDBUser.getUserGroupsUnAssigned</id>
			<text>select group_id from {schema}SYS_GROUPS where group_id not in (select group_id from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ?) order by group_id</text>
		</statement>
		<statement>
			<id>JDBUser.getUserIds</id>
			<text>select * from {schema}SYS_USERS order by user_id</text>
		</statement>
		<statement>
			<id>JDBUser.getUserPermisions</id>
			<text>select * from {schema}view_permissions order by user_id,group_id,module_id</text>
		</statement>		
		<statement>
			<id>JDBUser.getUserProperties</id>
			<text>select * from {schema}SYS_USERS where user_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.isValidPassword</id>
			<text>select * from {schema}SYS_USERS where user_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.isValidUserId</id>
			<text>select user_id,password_version from {schema}SYS_USERS where user_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.login</id>
			<text>update {schema}SYS_USERS set last_logon = ?,app_version = ?,workstation_id=?,bad_password_attempts=0 where User_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.login(fail)</id>
			<text>update {schema}SYS_USERS set bad_password_attempts = bad_password_attempts + 1 where user_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.renameTo</id>
			<text>update {schema}SYS_USERS set user_id=? where user_id = ?</text>
		</statement>
		<statement>
			<id>JDBUser.update</id>
			<text>update {schema}SYS_USERS set password_expires=?,password_change_allowed=?,language_id=?,user_comment=?,account_expires=?,account_expiry_date=?,email_address=?,password_change_required=? where user_id=?</text>
		</statement>
		<?JDBUserGroupMembership ?>
		<statement>
			<id>JDBUserGroupMembership.addUsertoGroup</id>
			<text>insert into {schema}SYS_USER_GROUP_MEMBERSHIP (user_id,group_id) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.create</id>
			<text>insert into {schema}SYS_USER_GROUP_MEMBERSHIP (user_id,group_id) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.delete</id>
			<text>delete from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ? and group_id=?</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.getGroupsAssignedtoUser</id>
			<text>select group_id from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ? order by user_id</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.getUsersAssignedtoGroup</id>
			<text>select ugm.GROUP_ID,U.* 
				from SYS_USER_GROUP_MEMBERSHIP ugm, SYS_USERS u 
				where ugm.group_id=? 
				and u.USER_ID = ugm.USER_ID</text>
		</statement>				
		<statement>
			<id>JDBUserGroupMembership.isValidUserGroupMembership</id>
			<text>select * from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.removeAllGroupsfromUser</id>
			<text>delete from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ?</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.removeAllUsersfromGroup</id>
			<text>delete from {schema}SYS_USER_GROUP_MEMBERSHIP where group_id = ?</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.removeGroupfromUser</id>
			<text>delete from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.removeUserfromGroup</id>
			<text>delete from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.renameGroupTo</id>
			<text>update {schema}SYS_USER_GROUP_MEMBERSHIP set group_id =? where group_id = ?</text>
		</statement>
		<statement>
			<id>JDBUserGroupMembership.renameUserTo</id>
			<text>update {schema}SYS_USER_GROUP_MEMBERSHIP set user_id =? where user_id = ?</text>
		</statement>
		<?JDBUom ?>
		<statement>
			<id>JDBUom.create</id>
			<text>insert into {schema}APP_UOM (uom,iso_uom,description,local_uom) values (?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBUom.delete</id>
			<text>delete from {schema}APP_UOM where uom = ?</text>
		</statement>
		<statement>
			<id>JDBUom.getUomProperties</id>
			<text>select * from {schema}APP_UOM where uom = ?</text>
		</statement>
		<statement>
			<id>JDBUom.getISOUomProperties</id>
			<text>select * from {schema}APP_UOM where iso_uom = ?</text>
		</statement>
		<statement>
			<id>JDBUom.getLocalUomProperties</id>
			<text>select * from {schema}APP_UOM where local_uom = ?</text>
		</statement>
		<statement>
			<id>JDBUom.getUoms</id>
			<text>select * from {schema}APP_UOM order by uom</text>
		</statement>
		<statement>
			<id>JDBUom.isValidUom</id>
			<text>select * from {schema}APP_UOM where uom = ?</text>
		</statement>
		<statement>
			<id>JDBUom.renameTo</id>
			<text>update {schema}APP_UOM set uom =? where uom =?</text>
		</statement>
		<statement>
			<id>JDBUom.update</id>
			<text>update {schema}APP_UOM set description=?,iso_uom=?,local_uom=? where uom=?</text>
		</statement>
		<?JInternalFrameMenuTree ?>
		<statement>
			<id>JInternalFrameMenuTree.buildMenuTree</id>
			<text>SELECT * FROM [view_menu_structure]WHERE MENU_ID = ? AND MODULE_ID IN (select module_id from {schema}SYS_MODULES where dk_active = 'Y' and module_id in (select module_id from {schema}SYS_GROUP_PERMISSIONS where group_id in (select group_id from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ?))) order by sequence_id</text>
		</statement>
		<?JMenuRFMenu ?>
		<statement>
			<id>JMenuRFMenu.buildMenu</id>
			<text>SELECT * FROM [view_rf_menu]WHERE MODULE_ID IN (select module_id from {schema}SYS_MODULES where rf_active = 'Y' and module_id in (select module_id from {schema}SYS_GROUP_PERMISSIONS where group_id in (select group_id from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ?))) order by sequence_id</text>
		</statement>
		<?JMenuToolbarMenu ?>
		<statement>
			<id>JMenuToolbarMenu.buildMenu</id>
			<text>SELECT * FROM [view_toolbar]WHERE MODULE_ID IN (select module_id from {schema}SYS_MODULES where dk_active = 'Y' and module_id in (select module_id from {schema}SYS_GROUP_PERMISSIONS where group_id in (select group_id from {schema}SYS_USER_GROUP_MEMBERSHIP where user_id = ?))) order by sequence_id</text>
		</statement>
		<?JDBMaterial ?>
		<statement>
			<id>JDBMaterial.create</id>
			<text>insert into {schema}APP_MATERIAL (material) values (?)</text>
		</statement>
		<statement>
			<id>JDBMaterial.delete</id>
			<text>delete from {schema}APP_MATERIAL where material = ?</text>
		</statement>
		<statement>
			<id>JDBMaterial.getMaterialBatchCount</id>
			<text>select count(batch_number) as batch_number from {schema}APP_MATERIAL_BATCH where material = ?</text>
		</statement>
		<statement>
			<id>JDBMaterial.getMaterialBatches</id>
			<text>select * from {schema}APP_MATERIAL_BATCH where material = ? order by batch_number</text>
		</statement>
		<statement>
			<id>JDBMaterial.getMaterialProperties</id>
			<text>select * from {schema}APP_MATERIAL where material = ?</text>
		</statement>
		<statement>
			<id>JDBMaterial.getMaterialUomCount</id>
			<text>select count(uom) as uom from {schema}APP_MATERIAL_uom where material = ?</text>
		</statement>
		<statement>
			<id>JDBMaterial.getMaterialUoms</id>
			<text>select * from {schema}APP_MATERIAL_uom where material = ? order by uom</text>
		</statement>
		<statement>
			<id>JDBMaterial.isValidMaterial</id>
			<text>select material from {schema}APP_MATERIAL where material = ?</text>
		</statement>
		<statement>
			<id>JDBMaterial.update</id>
			<text>update {schema}APP_MATERIAL set base_uom=?,description=?,gross_weight=?,material_type=?,old_material=?,net_weight=?,weight_uom=?,shelf_life=?,shelf_life_rule=?,shelf_life_uom=?,default_batch_status=?,equipment_type=?,updated=?,inspection_id=?,override_pack_label=?,pack_label_module_id=?,override_pallet_label=?,pallet_label_module_id=?,validate_scan_pallet=?,validate_scan_case=?,validate_scan_each=?,enabled=?,move_after_make_enabled=?,move_after_make_location_id=? where material=?</text>
		</statement>
		<?JDBMaterialUom ?>
		<statement>
			<id>JDBMaterialUom.isValidMaterialUom</id>
			<text>select * from {schema}APP_MATERIAL_uom where material = ? and uom=?</text>
		</statement>
		<statement>
			<id>JDBMaterialUom.create</id>
			<text>insert into {schema}APP_MATERIAL_uom (material,uom) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBMaterialUom.update</id>
			<text>update {schema}APP_MATERIAL_uom set ean=?,variant=?,numerator=?,denominator=?,override=? where material=? and uom=?</text>
		</statement>
		<statement>
			<id>JDBMaterialUom.delete</id>
			<text>delete from {schema}APP_MATERIAL_uom where material = ? and uom = ?</text>
		</statement>
		<statement>
			<id>JDBMaterialUom.getMaterialUomProperties</id>
			<text>select * from {schema}APP_MATERIAL_uom where material = ? and uom = ?</text>
		</statement>
		<statement>
			<id>JDBMaterialUom.getMaterialUoms</id>
			<text>select * from {schema}APP_MATERIAL_uom where material=? order by uom</text>
		</statement>
		<?JDBMaterialBatch ?>
		<statement>
			<id>JDBMaterialBatch.getMaterialBatchProperties</id>
			<text>select * from {schema}APP_MATERIAL_BATCH where material = ? and batch_number = ?</text>
		</statement>
		<statement>
			<id>JDBMaterialBatch.isValidMaterialBatch</id>
			<text>select * from {schema}APP_MATERIAL_BATCH where material = ? and batch_number=?</text>
		</statement>
		<statement>
			<id>JDBMaterialBatch.update</id>
			<text>update {schema}APP_MATERIAL_BATCH set status=?,expiry_date=? where material=? and batch_number=?</text>
		</statement>
		<statement>
			<id>JDBMaterialBatch.create</id>
			<text>insert into {schema}APP_MATERIAL_BATCH (material,batch_number) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBMaterialBatch.delete</id>
			<text>delete from {schema}APP_MATERIAL_BATCH where material= ? and batch_number = ?</text>
		</statement>
		<?JDBJourneyRef ?>
		<statement>
			<id>JDBJourney.getProperties</id>
			<text>select * from {schema}APP_JOURNEY where journey_ref = ?</text>
		</statement>
		<statement>
			<id>JDBJourney.isValid</id>
			<text>select * from {schema}APP_JOURNEY where journey_ref = ?</text>
		</statement>
		<statement>
			<id>JDBJourney.update</id>
			<text>update {schema}APP_JOURNEY set status=?,despatch_no=?,date_updated=?,location_id_to=?,timeslot=?,load_type=?,load_type_desc=?,haulier=? where journey_ref=?</text>
		</statement>
		<statement>
			<id>JDBJourney.create</id>
			<text>insert into {schema}APP_JOURNEY (journey_ref,status,date_updated,location_id_to,timeslot,load_type,load_type_desc,haulier) values (?,?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBJourney.delete</id>
			<text>delete from {schema}APP_JOURNEY where journey_ref = ?</text>
		</statement>	
		<statement>
			<id>JDBJourney.getJourneyList</id>
			<text>select * from {schema}APP_JOURNEY where status = 'Unassigned' order by journey_ref</text>
		</statement>						
		<?JDBMaterialType ?>
		<statement>
			<id>JDBMaterialType.getMaterialTypeProperties</id>
			<text>select * from {schema}APP_MATERIAL_type where material_type = ?</text>
		</statement>
		<statement>
			<id>JDBMaterialType.getMaterialTypes</id>
			<text>select * from {schema}APP_MATERIAL_type order by material_type</text>
		</statement>
		<statement>
			<id>JDBMaterialType.create</id>
			<text>insert into {schema}APP_MATERIAL_type (material_type,description) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBMaterialType.delete</id>
			<text>delete from {schema}APP_MATERIAL_type where material_type = ?</text>
		</statement>
		<statement>
			<id>JDBMaterialType.renameTo</id>
			<text>update {schema}APP_MATERIAL_type set material_type =? where material_type =?</text>
		</statement>
		<statement>
			<id>JDBMaterialType.update</id>
			<text>update {schema}APP_MATERIAL_type set description=?,override_pack_label=?,pack_label_module_id=?,override_pallet_label=?,pallet_label_module_id=? where material_type=?</text>
		</statement>
		<statement>
			<id>JDBMaterialType.isValidMaterialType</id>
			<text>select * from {schema}APP_MATERIAL_type where material_type = ?</text>
		</statement>
		<?JDBProcessOrder ?>
		<statement>
			<id>JDBProcessOrder.getResources</id>
			<text>select distinct required_resource from APP_PROCESS_ORDER where required_resource > '' and required_resource not in (select required_resource from {schema}APP_AUTO_LABELLER_RESOURCES where line = ? and group_id = ?) order by required_resource</text>
		</statement>		
		<statement>
			<id>JDBProcessOrder.create</id>
			<text>insert into {schema}APP_PROCESS_ORDER (process_order) values (?)</text>
		</statement>
		<statement>
			<id>JDBProcessOrder.delete</id>
			<text>delete from {schema}APP_PROCESS_ORDER where process_order = ?</text>
		</statement>
		<statement>
			<id>JDBProcessOrder.getProcessOrderProperties</id>
			<text>select * from {schema}APP_PROCESS_ORDER where process_order = ? </text>
		</statement>
		<statement>
			<id>JDBProcessOrder.isValidProcessOrder</id>
			<text>select process_order from {schema}APP_PROCESS_ORDER where process_order = ?</text>
		</statement>
		<statement>
			<id>JDBProcessOrder.update</id>
			<text>update {schema}APP_PROCESS_ORDER set material=?,description=?,status=?,location_id=?,due_date=?,recipe_id=?,required_quantity=?,required_uom=?,default_pallet_status=?,updated=?,required_resource=?,customer_id=?,inspection_id=? where process_order=?</text>
		</statement>
		<statement>
			<id>JDBProcessOrder.selectWithLimit</id>
			<text>select * from {schema}APP_PROCESS_ORDER</text>
		</statement>
		<statement>
			<id>JDBProcessOrder.ViewResource</id>
			<text>select * from view_process_order_resource</text>
		</statement>	
		<statement>
			<id>JDBProcessOrder.ViewResourceAlternate</id>
			<text>select *,? AS BATCH_SUFFIX_OVERRIDE from view_process_order_resource where process_order=?</text>
		</statement>	
		<?JDBLocation ?>
		<statement>
			<id>JDBLocation.create</id>
			<text>insert into {schema}APP_LOCATION (location_id) values (?)</text>
		</statement>
		<statement>
			<id>JDBLocation.delete</id>
			<text>delete from {schema}APP_LOCATION where location_id = ?</text>
		</statement>
		<statement>
			<id>JDBLocation.update</id>
			<text>update {schema}APP_LOCATION set plant=?,warehouse=?,gln=?,description=?,storage_location=?,storage_type=?,storage_section=?,storage_bin=?,equipment_tracking_id=?,msg_despatch_confirm=?,msg_despatch_preadvice=?,msg_despatch_equip_track=?,msg_prod_confirm=?,permitted_pallet_status=?,permitted_batch_status=?,msg_pallet_status=?,msg_pallet_split=?,msg_pallet_delete=?,enabled=?,msg_journey_ref=?,email_despatch=? where location_id=?</text>
		</statement>
		<statement>
			<id>JDBLocation.getLocationProperties</id>
			<text>select * from {schema}APP_LOCATION where location_id = ?</text>
		</statement>
		<statement>
			<id>JDBLocation.getLocationData</id>
			<text>select * from {schema}APP_LOCATION ? order by location_id</text>
		</statement>
		<statement>
			<id>JDBLocation.getLocationList</id>
			<text>select * from {schema}APP_LOCATION where enabled = 'Y' order by location_id</text>
		</statement>
		<statement>
			<id>JDBLocation.isValidLocation</id>
			<text>select location_id from {schema}APP_LOCATION where location_id = ?</text>
		</statement>
		<?JDBPallet ?>
		<statement>
			<id>JDBPallet.rapidConfirm</id>
			<text>update APP_PALLET set confirmed = 'Y', date_of_manufacture = ?, date_updated = ?, updated_by_user_id = ? where sscc = ? and confirmed = 'N'</text>
		</statement>
		<statement>
			<id>JDBPallet.getPalletProperties</id>
			<text>select * from {schema}APP_PALLET where sscc = ?</text>
		</statement>
		<statement>
			<id>JDBPallet.isValidPallet</id>
			<text>select * from {schema}APP_PALLET where sscc= ?</text>
		</statement>
		<statement>
			<id>JDBPallet.create</id>
			<text>insert into {schema}APP_PALLET (sscc,date_created,created_by_user_id) values (?,?,?)</text>
		</statement>
		<statement>
			<id>JDBPallet.update</id>
			<text>update {schema}APP_PALLET set despatch_no=?,location_id=?,material=?,batch_number=?,process_order=?,quantity=?,uom=?,date_of_manufacture=?,status=?,ean=?,variant=?,confirmed=?,layers=?,sscc_expiry_date=?,customer_id=?,mhn_number=?,decision=?,updated_by_user_id=?,date_updated=?,equipment_type=? where sscc = ?</text>
		</statement>
		<statement>
			<id>JDBPallet.updateDespatchNo</id>
			<text>update {schema}APP_PALLET set despatch_no=?,updated_by_user_id=?,date_updated=? where sscc = ?</text>
		</statement>
		<statement>
			<id>JDBPallet.updateLocationID</id>
			<text>update {schema}APP_PALLET set location_id=?,updated_by_user_id=?,date_updated=? where sscc = ?</text>
		</statement>
		<statement>
			<id>JDBPallet.updateStatus</id>
			<text>update {schema}APP_PALLET set status=?,updated_by_user_id=?,date_updated=? where sscc = ?</text>
		</statement>
		<statement>
			<id>JDBPallet.updateMHNNumber</id>
			<text>update {schema}APP_PALLET set mhn_number=?,updated_by_user_id=?,date_updated=? where sscc = ?</text>
		</statement>
		<statement>
			<id>JDBPallet.updateDecision</id>
			<text>update {schema}APP_PALLET set decision=?,updated_by_user_id=?,date_updated=? where sscc = ?</text>
		</statement>
		<statement>
			<id>JDBPallet.assignedToMHN</id>
			<text>select sscc from {schema}APP_PALLET where mhn_number = ?</text>
		</statement>
		<statement>
			<id>JDBPallet.delete</id>
			<text>delete from {schema}APP_PALLET where sscc = ?</text>
		</statement>
		<statement>
			<id>JDBPallet.selectWithExpiry</id>
			<text>select * from [view_pallet_expiry]</text>
		</statement>
		<statement>
			<id>JDBPallet.select</id>
			<text>select * from {schema}APP_PALLET</text>
		</statement>
		<statement>
			<id>JDBPallet.updateLocationIDByDespatchNo</id>
			<text>update {schema}APP_PALLET set location_id=?,updated_by_user_id=?,date_updated=? where despatch_no = ?</text>
		</statement>		
		<?JDBDespatch ?>
		<statement>
			<id>JDBDespatch.create</id>
			<text>insert into {schema}APP_DESPATCH (despatch_no,status) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBDespatch.equipment</id>
			<text>select am.equipment_type,count(am.equipment_type) as total from APP_PALLET ap, APP_MATERIAL am where am.material = ap.material and ap.despatch_no = ? group by am.equipment_type</text>
		</statement>
		<statement>
			<id>JDBDespatch.delete</id>
			<text>delete from {schema}APP_DESPATCH where despatch_no = ?</text>
		</statement>
		<statement>
			<id>JDBDespatch.update</id>
			<text>update {schema}APP_DESPATCH set despatch_date=?,location_id_from=?,status=?,trailer=?,haulier=?,total_pallets=?,location_id_to=?,transaction_ref=?,load_no=?,journey_ref=? where despatch_no=?</text>
		</statement>
		<statement>
			<id>JDBDespatch.setUserID</id>
			<text>update {schema}APP_DESPATCH set user_id=? where despatch_no=?</text>
		</statement>
		<statement>
			<id>JDBDespatch.setConfirmed</id>
			<text>update {schema}APP_DESPATCH set transaction_ref=?,status=?,despatch_date=?,total_pallets=(select count(sscc) from {schema}APP_PALLET where despatch_no = ?) where despatch_no=?</text>
		</statement>		
		<statement>
			<id>JDBDespatch.getDespatchProperties</id>
			<text>select * from {schema}APP_DESPATCH where despatch_no = ?</text>
		</statement>
		<statement>
			<id>JDBDespatch.getDespatchPropertiesFromTransactionRef</id>
			<text>select * from {schema}APP_DESPATCH where transaction_ref = ?</text>
		</statement>
		<statement>
			<id>JDBDespatch.count</id>
			<text>select count(sscc) as pallet_count from {schema}APP_PALLET where despatch_no = ?</text>
		</statement>
		<statement>
			<id>JDBDespatch.getDespatchData</id>
			<text>select * from {schema}APP_DESPATCH ? order by despatch_no</text>
		</statement>
		<statement>
			<id>JDBDespatch.isValidDespatch</id>
			<text>select despatch_no from {schema}APP_DESPATCH where despatch_no = ?</text>
		</statement>
		<statement>
			<id>JDBDespatch.browse</id>
			<text>select * from (select * from {schema}APP_DESPATCH where status = ? order by despatch_no desc) order by despatch_no asc fetch first ? rows only</text>
		</statement>
		<statement>
			<id>JDBDespatch.getAssignedSSCCs</id>
			<text>select sscc from {schema}APP_PALLET where despatch_no = ? order by sscc</text>
		</statement>
		<statement>
			<id>JDBDespatch.checkPalletBatchStatus</id>
			<text>
			SELECT
				APP_PALLET.SSCC,
				APP_PALLET.STATUS "PALLET_STATUS",
				APP_PALLET.LOCATION_ID,
				APP_PALLET.DESPATCH_NO,
				APP_MATERIAL_BATCH.MATERIAL,
				APP_MATERIAL_BATCH.BATCH_NUMBER,
				APP_MATERIAL_BATCH.STATUS AS "BATCH_STATUS" 
			FROM
				APP_PALLET,
				APP_MATERIAL_BATCH 
			WHERE
				APP_MATERIAL_BATCH.MATERIAL = APP_PALLET.MATERIAL 
				AND APP_MATERIAL_BATCH.BATCH_NUMBER = APP_PALLET.BATCH_NUMBER 
				AND APP_PALLET.DESPATCH_NO = %1 
				AND (
					APP_PALLET.STATUS NOT IN ( %2 ) 
					OR APP_MATERIAL_BATCH.STATUS NOT IN ( %3 ) 
				)
			</text>
		</statement>
			<statement>
		<id>JDBDespatch.getDespatchPalletWrongLocationCount</id>
			<text>
				select count(sscc) as pallet_count from APP_PALLET where despatch_no = ? and location_id &lt;&gt; ?
			</text>
		</statement>
		<statement>
			<id>JDBDespatch.updateTotalEquipment</id>
			<text>update app_despatch set total_equipment = ? where despatch_no = ?</text>
		</statement>	
		<?JDBInterface ?>
		<statement>
			<id>JDBInterface.getInterfaceProperties</id>
			<text>select * from {schema}SYS_INTERFACE where interface_type = ? and interface_direction = ?</text>
		</statement>
		<statement>
			<id>JDBInterface.isValidInterface</id>
			<text>select * from {schema}SYS_INTERFACE where interface_type = ? and interface_direction=?</text>
		</statement>
		<statement>
			<id>JDBInterface.update</id>
			<text>update {schema}SYS_INTERFACE set Path=?,Enabled=?,Device=?,Format=?,email_flags=?,email_addresses=?,uom_conversion=? where interface_type=? and interface_direction=?</text>
		</statement>
		<statement>
			<id>JDBInterface.create</id>
			<text>insert into {schema}SYS_INTERFACE (interface_type,interface_direction) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBInterface.delete</id>
			<text>delete from {schema}SYS_INTERFACE where interface_type = ? and interface_direction = ?</text>
		</statement>
		<?JDBInterfaceLog ?>
		<statement>
			<id>JDBInterfaceLog.create</id>
			<text>insert into {schema}SYS_INTERFACE_LOG (event_Time,interface_log_id,message_ref,interface_type,message_information,interface_direction,action,message_date,message_status,message_error,workstation_id,filename) values (?,?,?,?,?,?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBInterfaceLog.delete</id>
			<text>delete from {schema}SYS_INTERFACE_LOG where interface_log_id = ?</text>
		</statement>
		<statement>
			<id>JDBInterfaceLog.archive1</id>
			<text>delete from SYS_INTERFACE_LOG where FILENAME in (select FILENAME from SYS_INTERFACE_LOG where INTERFACE_DIRECTION = 'Input' and MESSAGE_STATUS = 'Success')</text>
		</statement>
		<statement>
			<id>JDBInterfaceLog.archive2</id>
			<text>delete from SYS_INTERFACE_LOG where INTERFACE_DIRECTION = 'Output' and MESSAGE_STATUS = 'Success'</text>
		</statement>
		<?JDBInterfaceRequest ?>
		<statement>
			<id>JDBInterfaceRequest.create</id>
			<text>insert into {schema}SYS_INTERFACE_REQUEST (event_Time,interface_request_id,interface_type,workstation_id,transaction_ref,status,filename,request_mode,unique_id) values (?,?,?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBInterfaceRequest.update</id>
			<text>update {schema}SYS_INTERFACE_REQUEST set status=? where interface_request_id = ?</text>
		</statement>
		<statement>
			<id>JDBInterfaceRequest.delete</id>
			<text>delete from {schema}SYS_INTERFACE_REQUEST where interface_request_id = ?</text>
		</statement>
		<statement>
			<id>JDBInterfaceRequest.getInterfaceRequestProperties</id>
			<text>select * from {schema}SYS_INTERFACE_REQUEST where interface_request_id = ?</text>
		</statement>
		<statement>
			<id>JDBInterfaceRequest.getInterfaceRequestIDs</id>
			<text>select * from {schema}SYS_INTERFACE_REQUEST where status = ? order by interface_request_id</text>
		</statement>
		<?JDBReportRequest ?>
		<statement>
			<id>JDBReportRequest.create</id>
			<text>insert into {schema}SYS_REPORT_REQUEST (report_request_id,module_id,invocation_mode,parameter_count,parameter_delimiter,parameter_names,parameter_types,parameter_values,sql,print_queue_name,print_copies) values (?,?,?,?,?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBReportRequest.delete</id>
			<text>delete from {schema}SYS_REPORT_REQUEST where report_request_id = ?</text>
		</statement>
		<statement>
			<id>JDBReportRequest.getReportRequestProperties</id>
			<text>select * from {schema}SYS_REPORT_REQUEST where report_request_id = ?</text>
		</statement>
		<statement>
			<id>JDBReportRequest.getReportRequestIDs</id>
			<text>select * from {schema}SYS_REPORT_REQUEST order by report_request_id</text>
		</statement>
		<?JDBTranslations ?>
		<statement>
			<id>JDBLanguage.getText</id>
			<text>select * from {schema}SYS_LANGUAGE where resource_key = ? and language_id = ?</text>
		</statement>
		<statement>
			<id>JDBLanguage.preLoad</id>
			<text>select * from {schema}SYS_LANGUAGE where resource_key like ? and language_id = ?</text>
		</statement>
		<statement>
			<id>JDBLanguage.isValidKey</id>
			<text>select * from {schema}SYS_LANGUAGE where resource_key = ? and language_id = ?</text>
		</statement>
		<statement>
			<id>JDBLanguage.update</id>
			<text>update {schema}SYS_LANGUAGE set text = ?,mnemonic = ? where resource_key = ? and language_id = ?</text>
		</statement>
		<statement>
			<id>JDBLanguage.delete</id>
			<text>delete from {schema}SYS_LANGUAGE where resource_key = ? and language_id = ?</text>
		</statement>
		<statement>
			<id>JDBLanguage.create</id>
			<text>insert into {schema}SYS_LANGUAGE (resource_key,language_id,text,mnemonic) values (?,?,?,?)</text>
		</statement>
		<?JDBCustomer ?>
		<statement>
			<id>JDBCustomer.getCustomerProperties</id>
			<text>select * from {schema}APP_CUSTOMER where customer_id = ?</text>
		</statement>
		<statement>
			<id>JDBCustomer.getCustomers</id>
			<text>select * from {schema}APP_CUSTOMER order by customer_id</text>
		</statement>
		<statement>
			<id>JDBCustomer.create</id>
			<text>insert into {schema}APP_CUSTOMER (customer_id,customer_name,print_on_label,override_pack_label,pack_label_module_id,override_pallet_label,pallet_label_module_id,customer_data_01,customer_data_02,customer_data_03,customer_data_04,updated,OVERRIDE_BATCH_FORMAT,BATCH_FORMAT,BATCH_VALIDATION) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBCustomer.delete</id>
			<text>delete from {schema}APP_CUSTOMER where customer_id = ?</text>
		</statement>
		<statement>
			<id>JDBCustomer.renameTo</id>
			<text>update {schema}APP_CUSTOMER set customer_id =? where customer_id =?</text>
		</statement>
		<statement>
			<id>JDBCustomer.update</id>
			<text>update {schema}APP_CUSTOMER set customer_name=?,print_on_label=?,override_pack_label=?,pack_label_module_id=?,override_pallet_label=?,pallet_label_module_id=?,customer_data_01=?,customer_data_02=?,customer_data_03=?,customer_data_04=?,updated=?,OVERRIDE_BATCH_FORMAT=?,BATCH_FORMAT=?,BATCH_VALIDATION=? where customer_id=?</text>
		</statement>
		<statement>
			<id>JDBCustomer.isValidCustomer</id>
			<text>select * from {schema}APP_CUSTOMER where customer_id = ?</text>
		</statement>

		<?JDBMHNReason ?>
		<statement>
			<id>JDBMHNReason.getReasonProperties</id>
			<text>select * from {schema}APP_MHN_REASONS where Reason = ?</text>
		</statement>
		<statement>
			<id>JDBMHNReason.getReasons</id>
			<text>select * from {schema}APP_MHN_REASONS order by Reason</text>
		</statement>
		<statement>
			<id>JDBMHNReason.create</id>
			<text>insert into {schema}APP_MHN_REASONS (Reason,description) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBMHNReason.delete</id>
			<text>delete from {schema}APP_MHN_REASONS where Reason = ?</text>
		</statement>
		<statement>
			<id>JDBMHNReason.renameTo</id>
			<text>update {schema}APP_MHN_REASONS set Reason =? where Reason =?</text>
		</statement>
		<statement>
			<id>JDBMHNReason.update</id>
			<text>update {schema}APP_MHN_REASONS set description=? where Reason=?</text>
		</statement>
		<statement>
			<id>JDBMHNReason.isValidReason</id>
			<text>select * from {schema}APP_MHN_REASONS where Reason = ?</text>
		</statement>
		<?JDBDecision ?>
		<statement>
			<id>JDBMHNDecision.getDecisionProperties</id>
			<text>select * from {schema}APP_MHN_DECISIONS where Decision = ?</text>
		</statement>
		<statement>
			<id>JDBMHNDecision.getDecisions</id>
			<text>select * from {schema}APP_MHN_DECISIONS order by Decision</text>
		</statement>
		<statement>
			<id>JDBMHNDecision.create</id>
			<text>insert into {schema}APP_MHN_DECISIONS (Decision,description,color_background,color_foreground,status) values (?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBMHNDecision.delete</id>
			<text>delete from {schema}APP_MHN_DECISIONS where Decision = ?</text>
		</statement>
		<statement>
			<id>JDBMHNDecision.renameTo</id>
			<text>update {schema}APP_MHN_DECISIONS set Decision =? where Decision =?</text>
		</statement>
		<statement>
			<id>JDBMHNDecision.update</id>
			<text>update {schema}APP_MHN_DECISIONS set description=?,color_background=?,color_foreground=?,status=? where Decision=?</text>
		</statement>
		<statement>
			<id>JDBMHNDecision.isValidDecision</id>
			<text>select * from {schema}APP_MHN_DECISIONS where Decision = ?</text>
		</statement>
		<?JDBMHN ?>
		<statement>
			<id>JDBMHN.create</id>
			<text>insert into {schema}APP_MHN (mhn_number,date_created,status,recorder) values (?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBMHN.delete</id>
			<text>delete from {schema}APP_MHN where mhn_number=?</text>
		</statement>
		<statement>
			<id>JDBMHN.delete</id>
			<text>delete from {schema}APP_MHN where mhn_number=?</text>
		</statement>
		<statement>
			<id>JDBMHN.getMHNProperties</id>
			<text>select * from {schema}APP_MHN where mhn_number=?</text>
		</statement>
		<statement>
			<id>JDBMHN.isValidMHN</id>
			<text>select * from {schema}APP_MHN where mhn_number=?</text>
		</statement>
		<statement>
			<id>JDBMHN.update</id>
			<text>update {schema}APP_MHN set recorder=?,initiator=?,reason1=?,reason2=?,reason3=?,date_expected=?,date_resolved=?,status=?,comments=?,required_resource=?,authorisor=?,write_off_ref=?,gs_gstd_ref=? where mhn_number=?</text>
		</statement>
		<statement>
			<id>JDBMHN.palletDecisionSummary</id>
			<text>select mhn_number,decision,sum(quantity) as sum_quantity,count(sscc) as count_sscc from {schema}APP_PALLET where mhn_number = ? group by mhn_number,decision having mhn_number = ?</text>
		</statement>
		<?JDBMaterialLocation ?>
		<statement>
			<id>JDBMaterialLocation.create</id>
			<text>insert into {schema}APP_MATERIAL_LOCATION (material,location_id) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBMaterialLocation.delete</id>
			<text>delete from {schema}APP_MATERIAL_LOCATION where material = ? and location_id = ?</text>
		</statement>
		<statement>
			<id>JDBMaterialLocation.isValidMaterialLocation</id>
			<text>select * from {schema}APP_MATERIAL_LOCATION where material = ? and location_id = ?</text>
		</statement>
		<statement>
			<id>JDBMaterialLocation.update</id>
			<text>update {schema}APP_MATERIAL_LOCATION set status = ? where material = ? and location_id = ?</text>
		</statement>
		<statement>
			<id>JDBMaterialLocation.getProperties</id>
			<text>select * from {schema}APP_MATERIAL_LOCATION where material = ? and location_id = ?</text>
		</statement>
		<?JDBQMInspection ?>
		<statement>
			<id>JDQMInspection.create</id>
			<text>JDBQMInspection insert into {schema}APP_QM_INSPECTION (inspection_id,description,extension_id) values (?,?,?)</text>
		</statement>
		<statement>
			<id>JDBQMInspection.delete</id>
			<text>delete from {schema}APP_QM_INSPECTION where inspection_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMInspection.getProperties</id>
			<text>select * from {schema}APP_QM_INSPECTION where inspection_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMInspection.isValid</id>
			<text>select * from {schema}APP_QM_INSPECTION where inspection_id = ?</text>
		</statement>
		<statement>
			<id>JDQMInspection.update</id>
			<text>update {schema}APP_QM_INSPECTION set description = ? where inspection_id = ?</text>
		</statement>
		<?JDBQMActivity ?>
		<statement>
			<id>JDBQMActivity.getActivities</id>
			<text>select * from {schema}APP_QM_ACTIVITY where inspection_id = ? order by activity_id</text>
		</statement>
		<statement>
			<id>JDBQMActivity.create</id>
			<text>insert into {schema}APP_QM_ACTIVITY (inspection_id,activity_id,description,extension_id) values (?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBQMActivity.delete</id>
			<text>delete from {schema}APP_QM_ACTIVITY where inspection_id = ? and activity_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMActivity.getProperties</id>
			<text>select * from {schema}APP_QM_ACTIVITY where inspection_id = ? and activity_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMActivity.isValid</id>
			<text>select * from {schema}APP_QM_ACTIVITY where inspection_id = ? and activity_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMActivity.update</id>
			<text>update {schema}APP_QM_ACTIVITY set description = ? where inspection_id = ? and activity_id = ?</text>
		</statement>
		<?JDBQMTest ?>
		<statement>
			<id>JDBQMTest.getTests</id>
			<text>select * from {schema}APP_QM_TEST where inspection_id = ? and activity_id =? order by sequence_id</text>
		</statement>
		<statement>
			<id>JDBQMTest.create</id>
			<text>insert into {schema}APP_QM_TEST (inspection_id,activity_id,test_id,sequence_id,extension_id) values (?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBQMTest.delete</id>
			<text>delete from {schema}APP_QM_TEST where inspection_id = ? and activity_id = ? and test_id=?</text>
		</statement>
		<statement>
			<id>JDBQMTest.getProperties</id>
			<text>select * from {schema}APP_QM_TEST where inspection_id = ? and activity_id = ? and test_id=?</text>
		</statement>
		<statement>
			<id>JDBQMTest.isValid</id>
			<text>select * from {schema}APP_QM_TEST where inspection_id = ? and activity_id = ? and test_id=?</text>
		</statement>
		<statement>
			<id>JDBQMTest.update</id>
			<text>update {schema}APP_QM_TEST set sequence_id = ? where inspection_id = ? and activity_id = ? and test_id=?</text>
		</statement>
		<?JDBQMDictionary ?>
		<statement>
			<id>JDBQMDictionary.getTests</id>
			<text>select * from {schema}APP_QM_DICTIONARY order by test_id</text>
		</statement>
		<statement>
			<id>JDBQMDictionary.create</id>
			<text>insert into {schema}APP_QM_DICTIONARY (test_id,field_alignment,description,datatype,uom,required,select_list_id,visible,extension_id,field_width) values (?,?,?,?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBQMDictionary.delete</id>
			<text>delete from {schema}APP_QM_DICTIONARY where test_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMDictionary.getProperties</id>
			<text>select * from {schema}APP_QM_DICTIONARY where test_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMDictionary.isValid</id>
			<text>select * from {schema}APP_QM_DICTIONARY where test_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMDictionary.update</id>
			<text>update {schema}APP_QM_DICTIONARY set field_alignment=?,description=?,datatype=?,uom=?,required=?,select_list_id=?,visible=?,field_width=? where test_id = ?</text>
		</statement>
		<?JDBQMExtension ?>
		<statement>
			<id>JDBQMExtension.getProperties</id>
			<text>select * from {schema}APP_QM_EXTENSION where extension_id = ? and linked_table = ? and fieldname = ?</text>
		</statement>
		<statement>
			<id>JDBQMExtension.create</id>
			<text>insert into {schema}APP_QM_EXTENSION (extension_id,linked_table,fieldname,value) values (?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBQMExtension.delete</id>
			<text>delete from {schema}APP_QM_EXTENSION where extension_id = ? and linked_table = ? and fieldname = ?</text>
		</statement>
		<statement>
			<id>JDBQMExtension.getExtensions</id>
			<text>select * from {schema}APP_QM_EXTENSION where extension_id = ? order by linked_table,fieldname</text>
		</statement>
		<statement>
			<id>JDBQMExtension.update</id>
			<text>update {schema}APP_QM_EXTENSION set value = ? where extension_id = ? and linked_table = ? and fieldname = ?</text>
		</statement>
		<statement>
			<id>JDBQMExtension.isValid</id>
			<text>select * from {schema}APP_QM_EXTENSION where extension_id = ? and linked_table = ? and fieldname = ?</text>
		</statement>
		<?JDBQMSample ?>
		<statement>
			<id>JDBQMSample.getSamples</id>
			<text>select * from {schema}APP_QM_SAMPLE where process_order=? and inspection_id = ? and activity_id = ? order by sample_date</text>
		</statement>
		<statement>
			<id>JDBQMSample.create</id>
			<text>insert into {schema}APP_QM_SAMPLE (sample_id,inspection_id,activity_id,process_order,material,sample_date,user_id,user_data_1,user_data_2,user_data_3,user_data_4) values (?,?,?,?,?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBQMSample.delete</id>
			<text>delete from {schema}APP_QM_SAMPLE where sample_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMSample.getProperties</id>
			<text>select * from {schema}APP_QM_SAMPLE where sample_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMSample.isValid</id>
			<text>select * from {schema}APP_QM_SAMPLE where sample_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMSample.update</id>
			<text>update {schema}APP_QM_SAMPLE set inspection_id=?,activity_id=?,process_order=?,material=?,sample_date=?,user_id=?,user_data_1=?,user_data_2=?,user_data_3=?,user_data_4=? where sample_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMSample.selectWithLimit</id>
			<text>select * from {schema}APP_QM_SAMPLE</text>
		</statement>
		<?JDBQMResult ?>
		<statement>
			<id>JDBQMResult.getResults</id>
			<text>select * from {schema}APP_QM_RESULT where sample_id = ? and test_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMResult.create</id>
			<text>insert into {schema}APP_QM_RESULT (sample_id,test_id,value,updated,user_id,status,processed) values (?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBQMResult.delete</id>
			<text>delete from {schema}APP_QM_RESULT where sample_id = ? and test_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMResult.getProperties</id>
			<text>select * from {schema}APP_QM_RESULT where sample_id = ? and test_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMResult.isValid</id>
			<text>select * from {schema}APP_QM_RESULT where sample_id = ? and test_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMResult.update</id>
			<text>update {schema}APP_QM_RESULT set value=?,updated=?,user_id=?,status=?,processed=? where sample_id = ? and test_id = ?</text>
		</statement>
		<?JDBQMSequenceList ?>
		<statement>
			<id>JDBQMSelectList.getList</id>
			<text>select * from {schema}APP_QM_SELECTLIST where select_list_id = ? order by sequence,value</text>
		</statement>
		<statement>
			<id>JDBQMSelectList.getLists</id>
			<text>select * from {schema}APP_QM_SELECTLIST order by select_list_id,sequence,value</text>
		</statement>
		<statement>
			<id>JDBQMSelectList.create</id>
			<text>insert into {schema}APP_QM_SELECTLIST (select_list_id,value,description,sequence,visible) values (?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBQMSelectList.delete</id>
			<text>delete from {schema}APP_QM_SELECTLIST where select_list_id = ? and value = ?</text>
		</statement>
		<statement>
			<id>JDBQMSelectList.getProperties</id>
			<text>select * from {schema}APP_QM_SELECTLIST where select_list_id = ? and value = ?</text>
		</statement>
		<statement>
			<id>JDBQMSelectList.isValid</id>
			<text>select * from {schema}APP_QM_SELECTLIST where select_list_id = ? and value = ?</text>
		</statement>
		<statement>
			<id>JDBQMSelectList.update</id>
			<text>update {schema}APP_QM_SELECTLIST set description = ?,sequence=?,visible=? where select_list_id = ? and value = ?</text>
		</statement>
		<statement>
			<id>JDBQMSelectList.getSummary</id>
			<text>select distinct(select_list_id) as select_list_id from {schema}APP_QM_SELECTLIST order by select_list_id</text>
		</statement>
		<?JDBAutoLabeller?>
		<statement>
			<id>JDBAutoLabeller.create</id>
			<text>insert into {schema}APP_AUTO_LABELLER (line,group_id,description,prefix_code,unique_id,modified,validate_resource,validate_workstation) values (?,?,?,?,?,?,?,?)</text>
		</statement>	
		<statement>
			<id>JDBAutoLabeller.resend</id>
			<text>update {schema}APP_AUTO_LABELLER set modified = ? where line = ? and group_id = ?</text>
		</statement>			
		<statement>
			<id>JDBAutoLabeller.delete</id>
			<text>delete from {schema}APP_AUTO_LABELLER where line = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBAutoLabeller.renameTo</id>
			<text>update {schema}APP_AUTO_LABELLER set line = ? where line = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBAutoLabeller.isValidLine</id>
			<text>select line from {schema}APP_AUTO_LABELLER where line = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBAutoLabeller.getProperties</id>
			<text>select * from {schema}APP_AUTO_LABELLER where line = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBAutoLabeller.update</id>
			<text>update {schema}APP_AUTO_LABELLER set unique_id=?,description=?,prefix_code=?,use_sscc_range=?,modified=?,validate_resource=?,validate_workstation=? where line = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBAutoLabeller.updateSSCC</id>
			<text>update {schema}APP_AUTO_LABELLER set sscc_sequence=? where line = ? and group_id = ?</text>
		</statement>
		<statement>
			<id>JDBAutoLabeller.getLabellerIDs</id>
			<text>select * from {schema}APP_AUTO_LABELLER order by LINE</text>
		</statement>
		<statement>
			<id>JDBAutoLabeller.getLabellerIDsforGroup</id>
			<text>select * from {schema}APP_AUTO_LABELLER WHERE GROUP_ID = ? order by LINE</text>
		</statement>
		<?JDBUserReports?>
		<statement>
			<id>JDBUserReport.create</id>
			<text>insert into {schema}SYS_USER_REPORTS (USER_REPORT_ID) values (?)</text>
		</statement>		
		<statement>
			<id>JDBUserReport.delete</id>
			<text>delete from {schema}SYS_USER_REPORTS where USER_REPORT_ID = ?</text>
		</statement>
		<statement>
			<id>JDBUserReport.renameTo</id>
			<text>update {schema}SYS_USER_REPORTS set USER_REPORT_ID = ? where USER_REPORT_ID = ?</text>
		</statement>
		<statement>
			<id>JDBUserReport.isValid</id>
			<text>select * from {schema}SYS_USER_REPORTS where USER_REPORT_ID = ?</text>
		</statement>
		<statement>
			<id>JDBUserReport.getProperties</id>
			<text>select * from {schema}SYS_USER_REPORTS where USER_REPORT_ID = ?</text>
		</statement>
		<statement>
			<id>JDBUserReport.update</id>
			<text>update {schema}SYS_USER_REPORTS set DISPLAY_SEQUENCE=?,DESCRIPTION=?,SQL_SELECT=?,MODULE_ID=?,DESTINATION=?,ENABLED=?,PRIVATE=?,USER_ID=?,GROUP_ID=?,PARAM_DATE_RANGE=?,SAVE_PATH=?,PREVIEW=?,PROMPT_SAVE_AS=?,EMAIL_ENABLED=?,EMAIL_PROMPT_ENABLED=?,EMAIL_ADDRESSES=? where USER_REPORT_ID = ?</text>
		</statement>		
		<statement>
			<id>JDBUserReport.getUserReportIDs</id>
			<text>select * from {schema}SYS_USER_REPORTS order by DISPLAY_SEQUENCE,USER_REPORT_ID</text>
		</statement>
		<statement>
			<id>JDBUserReport.updateUserID</id>
			<text>update {schema}SYS_USER_REPORTS set USER_ID=? where USER_ID = ?</text>
		</statement>		
		<?JDBShifts?>
		<statement>
			<id>JDBShifts.create</id>
			<text>insert into {schema}APP_SHIFTS (SHIFT_ID,START_TIME,END_TIME,DESCRIPTION) values (?,?,?,?)</text>
		</statement>		
		<statement>
			<id>JDBShifts.delete</id>
			<text>delete from {schema}APP_SHIFTS where SHIFT_ID = ?</text>
		</statement>
		<statement>
			<id>JDBShifts.renameTo</id>
			<text>update {schema}APP_SHIFTS set SHIFT_ID = ? where SHIFT_ID = ?</text>
		</statement>
		<statement>
			<id>JDBShifts.isValid</id>
			<text>select * from {schema}APP_SHIFTS where SHIFT_ID = ?</text>
		</statement>
		<statement>
			<id>JDBShifts.getProperties</id>
			<text>select * from {schema}APP_SHIFTS where SHIFT_ID = ?</text>
		</statement>
		<statement>
			<id>JDBShifts.update</id>
			<text>update {schema}APP_SHIFTS set DESCRIPTION=?,START_TIME=?,END_TIME=? WHERE SHIFT_ID = ?</text>
		</statement>		
		<statement>
			<id>JDBShifts.getShifts</id>
			<text>select * from {schema}APP_SHIFTS order by DESCRIPTION</text>
		</statement>
		<?JDBPrinters?>
		<statement>
			<id>JDBPrinters.create</id>
			<text>insert into {schema}SYS_PRINTERS (PRINTER_ID,GROUP_ID) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBPrinters.update</id>
			<text>update {schema}SYS_PRINTERS set PRINTER_TYPE=?,ENABLED=?,IP_ADDRESS=?,PORT=?,DESCRIPTION=?,LANGUAGE=?,PRINTER_DPI=?,ENABLE_EXPORT=?,EXPORT_PATH=?,ENABLE_DIRECT_PRINT=?,EXPORT_FORMAT=?,PAPER_SIZE=? where PRINTER_ID= ? and GROUP_ID=?</text>
		</statement>
		<statement>
			<id>JDBPrinters.delete</id>
			<text>delete from {schema}SYS_PRINTERS where PRINTER_ID= ? and GROUP_ID=?</text>
		</statement>
		<statement>
			<id>JDBPrinters.getPrinterProperties</id>
			<text>select * from {schema}SYS_PRINTERS where PRINTER_ID= ? and GROUP_ID=?</text>
		</statement>
		<statement>
			<id>JDBPrinters.getPrinterIDs</id>
			<text>select * from {schema}SYS_PRINTERS where ENABLED = ? order by PRINTER_ID</text>
		</statement>
		<?JDBLabelData?>
		<statement>
			<id>JDBLabelData.create</id>
			<text>INSERT INTO {schema}APP_LABEL_DATA (UNIQUE_ID,PRINT_DATE,USER_ID,WORKSTATION_ID,MATERIAL,MATERIAL_TYPE,BATCH_NUMBER,PROCESS_ORDER,REQUIRED_RESOURCE,LOCATION_ID,PROD_QUANTITY,PROD_UOM,BASE_QUANTITY,BASE_UOM,DATE_OF_MANUFACTURE,EXPIRY_DATE,PROD_EAN,PROD_VARIANT,BASE_EAN,BASE_VARIANT,CUSTOMER_ID,PRINT_COPIES,PRINT_QUEUE_NAME,EXPIRY_MODE,MODULE_ID,OVERRIDE_MANUFACTURE_DATE,OVERRIDE_EXPIRY_DATE,OVERRIDE_BATCH_PREFIX,BATCH_PREFIX,BATCH_SUFFIX,LABEL_TYPE,LINE,LAYERS) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)</text>
		</statement>	
		<statement>
			<id>JDBLabelData.delete</id>
			<text>DELETE FROM {schema}APP_LABEL_DATA WHERE UNIQUE_ID = ?</text>
		</statement>
		<statement>
			<id>JDBLabelData.getProperties</id>
			<text>SELECT * FROM {schema}APP_LABEL_DATA WHERE UNIQUE_ID = ?</text>
		</statement>	
		<statement>
			<id>JDBLabelData.updateLine</id>
			<text>UPDATE {schema}APP_LABEL_DATA SET LINE=? WHERE UNIQUE_ID = ?</text>
		</statement>
		<statement>
			<id>JDBLabelData.renameLine</id>
			<text>UPDATE {schema}APP_LABEL_DATA SET LINE=? WHERE LINE=?</text>
		</statement>			
		<statement>
			<id>JDBLabelData.select</id>
			<text>SELECT * FROM {schema}view_label_data WHERE UNIQUE_ID = ?</text>
		</statement>
		<?JDBPrinterLineMembership?>
		<statement>
			<id>JDBLinePrinterMembership.create</id>
			<text>INSERT INTO {schema}SYS_PRINTER_LINE_MEMBERSHIP (LINE,GROUP_ID,PRINTER_ID) VALUES (?,?,?)</text>
		</statement>		
		<statement>		
			<id>JDBLinePrinterMembership.delete</id>
			<text>DELETE FROM {schema}SYS_PRINTER_LINE_MEMBERSHIP WHERE LINE = ? AND GROUP_ID = ? AND PRINTER_ID = ?</text>
		</statement>		
		<statement>		
			<id>JDBLinePrinterMembership.deleteForPrinterID</id>
			<text>DELETE FROM {schema}SYS_PRINTER_LINE_MEMBERSHIP WHERE PRINTER_ID = ?</text>
		</statement>
		<statement>		
			<id>JDBLinePrinterMembership.getPrintersAssignedtoLine</id>
			<text>SELECT * FROM {schema}SYS_PRINTER_LINE_MEMBERSHIP WHERE LINE = ? AND GROUP_ID = ?  ORDER BY PRINTER_ID</text>
		</statement>		
		<statement>		
			<id>JDBLinePrinterMembership.getPrintersNotAssignedtoLine</id>
			<text>SELECT * FROM {schema}SYS_PRINTERS WHERE PRINTER_ID NOT IN (SELECT PRINTER_ID FROM {schema}SYS_PRINTER_LINE_MEMBERSHIP WHERE LINE = ? AND GROUP_ID = ? )</text>
		</statement>		
		<statement>		
			<id>JDBLinePrinterMembership.isPrinterAssignedToLine</id>
			<text>SELECT * FROM {schema}SYS_PRINTER_LINE_MEMBERSHIP WHERE LINE = ? AND GROUP_ID = ?  AND PRINTER_ID = ?</text>
		</statement>		
		<statement>		
			<id>JDBLinePrinterMembership.removeAllPrintersfromLine</id>
			<text>DELETE FROM {schema}SYS_PRINTER_LINE_MEMBERSHIP WHERE LINE = ? AND GROUP_ID = ? </text>
		</statement>	
		<statement>		
			<id>JDBLinePrinterMembership.renameLine</id>
			<text>UPDATE {schema}SYS_PRINTER_LINE_MEMBERSHIP SET LINE = ? WHERE LINE = ? AND GROUP_ID = ? </text>
		</statement>		
		<?DBview_auto_labeller_printer?>	
		<statement>		
			<id>DBview_auto_labeller_printer.getModified</id>
			<text>SELECT * FROM {schema}view_auto_labeller_printer where modified = 'Y'</text>
		</statement>	
		<statement>		
			<id>DBview_auto_labeller_printer.getEnabled</id>
			<text>SELECT * FROM {schema}view_auto_labeller_printer</text>
		</statement>
		<!-- N.B Sequence of fields important below      -->		
		<statement>		
			<id>DBview_auto_labeller_printer.getProperties</id>
			<text>SELECT LINE,MODIFIED,UNIQUE_ID,LABEL_TYPE,PRINTER_ID,ENABLED,PRINTER_TYPE,IP_ADDRESS,PORT,GROUP_ID,LANGUAGE,
			      PRINTER_DPI,PROCESS_ORDER,MATERIAL,MATERIAL_TYPE,MATERIAL_DESCRIPTION,SHELF_LIFE_UOM,SHELF_LIFE,SHELF_LIFE_RULE,
			      BATCH_NUMBER,REQUIRED_RESOURCE,PLANT,LOCATION_ID,DATE_OF_MANUFACTURE,EXPIRY_DATE,PROD_EAN,PROD_VARIANT,
			      BASE_QUANTITY,PROD_UOM,BASE_EAN,BASE_VARIANT,PROD_QUANTITY,BASE_UOM,CUSTOMER_ID,CUSTOMER_NAME,PRINT_COPIES,
			      MODULE_ID,OVERRIDE_MANUFACTURE_DATE,OVERRIDE_EXPIRY_DATE,OVERRIDE_BATCH_PREFIX,BATCH_PREFIX,BATCH_SUFFIX,
			      REPORT_TYPE,MODULE_TYPE,REPORT_FILENAME,PART_NO
 				  FROM {schema}view_auto_labeller_printer where line = ? and printer_id = ?</text>
		</statement>
		<statement>		
			<id>DBview_auto_labeller_printer.getProperties_Pack</id>
			<text>SELECT LINE,MODIFIED,UNIQUE_ID,LABEL_TYPE,PRINTER_ID,ENABLED,PRINTER_TYPE,IP_ADDRESS,PORT,GROUP_ID,LANGUAGE,
			      PRINTER_DPI,PROCESS_ORDER,MATERIAL,MATERIAL_TYPE,MATERIAL_DESCRIPTION,SHELF_LIFE_UOM,SHELF_LIFE,SHELF_LIFE_RULE,
			      BATCH_NUMBER,REQUIRED_RESOURCE,PLANT,LOCATION_ID,DATE_OF_MANUFACTURE,EXPIRY_DATE,PROD_EAN,PROD_VARIANT,
			      BASE_QUANTITY,PROD_UOM,BASE_EAN,BASE_VARIANT,PROD_QUANTITY,BASE_UOM,CUSTOMER_ID,CUSTOMER_NAME,PRINT_COPIES,
			      MODULE_ID,OVERRIDE_MANUFACTURE_DATE,OVERRIDE_EXPIRY_DATE,OVERRIDE_BATCH_PREFIX,BATCH_PREFIX,BATCH_SUFFIX,
			      REPORT_TYPE,MODULE_TYPE,REPORT_FILENAME,PART_NO
 				  FROM {schema}view_auto_labeller_printer where line = ? and printer_id = ?</text>
		</statement>	
		<statement>		
			<id>DBview_auto_labeller_printer.getProperties_Pallet</id>
			<text>SELECT LINE,MODIFIED,UNIQUE_ID,LABEL_TYPE,PRINTER_ID,ENABLED,PRINTER_TYPE,IP_ADDRESS,PORT,GROUP_ID,LANGUAGE,
			      PRINTER_DPI,PROCESS_ORDER,MATERIAL,MATERIAL_TYPE,MATERIAL_DESCRIPTION,SHELF_LIFE_UOM,SHELF_LIFE,SHELF_LIFE_RULE,
			      BATCH_NUMBER,REQUIRED_RESOURCE,PLANT,LOCATION_ID,DATE_OF_MANUFACTURE,EXPIRY_DATE,PROD_EAN,PROD_VARIANT,
			      BASE_QUANTITY,PROD_UOM,BASE_EAN,BASE_VARIANT,PROD_QUANTITY,BASE_UOM,CUSTOMER_ID,CUSTOMER_NAME,PRINT_COPIES,
			      MODULE_ID,OVERRIDE_MANUFACTURE_DATE,OVERRIDE_EXPIRY_DATE,OVERRIDE_BATCH_PREFIX,BATCH_PREFIX,BATCH_SUFFIX,
			      REPORT_TYPE,MODULE_TYPE,REPORT_FILENAME,PART_NO,LAYERS
 				  FROM {schema}view_auto_labeller_printer where line = ? and printer_id = ?</text>
		</statement>						
		<?JDBAutoLabellerResources?>
		<statement>
			<id>JDBAutoLabellerResources.create</id>
			<text>insert into {schema}APP_AUTO_LABELLER_RESOURCES (line,group_id,required_resource) values (?,?,?)</text>
		</statement>	
		<statement>
			<id>JDBAutoLabellerResources.delete</id>
			<text>delete from {schema}APP_AUTO_LABELLER_RESOURCES where line=? and group_id = ? and required_resource=?</text>
		</statement>	
		<statement>
			<id>JDBAutoLabellerResources.isValid</id>
			<text>select * from {schema}APP_AUTO_LABELLER_RESOURCES where line=?  and group_id = ? and required_resource=?</text>
		</statement>
		<statement>
			<id>JDBAutoLabellerResources.getResources</id>
			<text>select * from {schema}APP_AUTO_LABELLER_RESOURCES where line=? and group_id = ?  order by required_resource</text>
		</statement>					
		<statement>
			<id>JDBAutoLabellerResources.renameLine</id>
			<text>update {schema}APP_AUTO_LABELLER_RESOURCES set line=? where line=? and group_id = ? </text>
		</statement>		
		<?JDBMaterialCustomerData ?>
		<statement>
			<id>JDBMaterialCustomerData.isValid</id>
			<text>select * from {schema}APP_MATERIAL_CUSTOMER_DATA where material = ? and customer_id=? and data_id=?</text>
		</statement>
		<statement>
			<id>JDBMaterialCustomerData.create</id>
			<text>insert into {schema}APP_MATERIAL_CUSTOMER_DATA (material,customer_id,data_id) values (?,?,?)</text>
		</statement>
		<statement>
			<id>JDBMaterialCustomerData.update</id>
			<text>update {schema}APP_MATERIAL_CUSTOMER_DATA set data=? where material=? and customer_id=? and data_id=?</text>
		</statement>
		<statement>
			<id>JDBMaterialCustomerData.delete</id>
			<text>delete from {schema}APP_MATERIAL_CUSTOMER_DATA where material = ? and customer_id = ? and data_id=?</text>
		</statement>
		<statement>
			<id>JDBMaterialCustomerData.getProperties</id>
			<text>select * from {schema}APP_MATERIAL_CUSTOMER_DATA where material = ? and customer_id = ? and data_id=?</text>
		</statement>	
		<?JDBArchive?>
		<statement>
			<id>JDBArchive.create</id>
			<text>insert into {schema}SYS_ARCHIVE (archive_id) values (?)</text>
		</statement>
		<statement>
			<id>JDBArchive.delete</id>
			<text>delete from {schema}SYS_ARCHIVE where archive_id = ?</text>
		</statement>	
		<statement>
			<id>JDBArchive.getArchives</id>
			<text>select * from {schema}SYS_ARCHIVE order sequence,archive_id</text>
		</statement>	
		<statement>
			<id>JDBArchive.getProperties</id>
			<text>select * from {schema}SYS_ARCHIVE where archive_id=?</text>
		</statement>	
		<statement>
			<id>JDBArchive.isValidArchive</id>
			<text>select * from {schema}SYS_ARCHIVE where archive_id=?</text>
		</statement>	
		<statement>
			<id>JDBArchive.renameTo</id>
			<text>update {schema}SYS_ARCHIVE set archive_id=? where archive_id=?</text>
		</statement>	
		<statement>
			<id>JDBArchive.update</id>
			<text>update {schema}SYS_ARCHIVE set description=?,enabled=?,background_task=?,sql_table=?,sql_criteria=?,retention_days=?,sequence=?,max_delete=? where archive_id=?</text>
		</statement>	
		<statement>
			<id>JDBArchive.updateRunStats</id>
			<text>update {schema}SYS_ARCHIVE set run_start_time=?,run_end_time=?,records_deleted=?,sql_result=? where archive_id=?</text>
		</statement>	
		<statement>
			<id>JDBArchive.jobList</id>
			<text>select * from {schema}SYS_ARCHIVE where enabled='Y' and background_task= 'Y' order by sequence</text>
		</statement>	
		<?JDBDataID?>
		<statement>
			<id>JDBDataID.create</id>
			<text>insert into {schema}APP_MATERIAL_DATA_IDS (data_id) values (?)</text>
		</statement>
		<statement>
			<id>JDBDataID.delete</id>
			<text>delete from {schema}APP_MATERIAL_DATA_IDS  where data_id=?</text>
		</statement>		
		<statement>
			<id>JDBDataID.getProperties</id>
			<text>select * from {schema}APP_MATERIAL_DATA_IDS  where data_id=?</text>
		</statement>	
		<statement>
			<id>JDBDataID.getIDs</id>
			<text>select * from {schema}APP_MATERIAL_DATA_IDS order by data_id</text>
		</statement>
		<statement>
			<id>JDBDataID.isValidID</id>
			<text>select * from {schema}APP_MATERIAL_DATA_IDS  where data_id=?</text>
		</statement>	
		<statement>
			<id>JDBDataID.update</id>
			<text>update {schema}APP_MATERIAL_DATA_IDS set description=? where data_id=?</text>
		</statement>	
		<?JDBAuditPermissions?>
		<statement>
			<id>JDBAuditPermissions.create</id>
			<text>insert into {schema}SYS_AUDIT_PERMISSIONS (sys_audit_log_id,event_time,user_id,event_type,event_action,target,data,workstation_id) values (?,?,?,?,?,?,?,?)</text>		</statement>
		<statement>
			<id>JDBAuditPermissions.getProperties</id>
			<text>select * from {schema}SYS_AUDIT_PERMISSIONS where sys_audit_log_id=?</text>
		</statement>	
		<statement>
			<id>JDBAuditPermissions.selectWithLimit</id>
			<text>select * from {schema}SYS_AUDIT_PERMISSIONS</text>
		</statement>	
		<?JDBLineWorkstationMembership?>
		<statement>
			<id>JDBLineWorkstationMembership.create</id>
			<text>INSERT INTO {schema}SYS_WORKSTATION_LINE_MEMBERS (LINE,GROUP_ID,WORKSTATION_ID) VALUES (?,?,?)</text>
		</statement>		
		<statement>		
			<id>JDBLineWorkstationMembership.delete</id>
			<text>DELETE FROM {schema}SYS_WORKSTATION_LINE_MEMBERS WHERE LINE = ? AND GROUP_ID = ? AND WORKSTATION_ID = ?</text>
		</statement>		
		<statement>		
			<id>JDBLineWorkstationMembership.deleteForWorkstationID</id>
			<text>DELETE FROM {schema}SYS_WORKSTATION_LINE_MEMBERS WHERE WORKSTATION_ID = ?</text>
		</statement>
		<statement>		
			<id>JDBLineWorkstationMembership.getWorkstationsAssignedtoLine</id>
			<text>SELECT * FROM {schema}SYS_WORKSTATION_LINE_MEMBERS WHERE LINE = ? AND GROUP_ID = ?  ORDER BY WORKSTATION_ID</text>
		</statement>		
		<statement>		
			<id>JDBLineWorkstationMembership.getWorkstationsNotAssignedtoLine</id>
			<text>SELECT * FROM {schema}SYS_PRINTERS WHERE WORKSTATION_ID NOT IN (SELECT WORKSTATION_ID FROM {schema}SYS_WORKSTATION_LINE_MEMBERS WHERE LINE = ? AND GROUP_ID = ? )</text>
		</statement>		
		<statement>		
			<id>JDBLineWorkstationMembership.isWorkstationAssignedToLine</id>
			<text>SELECT * FROM {schema}SYS_WORKSTATION_LINE_MEMBERS WHERE LINE = ? AND GROUP_ID = ?  AND WORKSTATION_ID = ?</text>
		</statement>		
		<statement>		
			<id>JDBLineWorkstationMembership.removeAllWorkstationsfromLine</id>
			<text>DELETE FROM {schema}SYS_WORKSTATION_LINE_MEMBERS WHERE LINE = ? AND GROUP_ID = ? </text>
		</statement>	
		<statement>		
			<id>JDBLineWorkstationMembership.renameLine</id>
			<text>UPDATE {schema}SYS_WORKSTATION_LINE_MEMBERS SET LINE = ? WHERE LINE = ? AND GROUP_ID = ? </text>
		</statement>
		<?JDBProcessOrderResource ?>
		<statement>
			<id>JDBProcessOrderResource.create</id>
			<text>insert into {schema}APP_PROCESS_ORDER_RESOURCE (required_resource,enabled,description,batch_suffix) values (?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBProcessOrderResource.delete</id>
			<text>delete from {schema}APP_PROCESS_ORDER_RESOURCE where required_resource = ?</text>
		</statement>
		<statement>
			<id>JDBProcessOrderResource.isValidResource</id>
			<text>select * from {schema}APP_PROCESS_ORDER_RESOURCE where required_resource = ?</text>
		</statement>
		<statement>
			<id>JDBProcessOrderResource.update</id>
			<text>update {schema}APP_PROCESS_ORDER_RESOURCE set enabled = ?,batch_suffix=?,description=? where required_resource = ?</text>
		</statement>
		<statement>
			<id>JDBProcessOrderResource.getProperties</id>
			<text>select * from {schema}APP_PROCESS_ORDER_RESOURCE where required_resource = ?</text>
		</statement>	
		<statement>
			<id>JDBProcessOrderResource.getResources</id>
			<text>select * from {schema}APP_PROCESS_ORDER_RESOURCE where enabled = 'Y' order by required_resource</text>
		</statement>
		<?JDBQMAnalysis?>	
		<statement>
			<id>JDBQMAnalysis.getAnalysis</id>
			<text>select * from {schema}APP_QM_ANALYSIS where analysis_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMAnalysis.create</id>
			<text>insert into {schema}APP_QM_ANALYSIS (analysis_id) values (?)</text>
		</statement>	
		<statement>
			<id>JDBQMAnalysis.delete</id>
			<text>delete from {schema}APP_QM_ANALYSIS where analysis_id = ?</text>
		</statement>	
		<statement>
			<id>JDBQMAnalysis.getProperties</id>
			<text>select * from {schema}APP_QM_ANALYSIS where analysis_id = ?</text>
		</statement>	
		<statement>
			<id>JDBQMAnalysis.getAnalysisData</id>
			<text>select * from {schema}APP_QM_ANALYSIS order by display_sequence</text>
		</statement>
		<statement>
			<id>JDBQMAnalysis.isValid</id>
			<text>select * from {schema}APP_QM_ANALYSIS where analysis_id = ?</text>
		</statement>
		<statement>
			<id>JDBQMAnalysis.update</id>
			<text>update {schema}APP_QM_ANALYSIS set description=?,display_sequence=?,module_id=?,process_order_reqd=?,process_order_param=?,material_reqd=?,material_param=?,sample_date_start_reqd=?,sample_date_start_param=?,sample_date_end_reqd=?,sample_date_end_param=?,user_data_1_reqd=?,user_data_1_param=?,user_data_2_reqd=?,user_data_2_param=?,user_data_3_reqd=?,user_data_3_param=?,user_data_4_reqd=?,user_data_4_param=?,batch_suffix_reqd=?,batch_suffix_param=?,resource_reqd=?,resource_param=? where analysis_id=?</text>
		</statement>	
		<?JDBModuleAlternative ?>
		<statement>
			<id>JDBModuleAlternative.create</id>
			<text>insert into {schema}SYS_MODULES_ALTERNATIVE (module_id,workstation_id,alt_module_id) values (?,?,?)</text>
		</statement>
		<statement>
			<id>JDBModuleAlternative.delete</id>
			<text>delete from {schema}SYS_MODULES_ALTERNATIVE where module_id = ? and workstation_id=?</text>
		</statement>
		<statement>
			<id>JDBModuleAlternative.getWorkstations</id>
			<text>select workstation_id from {schema}SYS_MODULES_ALTERNATIVE where module_id=? order by workstation_id</text>
		</statement>	
		<statement>
			<id>JDBModuleAlternative.getProperties</id>
			<text>select * from {schema}SYS_MODULES_ALTERNATIVE where module_id = ? and workstation_id=?</text>
		</statement>
		<statement>
			<id>JDBModuleAlternative.update</id>
			<text>update {schema}SYS_MODULES_ALTERNATIVE set alt_module_id=? where module_id = ? and workstation_id=?</text>
		</statement>		
		<?JDBViewBarcodeValidate?>
		<statement>
			<id>JDBViewBarcodeValidate.getProperties</id>
			<text>select * from {schema}view_barcode_validate where process_order = ?</text>
		</statement>	
		<?JDBWeightWorkstation?>		
		<statement>
			<id>JDBWTWorkstation.create</id>
			<text>insert into {schema}APP_WEIGHT_WORKSTATION (workstation_id) values (?)</text>
		</statement>	
		<statement>
			<id>JDBWTWorkstation.delete</id>
			<text>delete from {schema}APP_WEIGHT_WORKSTATION where workstation_id = ?</text>
		</statement>
		<statement>
			<id>JDBWTWorkstation.rename</id>
			<text>update {schema}APP_WEIGHT_WORKSTATION set workstation_id = ? where workstation_id = ?</text>
		</statement>
		<statement>
			<id>JDBWTWorkstation.update</id>
			<text>update {schema}APP_WEIGHT_WORKSTATION set description = ?,location=?,sample_point=?,scale_id=?,scale_port_id=? where workstation_id = ?</text>
		</statement>
		<statement>
			<id>JDBWTWorkstation.getWorkstations</id>
			<text>select * from {schema}APP_WEIGHT_WORKSTATION order by workstation_id</text>
		</statement>	
	    <statement>
			<id>JDBWTWorkstation.getProperties</id>
			<text>select * from {schema}APP_WEIGHT_WORKSTATION where workstation_id = ?</text>
		</statement>
	    <statement>
			<id>JDBWTWorkstation.isValidWorkstation</id>
			<text>select * from {schema}APP_WEIGHT_WORKSTATION where workstation_id = ?</text>
		</statement>
		<?JDBWeightScale?>		
		<statement>
			<id>JDBWTScale.create</id>
			<text>insert into {schema}APP_WEIGHT_SCALE (scale_id) values (?)</text>
		</statement>	
		<statement>
			<id>JDBWTScale.delete</id>
			<text>delete from {schema}APP_WEIGHT_SCALE where scale_id = ?</text>
		</statement>
		<statement>
			<id>JDBWTScale.rename</id>
			<text>update {schema}APP_WEIGHT_SCALE set scale_id = ? where scale_id = ?</text>
		</statement>
		<statement>
			<id>JDBWTScale.update</id>
			<text>update {schema}APP_WEIGHT_SCALE set description = ?,make=?,model=?,baud_rate=?,data_bits=?,stop_bits=?,flow_control=?,connection=?,parity=?,end_of_line=?,serial_no=? where scale_id = ?</text>
		</statement>	
	    <statement>
			<id>JDBWTScale.isValidScale</id>
			<text>select * from {schema}APP_WEIGHT_SCALE where scale_id = ?</text>
		</statement>
	    <statement>
			<id>JDBWTScale.getProperties</id>
			<text>select * from {schema}APP_WEIGHT_SCALE where scale_id = ?</text>
		</statement>
		<statement>
			<id>JDBWTScale.getScales</id>
			<text>select * from {schema}APP_WEIGHT_SCALE order by scale_id</text>
		</statement>	
		<?JDBWeightTNE?>			
		<statement>
			<id>JDBWTTNE.create</id>
			<text>insert into {schema}APP_WEIGHT_TNE (nominal_weight,nominal_weight_uom) values (?,?)</text>
		</statement>	
		<statement>
			<id>JDBWTTNE.delete</id>
			<text>delete from {schema}APP_WEIGHT_TNE where nominal_weight = ? and nominal_weight_uom = ?</text>
		</statement>
		<statement>
			<id>JDBWTTNE.rename</id>
			<text>update {schema}APP_WEIGHT_TNE set nominal_weight = ?,nominal_weight_uom = ? where nominal_weight = ? and nominal_weight_uom = ?</text>
		</statement>
		<statement>
			<id>JDBWTTNE.update</id>
			<text>update {schema}APP_WEIGHT_TNE set tne = ?,neg_t1=?,neg_t2=? where nominal_weight = ? and nominal_weight_uom=?</text>
		</statement>
	    <statement>
			<id>JDBWTTNE.isValidTNE</id>
			<text>select * from {schema}APP_WEIGHT_TNE where nominal_weight = ? and nominal_weight_uom=?</text>
		</statement>
	    <statement>
			<id>JDBWTTNE.getProperties</id>
			<text>select * from {schema}APP_WEIGHT_TNE where nominal_weight = ? and nominal_weight_uom=?</text>
		</statement>
		<statement>
			<id>JDBWTTNE.getTNEs</id>
			<text>select * from {schema}APP_WEIGHT_TNE order by nominal_weight,nominal_weight_uom</text>
		</statement>
		<?JDBWeightSamplePoint?>		
		<statement>
			<id>JDBWTSamplePoint.create</id>
			<text>insert into {schema}APP_WEIGHT_SAMPLE_POINT (sample_point) values (?)</text>
		</statement>	
		<statement>
			<id>JDBWTSamplePoint.delete</id>
			<text>delete from {schema}APP_WEIGHT_SAMPLE_POINT where sample_point = ?</text>
		</statement>
		<statement>
			<id>JDBWTSamplePoint.rename</id>
			<text>update {schema}APP_WEIGHT_SAMPLE_POINT set sample_point = ? where sample_point = ?</text>
		</statement>
		<statement>
			<id>JDBWTSamplePoint.update</id>
			<text>update {schema}APP_WEIGHT_SAMPLE_POINT set description = ?,location=?,required_resource=? where sample_point = ?</text>
		</statement>
	    <statement>
			<id>JDBWTSamplePoint.isValidSamplePoint</id>
			<text>select * from {schema}APP_WEIGHT_SAMPLE_POINT where sample_point = ?</text>
		</statement>
	    <statement>
			<id>JDBWTSamplePoint.getProperties</id>
			<text>select * from {schema}APP_WEIGHT_SAMPLE_POINT where sample_point = ?</text>
		</statement>	
		<statement>
			<id>JDBWTSamplePoint.getSamplePoints</id>
			<text>select * from {schema}APP_WEIGHT_SAMPLE_POINT order by sample_point</text>
		</statement>
		<?JDBProductGroup?>		
		<statement>
			<id>JDBProductGroup.create</id>
			<text>insert into {schema}APP_WEIGHT_PRODUCT_GROUP (product_group) values (?)</text>
		</statement>	
		<statement>
			<id>JDBProductGroup.delete</id>
			<text>delete from {schema}APP_WEIGHT_PRODUCT_GROUP where product_group = ?</text>
		</statement>
		<statement>
			<id>JDBProductGroup.rename</id>
			<text>update {schema}APP_WEIGHT_PRODUCT_GROUP set product_group = ? where product_group = ?</text>
		</statement>
		<statement>
			<id>JDBProductGroup.update</id>
			<text>update {schema}APP_WEIGHT_PRODUCT_GROUP set description = ?,nominal_weight=?,nominal_weight_uom=?,tare_weight=?,tare_weight_uom=?,samples_required=?,lower_limit=?,upper_limit=? where product_group = ?</text>
		</statement>
	    <statement>
			<id>JDBProductGroup.isValidProductGroup</id>
			<text>select * from {schema}APP_WEIGHT_PRODUCT_GROUP where product_group = ?</text>
		</statement>
	    <statement>
			<id>JDBProductGroup.getProperties</id>
			<text>select * from {schema}APP_WEIGHT_PRODUCT_GROUP where product_group = ?</text>
		</statement>	
		<statement>
			<id>JDBProductGroup.getProductGroups</id>
			<text>select * from {schema}APP_WEIGHT_PRODUCT_GROUP order by product_group</text>
		</statement>		
		<?JDBWTContainerCode?>		
		<statement>
			<id>JDBWTContainerCode.create</id>
			<text>insert into {schema}APP_WEIGHT_CONTAINER_CODE (container_code) values (?)</text>
		</statement>	
		<statement>
			<id>JDBWTContainerCode.delete</id>
			<text>delete from {schema}APP_WEIGHT_CONTAINER_CODE where container_code = ?</text>
		</statement>
		<statement>
			<id>JDBWTContainerCode.rename</id>
			<text>update {schema}APP_WEIGHT_CONTAINER_CODE set container_code = ? where container_code = ?</text>
		</statement>
		<statement>
			<id>JDBWTContainerCode.update</id>
			<text>update {schema}APP_WEIGHT_CONTAINER_CODE set description = ? where container_code = ?</text>
		</statement>
	    <statement>
			<id>JDBWTContainerCode.isValidContainerCode</id>
			<text>select * from {schema}APP_WEIGHT_CONTAINER_CODE where container_code = ?</text>
		</statement>
	    <statement>
			<id>JDBWTContainerCode.getProperties</id>
			<text>select * from {schema}APP_WEIGHT_CONTAINER_CODE where container_code = ?</text>
		</statement>	
		<statement>
			<id>JDBWTContainerCode.getContainerCodes</id>
			<text>select * from {schema}APP_WEIGHT_CONTAINER_CODE order by container_code</text>
		</statement>
		<?JDBWTSampleHeader?>		
		<statement>
			<id>JDBWTSampleHeader.create</id>
			<text>insert into {schema}APP_WEIGHT_SAMPLE_HEADER (sample_point,sample_date) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBWTSampleHeader.update</id>
			<text>update APP_WEIGHT_SAMPLE_HEADER set
					user_id = ?,
					workstation_id = ?,
					scale_id = ?,
					process_order = ?,
					required_resource = ?,
					customer_id = ?,
					material = ?,
					product_group = ?,
					container_code = ?,
					tare_weight = ?,
					tare_weight_uom = ?,
					nominal_weight = ?,
					nominal_weight_uom = ?,
					tne = ?,
					neg_t1 = ?,
					neg_t2 = ?,
					sample_size = ?,
					sample_count = ?,
					sample_mean = ?,
					sample_std_dev = ?,
					sample_t1_count = ?,
					sample_t2_count = ?,
					comments = ?
					where sample_point = ? and sample_date = ?</text>
		</statement>
		<statement>
			<id>JDBWTSampleHeader.updateComments</id>
			<text>update APP_WEIGHT_SAMPLE_HEADER set
					comments = ?
					where sample_point = ? and sample_date = ?</text>
		</statement>		
		<statement>
			<id>JDBWTSampleHeader.isValidSampleHeader</id>
			<text>select * from {schema}APP_WEIGHT_SAMPLE_HEADER where sample_point = ? and sample_date = ?</text>
		</statement>
		<statement>
			<id>JDBWTSampleHeader.getProperties</id>
			<text>select * from {schema}APP_WEIGHT_SAMPLE_HEADER where sample_point = ? and sample_date = ?</text>
		</statement>
		<?JDBWTSampleDetail?>		
		<statement>
			<id>JDBWTSampleDetail.create</id>
			<text>insert into {schema}APP_WEIGHT_SAMPLE_DETAIL (sample_point,sample_date,sample_sequence) values (?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWTSampleDetail.isValidSampleDetail</id>
			<text>select * from {schema}APP_WEIGHT_SAMPLE_DETAIL where sample_point = ? and sample_date = ? and sample_sequence = ?</text>
		</statement>
		<statement>
			<id>JDBWTSampleDetail.update</id>
			<text>UPDATE APP_WEIGHT_SAMPLE_DETAIL SET 
					SAMPLE_WEIGHT_DATE = ?,
					SAMPLE_GROSS_WEIGHT = ?,
					SAMPLE_NET_WEIGHT = ?,
					SAMPLE_TARE_WEIGHT = ?,
					SAMPLE_WEIGHT_UOM = ?,
					SAMPLE_T1_COUNT = ?,
					SAMPLE_T2_COUNT = ?
					WHERE SAMPLE_POINT = ? AND SAMPLE_DATE = ? AND SAMPLE_SEQUENCE = ?
			</text>
		</statement>	
		<statement>
			<id>JDBWTSampleDetail.getSampleDetails</id>
			<text>select * FROM {schema}APP_WEIGHT_SAMPLE_DETAIL where sample_point = ? and sample_date = ? order by sample_point,sample_date,sample_sequence</text>
		</statement>
		
		<?JDBWasteLocation?>		
		<statement>
			<id>JDBWasteLocation.create</id>
			<text>insert into {schema}APP_WASTE_LOCATIONS (waste_location_id,description,process_order_required,reason_id_required,enabled) values (?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteLocation.delete</id>
			<text>delete from {schema}APP_WASTE_LOCATIONS where waste_location_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteLocation.getProperties</id>
			<text>select * from {schema}APP_WASTE_LOCATIONS where waste_location_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteLocation.getWasteLocations</id>
			<text>select * from {schema}APP_WASTE_LOCATIONS order by waste_location_id</text>
		</statement>
		<statement>
			<id>JDBWasteLocation.getWasteLocationList</id>
			<text>select * from {schema}APP_WASTE_LOCATIONS where enabled = 'Y' order by waste_location_id</text>
		</statement>
		<statement>
			<id>JDBWasteLocation.isValidWasteLocation</id>
			<text>select * from {schema}APP_WASTE_LOCATIONS where waste_location_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteLocation.update</id>
			<text>update {schema}APP_WASTE_LOCATIONS set description=?,process_order_required=?,reason_id_required=?, enabled=? where waste_location_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteLocation.getLocationsAssignedtoReportingID</id>
			<text>select * from {schema}APP_WASTE_LOCATIONS 
						where enabled = 'Y' 
						and  waste_location_id in (SELECT waste_location_id from {schema}APP_WASTE_LOCATION_REPORTING where waste_reporting_id = ?) 
						order by waste_location_id</text>
		</statement>	
		<statement>
			<id>JDBWasteLocation.getLocationsUnAssignedtoReportingID</id>
			<text>select * from {schema}APP_WASTE_LOCATIONS 
						where enabled = 'Y' 
						and  waste_location_id not in (SELECT waste_location_id from {schema}APP_WASTE_LOCATION_REPORTING where waste_reporting_id = ?) 
						order by waste_location_id</text>
		</statement>
		<statement>
			<id>JDBWasteLocation.renameLocationID</id>
			<text>update {schema}APP_WASTE_LOCATIONS set waste_location_id=? where waste_location_id=?</text>
		</statement>
		
		
		<?JDBWasteContainer?>		
		<statement>
			<id>JDBWasteContainer.create</id>
			<text>insert into {schema}APP_WASTE_CONTAINERS (waste_container_id,description,tare_weight,enabled) values (?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteContainer.delete</id>
			<text>delete from {schema}APP_WASTE_CONTAINERS where waste_container_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteContainer.getProperties</id>
			<text>select * from {schema}APP_WASTE_CONTAINERS where waste_container_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteContainer.getWasteContainers</id>
			<text>select * from {schema}APP_WASTE_CONTAINERS order by waste_container_id</text>
		</statement>
		<statement>
			<id>JDBWasteContainer.getWasteContainerList</id>
			<text>select * from {schema}APP_WASTE_CONTAINERS where enabled = 'Y' order by waste_container_id</text>
		</statement>
		<statement>
			<id>JDBWasteContainer.isValidWasteContainer</id>
			<text>select * from {schema}APP_WASTE_CONTAINERS where waste_container_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteContainer.update</id>
			<text>update {schema}APP_WASTE_CONTAINERS set description=?,tare_weight=?,enabled=? where waste_container_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteContainer.renameContainerID</id>
			<text>update {schema}APP_WASTE_CONTAINERS set waste_container_id=? where waste_container_id=?</text>
		</statement>
		
		
		<?JDBWasteTransactionType?>		
		<statement>
			<id>JDBWasteTransactionType.create</id>
			<text>insert into {schema}APP_WASTE_TRANSACTIONS (waste_transaction_type,description,include_in_totals,store_as_negative,enabled) values (?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteTransactionType.delete</id>
			<text>delete from {schema}APP_WASTE_TRANSACTIONS where waste_transaction_type= ?</text>
		</statement>
		<statement>
			<id>JDBWasteTransactionType.getProperties</id>
			<text>select * from {schema}APP_WASTE_TRANSACTIONS where waste_transaction_type= ?</text>
		</statement>
		<statement>
			<id>JDBWasteTransactionType.getWasteTransactions</id>
			<text>select * from {schema}APP_WASTE_TRANSACTIONS order by waste_transaction_type</text>
		</statement>
		<statement>
			<id>JDBWasteTransactionType.isValidWasteTransaction</id>
			<text>select * from {schema}APP_WASTE_TRANSACTIONS where waste_transaction_type= ?</text>
		</statement>
		<statement>
			<id>JDBWasteTransactionType.update</id>
			<text>update {schema}APP_WASTE_TRANSACTIONS set description=?,include_in_totals=?,store_as_negative=?,enabled=? where waste_transaction_type=?</text>
		</statement>
		<statement>
			<id>JDBWasteTransactionType.renameTransactionType</id>
			<text>update {schema}APP_WASTE_TRANSACTIONS set waste_transaction_type=? where waste_transaction_type=?</text>
		</statement>
		
		<?JDBWasteReportingIDS?>		
		<statement>
			<id>JDBWasteReportingIDS.create</id>
			<text>insert into {schema}APP_WASTE_REPORTING_IDS (waste_reporting_id,description,reporting_group,enabled) values (?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteReportingIDS.delete</id>
			<text>delete from {schema}APP_WASTE_REPORTING_IDS where waste_reporting_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteReportingIDS.getProperties</id>
			<text>select * from {schema}APP_WASTE_REPORTING_IDS where waste_reporting_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteReportingIDS.getWasteReportingIDs</id>
			<text>select * from {schema}APP_WASTE_REPORTING_IDS order by reporting_group,waste_reporting_id</text>
		</statement>
		<statement>
			<id>JDBWasteReportingIDS.isValidWasteReportingID</id>
			<text>select * from {schema}APP_WASTE_REPORTING_IDS where waste_reporting_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteReportingIDS.update</id>
			<text>update {schema}APP_WASTE_REPORTING_IDS set description=?,reporting_group=?,enabled=? where waste_reporting_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteReportingIDS.getReportingIDsAssignedtoLocation</id>
			<text>select * from {schema}APP_WASTE_REPORTING_IDS 
						where enabled = 'Y' 
						and  waste_reporting_id in (SELECT waste_reporting_id from {schema}APP_WASTE_LOCATION_REPORTING where waste_location_id = ?) 
						order by waste_reporting_id</text>
		</statement>	
		<statement>
			<id>JDBWasteReportingIDS.getReportingIDsUnassignedtoLocation</id>
			<text>select * from {schema}APP_WASTE_REPORTING_IDS 
						where enabled = 'Y' 
						and  waste_reporting_id not in (SELECT waste_reporting_id from {schema}APP_WASTE_LOCATION_REPORTING where waste_location_id = ?) 
						order by waste_reporting_id</text>
		</statement>
		<statement>
			<id>JDBWasteReportingIDS.renameReportingID</id>
			<text>update {schema}APP_WASTE_REPORTING_IDS set waste_reporting_id=? where waste_reporting_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteReportingIDS.renameReportingGroup</id>
			<text>update {schema}APP_WASTE_REPORTING_IDS set reporting_group=? where reporting_group=?</text>
		</statement>		
		
		<?JDBWasteReasons?>		
		<statement>
			<id>JDBWasteReasons.create</id>
			<text>insert into {schema}APP_WASTE_REASONS (waste_reason_id,description,enabled) values (?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteReasons.delete</id>
			<text>delete from {schema}APP_WASTE_REASONS where waste_reason_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteReasons.getProperties</id>
			<text>select * from {schema}APP_WASTE_REASONS where waste_reason_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteReasons.getWasteReasons</id>
			<text>select * from {schema}APP_WASTE_REASONS order by waste_reason_id</text>
		</statement>
		<statement>
			<id>JDBWasteReasons.isValidWasteReasonID</id>
			<text>select * from {schema}APP_WASTE_REASONS where waste_reason_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteReasons.update</id>
			<text>update {schema}APP_WASTE_REASONS set description=?,enabled=? where waste_reason_id=?</text>
		</statement>	
		<statement>
			<id>JDBWasteReasons.renameReasonID</id>
			<text>update {schema}APP_WASTE_REASONS set waste_reason_id=? where waste_reason_id=?</text>
		</statement>
		
		<?JDBWasteLocationReporting?>		
		<statement>
			<id>JDBWasteLocationReporting.create</id>
			<text>insert into {schema}APP_WASTE_LOCATION_REPORTING (waste_location_id,waste_reporting_id) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteLocationReporting.delete</id>
			<text>delete from {schema}APP_WASTE_LOCATION_REPORTING where waste_location_id= ? and waste_reporting_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteLocationReporting.getProperties</id>
			<text>select * from {schema}APP_WASTE_LOCATION_REPORTING where waste_location_id= ? and waste_reporting_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteLocationReporting.getWasteReportingIDs</id>
			<text>select * from {schema}APP_WASTE_LOCATION_REPORTING order by waste_location_id,waste_reporting_id</text>
		</statement>
		<statement>
			<id>JDBWasteLocationReporting.isValidWasteLocationReportingID</id>
			<text>select * from {schema}APP_WASTE_LOCATION_REPORTING where waste_location_id= ?and waste_reporting_id=?</text>
		</statement>	
		<statement>
			<id>JDBWasteLocationReporting.deleteByLocation</id>
			<text>delete from {schema}APP_WASTE_LOCATION_REPORTING where waste_location_id = ?</text>
		</statement>
		<statement>
			<id>JDBWasteLocationReporting.deleteByReportID</id>
			<text>delete from {schema}APP_WASTE_LOCATION_REPORTING where waste_reporting_id = ?</text>
		</statement>	
		<statement>
			<id>JDBWasteLocationReporting.renameLocationID</id>
			<text>update {schema}APP_WASTE_LOCATION_REPORTING set waste_location_id=? where waste_location_id=?</text>
		</statement>	
		<statement>
			<id>JDBWasteLocationReporting.renameReportingID</id>
			<text>update {schema}APP_WASTE_LOCATION_REPORTING set waste_reporting_id=? where waste_reporting_id=?</text>
		</statement>
		<?JDBWasteTypes?>		
		<statement>
			<id>JDBWasteTypes.create</id>
			<text>insert into {schema}APP_WASTE_TYPES (waste_type_id,description,recyclable,hazardous,ppe_required,enabled) values (?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteTypes.delete</id>
			<text>delete from {schema}APP_WASTE_TYPES where waste_type_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteTypes.getProperties</id>
			<text>select * from {schema}APP_WASTE_TYPES where waste_type_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteTypes.getWasteTypes</id>
			<text>select * from {schema}APP_WASTE_TYPES order by waste_type_id</text>
		</statement>
		<statement>
			<id>JDBWasteTypes.isValidWasteType</id>
			<text>select * from {schema}APP_WASTE_TYPES where waste_type_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteTypes.update</id>
			<text>update {schema}APP_WASTE_TYPES set description=?,recyclable=?,hazardous=?,ppe_required=?,enabled=? where waste_type_id=?</text>
		</statement>	
		<statement>
			<id>JDBWasteTypes.renameTypeID</id>
			<text>update {schema}APP_WASTE_TYPES set waste_type_id=? where waste_type_id=?</text>
		</statement>
		
		<?JDBWasteLocationMaterial?>		
		<statement>
			<id>JDBWasteLocationMaterial.isValid</id>
			<text>select * from {schema}view_waste_location_materials where waste_location_id = ? and waste_material_id = ? </text>
		</statement>
		<statement>
			<id>JDBWasteLocationMaterial.getMaterialsforLocation</id>
			<text>select * from {schema}view_waste_location_materials where waste_location_id = ? order by waste_material_id</text>
		</statement>
				
		<?JDBWasteMaterialLocation?>		
		<statement>
			<id>JDBWasteMaterialLocation.isValid</id>
			<text>select * from {schema}view_waste_location_materials where waste_material_id = ? and waste_location_id = ? </text>
		</statement>
		<statement>
			<id>JDBWasteMaterialLocation.getMaterialsforLocation</id>
			<text>select * from {schema}view_waste_location_materials where waste_location_id = ? order by waste_material_id</text>
		</statement>	
				
		<?JDBWasteMaterial?>		
		<statement>
			<id>JDBWasteMaterial.create</id>
			<text>insert into {schema}APP_WASTE_MATERIAL (waste_material_id,waste_type_id,cost_per_kg,description,enabled) values (?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteMaterial.delete</id>
			<text>delete from {schema}APP_WASTE_MATERIAL where waste_material_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteMaterial.getProperties</id>
			<text>select * from {schema}APP_WASTE_MATERIAL where waste_material_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteMaterial.getWasteMaterials</id>
			<text>select * from {schema}APP_WASTE_MATERIAL order by waste_material_id</text>
		</statement>
		<statement>
			<id>JDBWasteMaterial.isValidWasteMaterial</id>
			<text>select * from {schema}APP_WASTE_MATERIAL where waste_material_id= ?</text>
		</statement>
		<statement>
			<id>JDBWasteMaterial.update</id>
			<text>update {schema}APP_WASTE_MATERIAL set waste_type_id=?,cost_per_kg=?,description=?,enabled=? where waste_material_id=?</text>
		</statement>	
		<statement>
			<id>JDBWasteMaterial.renameMaterialID</id>
			<text>update {schema}APP_WASTE_MATERIAL set waste_material_id=? where waste_material_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteMaterial.renameTypeID</id>
			<text>update {schema}APP_WASTE_MATERIAL set waste_type_id=? where waste_type_id=?</text>
		</statement>
		
		<?JDBWasteLog?>		
		<statement>
			<id>JDBWasteLog.write</id>
			<text>insert into {schema}APP_WASTE_LOG (transaction_ref,waste_transaction_type,report_time,waste_location_id,waste_material_id,process_order,waste_reason_id,user_id,weight_kg,tare_weight,waste_container_id,waste_comment) values (?,?,?,?,?,?,?,?,?,?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteLog.delete</id>
			<text>delete from {schema}APP_WASTE_LOG where transaction_ref= ? and waste_transaction_type=?</text>
		</statement>
		<statement>
			<id>JDBWasteLog.getProperties</id>
			<text>select * from {schema}APP_WASTE_LOG where transaction_ref= ? and waste_transaction_type=?</text>
		</statement>
		<statement>
			<id>JDBWasteLog.getWasteLogs</id>
			<text>select * from {schema}APP_WASTE_LOG order by transaction_ref</text>
		</statement>
		<statement>
			<id>JDBWasteLog.isValidWasteLog</id>
			<text>select * from {schema}APP_WASTE_LOG where transaction_ref= ? and waste_transaction_type=?</text>
		</statement>
		<statement>
			<id>JDBWasteLog.update</id>
			<text>update {schema}APP_WASTE_LOG set report_time=?,waste_location_id=?,waste_material_id=?,process_order=?,waste_reason_id=?,user_id=?,weight_kg=?,tare_weight=?,waste_container_id=?,waste_comment=? where transaction_ref=? and waste_transaction_type=?</text>
		</statement>	
		<statement>
			<id>JDBWasteLog.renameLocationID</id>
			<text>update {schema}APP_WASTE_LOG set waste_location_id=? where waste_location_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteLog.renameContainerID</id>
			<text>update {schema}APP_WASTE_LOG set waste_container_id=? where waste_container_id=?</text>
		</statement>		
		<statement>
			<id>JDBWasteLog.renameMaterialID</id>
			<text>update {schema}APP_WASTE_LOG set waste_material_id=? where waste_material_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteLog.renameReasonID</id>
			<text>update {schema}APP_WASTE_LOG set waste_reason_id=? where waste_reason_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteLog.renameTransactionType</id>
			<text>update {schema}APP_WASTE_LOG set waste_transaction_type=? where waste_transaction_type=?</text>
		</statement>
		
		<?JDBWasteLocationTypes?>		
		<statement>
			<id>JDBWasteLocationTypes.create</id>
			<text>insert into {schema}APP_WASTE_LOCATION_TYPES (waste_location_id,waste_type_id) values (?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteLocationTypes.delete</id>
			<text>delete from {schema}APP_WASTE_LOCATION_TYPES where waste_location_id= ? and waste_type_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteLocationTypes.getProperties</id>
			<text>select * from {schema}APP_WASTE_LOCATION_TYPES where waste_location_id= ? and waste_type_id=?</text>
		</statement>
		<statement>
			<id>JDBWasteLocationTypes.getWasteLocationTypes</id>
			<text>select * from {schema}APP_WASTE_LOCATION_TYPES order by waste_location_id,waste_type_id</text>
		</statement>
		<statement>
			<id>JDBWasteLocationTypes.isValidWasteLocationType</id>
			<text>select * from {schema}APP_WASTE_LOCATION_TYPES where waste_location_id= ? and waste_type_id=?</text>
		</statement>	
		<statement>
			<id>JDBWasteLocationTypes.deleteByLocation</id>
			<text>delete from {schema}APP_WASTE_LOCATION_TYPES where waste_location_id = ?</text>
		</statement>
		<statement>
			<id>JDBWasteLocationTypes.deleteByType</id>
			<text>delete from {schema}APP_WASTE_LOCATION_TYPES where waste_type_id = ?</text>
		</statement>	
		<statement>
			<id>JDBWasteLocationTypes.renameLocationID</id>
			<text>update {schema}APP_WASTE_LOCATION_TYPES set waste_location_id=? where waste_location_id=?</text>
		</statement>	
		
		<?JDBWasteReportingGroup?>		
		<statement>
			<id>JDBWasteReportingGroup.create</id>
			<text>insert into {schema}APP_WASTE_REPORTING_GROUP (reporting_group,description,enabled) values (?,?,?)</text>
		</statement>
		<statement>
			<id>JDBWasteReportingGroup.delete</id>
			<text>delete from {schema}APP_WASTE_REPORTING_GROUP where reporting_group= ?</text>
		</statement>
		<statement>
			<id>JDBWasteReportingGroup.getProperties</id>
			<text>select * from {schema}APP_WASTE_REPORTING_GROUP where reporting_group= ?</text>
		</statement>
		<statement>
			<id>JDBWasteReportingGroup.getWasteReportingGroups</id>
			<text>select * from {schema}APP_WASTE_REPORTING_GROUP order by reporting_group</text>
		</statement>
		<statement>
			<id>JDBWasteReportingGroup.isValidWasteReportingGroup</id>
			<text>select * from {schema}APP_WASTE_REPORTING_GROUP where reporting_group= ?</text>
		</statement>
		<statement>
			<id>JDBWasteReportingGroup.update</id>
			<text>update {schema}APP_WASTE_REPORTING_GROUP set description=?,enabled=? where reporting_group=?</text>
		</statement>	
		<statement>
			<id>JDBWasteReportingGroup.renameReportingGroup</id>
			<text>update {schema}APP_WASTE_REPORTING_GROUP set reporting_group=? where reporting_group=?</text>
		</statement>	
		
		<?JDBEquipmentType?>		
		<statement>
			<id>JDBEquipmentType.create</id>
			<text>insert into {schema}APP_EQUIPMENT_TYPE (equipment_type,description,weight_kg,enabled) values (?,?,?,?)</text>
		</statement>	
		<statement>
			<id>JDBEquipmentType.delete</id>
			<text>delete from {schema}APP_EQUIPMENT_TYPE where equipment_type = ?</text>
		</statement>
		<statement>
			<id>JDBEquipmentType.update</id>
			<text>update {schema}APP_EQUIPMENT_TYPE set description = ?,weight_kg=?,enabled=? where equipment_type = ?</text>
		</statement>
	    <statement>
			<id>JDBEquipmentType.isValidEquipmentType</id>
			<text>select * from {schema}APP_EQUIPMENT_TYPE where equipment_type = ?</text>
		</statement>
	    <statement>
			<id>JDBEquipmentType.getProperties</id>
			<text>select * from {schema}APP_EQUIPMENT_TYPE where equipment_type = ?</text>
		</statement>	
		<statement>
			<id>JDBEquipmentType.getEquipmentTypes</id>
			<text>select * from {schema}APP_EQUIPMENT_TYPE order by equipment_type</text>
		</statement>	
		<statement>
			<id>JDBEquipmentType.updatePallet</id>
			<text>UPDATE APP_PALLET s SET s.EQUIPMENT_TYPE = (SELECT m.EQUIPMENT_TYPE FROM APP_MATERIAL m where m.MATERIAL = s.MATERIAL)  WHERE s.EQUIPMENT_TYPE IS NULL OR s.EQUIPMENT_TYPE = ''</text>
		</statement>	
		<statement>
			<id>JDBEquipmentType.updatePalletHistory</id>
			<text>UPDATE APP_PALLET_HISTORY s SET s.EQUIPMENT_TYPE = (SELECT m.EQUIPMENT_TYPE FROM APP_MATERIAL m where m.MATERIAL = s.MATERIAL) WHERE s.EQUIPMENT_TYPE IS NULL OR s.EQUIPMENT_TYPE = ''</text>
		</statement>
		
		<?JDBDespatchEquipmentType?>		
		<statement>
			<id>JDBDespatchEquipmentType.create</id>
			<text>insert into {schema}APP_DESPATCH_EQUIPMENT_TYPE (despatch_no,equipment_type,quantity) values (?,?,?)</text>
		</statement>	
		<statement>
			<id>JDBDespatchEquipmentType.delete</id>
			<text>delete from {schema}APP_DESPATCH_EQUIPMENT_TYPE where despatch_no = ? and equipment_type = ?</text>
		</statement>
		<statement>
			<id>JDBDespatchEquipmentType.deleteAll</id>
			<text>delete from {schema}APP_DESPATCH_EQUIPMENT_TYPE where despatch_no = ?</text>
		</statement>		
		<statement>
			<id>JDBDespatchEquipmentType.update</id>
			<text>update {schema}APP_DESPATCH_EQUIPMENT_TYPE set quantity = ? where despatch_no = ? and equipment_type = ?</text>
		</statement>
	    <statement>
			<id>JDBDespatchEquipmentType.isValidEquipmentType</id>
			<text>select * from {schema}APP_DESPATCH_EQUIPMENT_TYPE where despatch_no = ? and equipment_type = ?</text>
		</statement>
	    <statement>
			<id>JDBDespatchEquipmentType.getProperties</id>
			<text>select * from {schema}APP_DESPATCH_EQUIPMENT_TYPE where despatch_no = ? and equipment_type = ?</text>
		</statement>	
		<statement>
			<id>JDBDespatchEquipmentType.getEquipmentTypes</id>
			<text>select * from {schema}APP_DESPATCH_EQUIPMENT_TYPE where despatch_no = ? order by despatch_no,equipment_type</text>
		</statement>		
																								
	</jdbcDriver>
</SQL>
