<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE DDL SYSTEM "schema.dtd">
<DDL>

    <statement>
		ALTER TABLE APP_PALLET_SAMPLES RENAME COLUMN COMMENT TO SAMPLE_COMMENT;
    </statement>
    
    <statement>     
		CREATE OR REPLACE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_pallet_samples` AS SELECT
			`app_pallet_samples`.`SSCC` AS `SSCC`,
			`app_pallet_samples`.`SAMPLE_SEQUENCE` AS `SAMPLE_SEQUENCE`,
			`app_pallet_samples`.`SAMPLE_DATE` AS `SAMPLE_DATE`,
			`app_pallet_samples`.`SAMPLE_REASON` AS `SAMPLE_REASON`,
			`app_pallet_samples`.`DEFECT_TYPE` AS `DEFECT_TYPE`,
			`app_pallet_samples`.`DEFECT_ID` AS `DEFECT_ID`,
			`app_pallet_samples`.`LEAKING` AS `LEAKING`,
			`app_pallet_samples`.`SAMPLE_COMMENT` AS `SAMPLE_COMMENT`,
			`app_pallet_extension`.`PALLET_QUANTITY` AS `START_QUANTITY`,
			`app_pallet_samples`.`SAMPLE_QUANTITY` AS `SAMPLE_QUANTITY`,
			`app_pallet_samples`.`SAMPLE_POINT` AS `SAMPLE_POINT`,
			`app_pallet_extension`.`FIRST_CASE_INPUT` AS `FIRST_CASE_INPUT`,
			`app_pallet_extension`.`FIRST_CASE_TIME` AS `FIRST_CASE_TIME`,
			`app_pallet_extension`.`LAST_CASE_INPUT` AS `LAST_CASE_INPUT`,
			`app_pallet_extension`.`LAST_CASE_TIME` AS `LAST_CASE_TIME`,
			`app_pallet_extension`.`SHIFT_ID` AS `SHIFT_ID`,
			`app_pallet_extension`.`SUPPLIER_ID1` AS `SUPPLIER_ID1`,
			`app_pallet_extension`.`INCIDENT_REFERENCE` AS `INCIDENT_REFERENCE`,
			`app_pallet_extension`.`LOCATION` AS `LOCATION`,
			`app_pallet_extension`.`PRODUCT_GROUP` AS `PRODUCT_GROUP`,
			`app_pallet_extension`.`CONTAINER_CODE` AS `CONTAINER_CODE`,
			`app_pallet_extension`.`PWEEK` AS `PWEEK`,
			`app_pallet_extension`.`PDAY` AS `PDAY`,
			`app_pallet_extension`.`PMONTH` AS `PMONTH`,
			`app_pallet_extension`.`PYEAR` AS `PYEAR`,
			`app_supplier`.`SUPPLIER_TYPE` AS `SUPPLIER_TYPE`,
			`app_supplier`.`DESCRIPTION` AS `SUPPLIER_DESCRIPTION`,
			`app_pallet`.`LOCATION_ID` AS `LOCATION_ID`,
			`app_pallet`.`MATERIAL` AS `MATERIAL`,
			`app_pallet`.`BATCH_NUMBER` AS `BATCH_NUMBER`,
			`app_pallet`.`PROCESS_ORDER` AS `PROCESS_ORDER`,
			`app_pallet`.`DATE_OF_MANUFACTURE` AS `DATE_OF_MANUFACTURE`,
			`app_pallet`.`STATUS` AS `PALLET_STATUS`,
			`app_pallet`.`MHN_NUMBER` AS `MHN_NUMBER`,
			`app_pallet`.`DECISION` AS `DECISION`,
			`app_sample_defect_type`.`DESCRIPTION` AS `DEFECT_TYPE_DESCRIPTION`,
			`app_sample_defect_type`.`NON_LEAKING_DATA` AS `NON_LEAKING_DATA`,
			`app_sample_defect_type`.`LEAKING_DATA` AS `LEAKING_DATA`,
			`app_sample_defect_id`.`DESCRIPTION` AS `DEFECT_ID_DESCRIPTION` 
		FROM
			(((((
								`app_pallet_samples`
								LEFT JOIN `app_pallet_extension` ON ((
										`app_pallet_samples`.`SSCC` = `app_pallet_extension`.`SSCC` 
									)))
							LEFT JOIN `app_supplier` ON ((
									`app_pallet_extension`.`SUPPLIER_ID1` = `app_supplier`.`SUPPLIER_ID` 
								)))
						LEFT JOIN `app_sample_defect_id` ON ((
								`app_pallet_samples`.`DEFECT_ID` = `app_sample_defect_id`.`DEFECT_ID` 
							)))
					LEFT JOIN `app_sample_defect_type` ON ((
							`app_pallet_samples`.`DEFECT_TYPE` = `app_sample_defect_type`.`DEFECT_TYPE` 
						)))
				LEFT JOIN `app_pallet` ON ((
					`app_pallet_samples`.`SSCC` = `app_pallet`.`SSCC` 
			)));
    </statement>
    
    <statement>
		CREATE OR REPLACE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_sorting_qty_diffs` AS SELECT
			`app_pallet_extension`.`SSCC` AS `SSCC`,
			`app_pallet_extension`.`PALLET_QUANTITY` AS `PALLET_QUANTITY`,
			`app_pallet`.`QUANTITY` AS `QUANTITY`,
			`app_pallet`.`DATE_OF_MANUFACTURE` AS `DATE_OF_MANUFACTURE`,
			`app_pallet`.`MATERIAL` AS `MATERIAL`,
			`app_pallet`.`BATCH_NUMBER` AS `BATCH_NUMBER`,
			`app_pallet`.`STATUS` AS `STATUS`,
			`app_pallet`.`MHN_NUMBER` AS `MHN_NUMBER`,
			`app_pallet`.`DECISION` AS `DECISION`,
			`app_material_batch`.`STATUS` AS `BATCH_STATUS`,
			date_format( max( `app_pallet_samples`.`SAMPLE_DATE` ), '%d/%m/%y %T' ) AS `SAMPLE_DATE` 
		FROM
			(((
						`app_pallet_extension`
						LEFT JOIN `app_pallet` ON ((
								`app_pallet_extension`.`SSCC` = `app_pallet`.`SSCC` 
							)))
					LEFT JOIN `app_material_batch` ON (((
								`app_pallet`.`MATERIAL` = `app_material_batch`.`MATERIAL` 
								) 
						AND ( `app_pallet`.`BATCH_NUMBER` = `app_material_batch`.`BATCH_NUMBER` ))))
				LEFT JOIN `app_pallet_samples` ON ((
						`app_pallet`.`SSCC` = `app_pallet_samples`.`SSCC` 
					))) 
		WHERE
			( `app_pallet_extension`.`PALLET_QUANTITY` &lt;&gt; `app_pallet`.`QUANTITY` ) 
		GROUP BY
			`app_pallet_extension`.`SSCC`,
			`app_pallet_extension`.`PALLET_QUANTITY`,
			`app_pallet`.`QUANTITY`,
			`app_pallet`.`DATE_OF_MANUFACTURE`,
			`app_pallet`.`MATERIAL`,
			`app_pallet`.`BATCH_NUMBER`,
			`app_pallet`.`STATUS`,
			`app_pallet`.`MHN_NUMBER`,
			`app_pallet`.`DECISION`,
	        `app_material_batch`.`STATUS`;
    </statement>

</DDL>
