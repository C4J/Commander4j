<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE DDL SYSTEM "schema.dtd">
<DDL>
   
<statement>INSERT INTO `APP_MATERIAL_DATA_IDS` (`DATA_ID`, `DESCRIPTION`) VALUES ('ALT_TEXT_1', 'Additional Text for Label');</statement>

<statement>DROP FUNCTION IF EXISTS GetLayers</statement>

<statement>
CREATE FUNCTION `GetLayers`(xmaterial VARCHAR (20), xproduction_quantity DECIMAL (22, 3), xproduction_uom VARCHAR (3)) RETURNS int
    READS SQL DATA
BEGIN
	DECLARE	result INT;
	DECLARE	xlayers_uom VARCHAR (3) CHARACTER	SET utf8;
	DECLARE	xpallet_uom VARCHAR (3) CHARACTER	SET utf8;
	DECLARE	xbase_quantity DECIMAL (22, 3);
	
	SET xbase_quantity = c4j_GetBaseQuantity (xmaterial, xproduction_quantity, xproduction_uom);
	SET xlayers_uom = c4j_GetControlValue ('UOM BASE QTY PER LAYER');
	SET result = (SELECT (xbase_quantity / NUMERATOR * DENOMINATOR) FROM APP_MATERIAL_UOM WHERE MATERIAL = xmaterial AND UOM = xlayers_uom);
	SET result = COALESCE(result, 1);
	
	IF result = 0 THEN
		SET result = 1;
	END IF;
	
	RETURN result;
END
</statement>

<statement>DROP FUNCTION IF EXISTS GetFullPalletLayers</statement>

<statement>
CREATE FUNCTION `GetFullPalletLayers` (xmaterial VARCHAR (20), xproduction_uom VARCHAR (3)) RETURNS INT READS SQL DATA
BEGIN
	DECLARE	Xlayers INT;
	DECLARE	xpallet_uom VARCHAR (3) CHARACTER	SET utf8;
	DECLARE	xbase_uom VARCHAR (3) CHARACTER	SET utf8;
	DECLARE	xfull_pallet_quantity DECIMAL (22, 3);
	
	SET xpallet_uom = 'PAL';
	SET xbase_uom = (SELECT BASE_UOM FROM APP_MATERIAL WHERE MATERIAL = xmaterial);
	SET xfull_pallet_quantity = (SELECT NUMERATOR FROM APP_MATERIAL_UOM WHERE MATERIAL = xmaterial AND UOM = xpallet_uom);
	SET xlayers = GetLayers (xmaterial, xfull_pallet_quantity, xbase_uom);
	SET xlayers = COALESCE(xlayers, 1);
	
	IF xlayers = 0 THEN
		SET xlayers = 1;
	END IF;
	
	RETURN xlayers;
END
</statement>

<statement>ALTER ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_auto_labeller_full` 
AS 
SELECT
  `PO`.`PROCESS_ORDER`,
  `PO`.`STATUS`,
  `PO`.`MATERIAL`,
  `PO`.`REQUIRED_UOM`,
  `MAT`.`MATERIAL_TYPE`,
  `MAT`.`DESCRIPTION`,
  `MATUOM`.`EAN`,
  `MATUOM`.`VARIANT`,
  `MAT`.`OLD_MATERIAL`,
  `MAT`.`SHELF_LIFE`,
  `MAT`.`SHELF_LIFE_UOM`,
  `MAT`.`SHELF_LIFE_RULE`,
  `PO`.`CUSTOMER_ID`,
  `CUST`.`CUSTOMER_NAME`,
  `MAT`.`UPDATED` AS `MATERIAL_UPDATED`,
  `PO`.`UPDATED` AS `PROCESS_ORDER_UPDATED`,
  `c4j_GetFinalBatchNumber` (CURDATE(), 'N', '', '', `PO`.`PROCESS_ORDER`) AS `BATCH_NUMBER`,
  `c4j_GetFinalExpiryDate` (CURDATE(), `MAT`.`SHELF_LIFE`, `MAT`.`SHELF_LIFE_UOM`, `MAT`.`SHELF_LIFE_RULE`, 'N', CURDATE()) AS `EXPIRY_DATE`,
  `c4j_GetLayers` (`PO`.`PROCESS_ORDER`) AS `DEFAULT_LAYERS`,
  `c4j_GetFullPalletQuantity` (`PO`.`PROCESS_ORDER`) AS `DEFAULT_QUANTITY`,
  `CUSTDATA1`.`DATA` AS `PART_NO`,
  `CUSTDATA2`.`DATA` AS `ALT_TEXT_1`
FROM
    `app_process_order` `PO` 
    LEFT JOIN `app_material_uom` `MATUOM` ON (`PO`.`MATERIAL` = `MATUOM`.`MATERIAL`) AND (`PO`.`REQUIRED_UOM` = `MATUOM`.`UOM`)
    LEFT JOIN `app_customer` `CUST` ON (`PO`.`CUSTOMER_ID` = `CUST`.`CUSTOMER_ID`)
    LEFT JOIN `app_material` `MAT` ON (`PO`.`MATERIAL` = `MAT`.`MATERIAL`)
    LEFT JOIN `app_material_customer_data` `CUSTDATA1` ON (`PO`.`MATERIAL` = `CUSTDATA1`.`MATERIAL`) AND (`PO`.`CUSTOMER_ID` = `CUSTDATA1`.`CUSTOMER_ID`) AND (`CUSTDATA1`.`DATA_ID` = 'PART_NO')
    LEFT JOIN `app_material_customer_data` `CUSTDATA2` ON (`PO`.`MATERIAL` = `CUSTDATA2`.`MATERIAL`) AND (`PO`.`CUSTOMER_ID` = `CUSTDATA2`.`CUSTOMER_ID`) AND (`CUSTDATA2`.`DATA_ID` = 'ALT_TEXT_1');
</statement>

<statement>ALTER ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_auto_labeller_printer` 
AS 
SELECT
  `AUTOLAB`.`LINE`,
  `AUTOLAB`.`MODIFIED`,
  `AUTOLAB`.`UNIQUE_ID`,
  `LABDATA`.`LABEL_TYPE`,
  `MEMBER`.`PRINTER_ID`,
  `PRINTERS`.`ENABLED`,
  `PRINTERS`.`PRINTER_TYPE`,
  `PRINTERS`.`IP_ADDRESS`,
  `PRINTERS`.`PORT`,
  `PRINTERS`.`GROUP_ID`,
  `PRINTERS`.`LANGUAGE`,
  `PRINTERS`.`PRINTER_DPI`,
  `LABDATA`.`PROCESS_ORDER`,
  `LABDATA`.`MATERIAL`,
  `LABDATA`.`MATERIAL_TYPE`,
  `MAT`.`DESCRIPTION` AS `MATERIAL_DESCRIPTION`,
  `MAT`.`SHELF_LIFE_UOM`,
  `MAT`.`SHELF_LIFE`,
  `MAT`.`SHELF_LIFE_RULE`,
  `LABDATA`.`BATCH_NUMBER`,
  `LABDATA`.`REQUIRED_RESOURCE`,
  (SELECT `KEY_VALUE` FROM `sys_control` WHERE (`SYSTEM_KEY` = 'PLANT')) AS `PLANT`,
  `LABDATA`.`LOCATION_ID`,
  `LABDATA`.`DATE_OF_MANUFACTURE`,
  `LABDATA`.`EXPIRY_DATE`,
  `LABDATA`.`PROD_EAN`,
  `LABDATA`.`PROD_VARIANT`,
  `LABDATA`.`PROD_QUANTITY`,
  `LABDATA`.`PROD_UOM`,
  `LABDATA`.`BASE_EAN`,
  `LABDATA`.`BASE_VARIANT`,
  `LABDATA`.`BASE_QUANTITY`,
  `LABDATA`.`BASE_UOM`,
  `LABDATA`.`CUSTOMER_ID`,
  `CUST`.`CUSTOMER_NAME`,
  `LABDATA`.`PRINT_COPIES`,
  `LABDATA`.`MODULE_ID`,
  `LABDATA`.`OVERRIDE_MANUFACTURE_DATE`,
  `LABDATA`.`OVERRIDE_EXPIRY_DATE`,
  `LABDATA`.`OVERRIDE_BATCH_PREFIX`,
  `LABDATA`.`BATCH_PREFIX`,
  `LABDATA`.`BATCH_SUFFIX`,
  `MOD`.`REPORT_TYPE`,
  `MOD`.`MODULE_TYPE`,
  `MOD`.`REPORT_FILENAME`,
  `CUSTDATA1`.`DATA` AS `PART_NO`,
  `LABDATA`.`LAYERS`,
   `CUSTDATA2`.`DATA` AS `ALT_TEXT_1`
FROM
  `app_auto_labeller` `AUTOLAB` 
  LEFT JOIN `sys_printer_line_membership` `MEMBER` ON (`AUTOLAB`.`LINE` = `MEMBER`.`LINE`) AND (`AUTOLAB`.`GROUP_ID` = `MEMBER`.`GROUP_ID`)
  LEFT JOIN `sys_printers` `PRINTERS` ON (`MEMBER`.`PRINTER_ID` = `PRINTERS`.`PRINTER_ID`) AND (`MEMBER`.`GROUP_ID` = `PRINTERS`.`GROUP_ID`)
  RIGHT JOIN `app_label_data` `LABDATA` ON ((`LABDATA`.`UNIQUE_ID` = `AUTOLAB`.`UNIQUE_ID`))
  LEFT JOIN `app_material` `MAT` ON ((`MAT`.`MATERIAL` = `LABDATA`.`MATERIAL`))
  LEFT JOIN `app_customer` `CUST` ON ((`LABDATA`.`CUSTOMER_ID` = `CUST`.`CUSTOMER_ID`))
  LEFT JOIN `sys_modules` `MOD` ON ((`LABDATA`.`MODULE_ID` = `MOD`.`MODULE_ID`))
  LEFT JOIN `app_material_customer_data` `CUSTDATA1` ON (`LABDATA`.`MATERIAL` = `CUSTDATA1`.`MATERIAL`) AND (`LABDATA`.`CUSTOMER_ID` = `CUSTDATA1`.`CUSTOMER_ID`) AND (`CUSTDATA1`.`DATA_ID` = 'PART_NO')
  LEFT JOIN `app_material_customer_data` `CUSTDATA2` ON (`LABDATA`.`MATERIAL` = `CUSTDATA2`.`MATERIAL`) AND (`LABDATA`.`CUSTOMER_ID` = `CUSTDATA2`.`CUSTOMER_ID`) AND (`CUSTDATA2`.`DATA_ID` = 'ALT_TEXT_1')
  WHERE
    (`PRINTERS`.`ENABLED` = 'Y');
</statement>

<statement>ALTER ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_label_data` 
AS 
SELECT
  `LABDATA`.`UNIQUE_ID`,
  `LABDATA`.`PRINT_DATE`,
  `LABDATA`.`USER_ID`,
  `LABDATA`.`WORKSTATION_ID`,
  `LABDATA`.`MATERIAL`,
  `LABDATA`.`MATERIAL_TYPE`,
  `LABDATA`.`BATCH_NUMBER`,
  `LABDATA`.`PROCESS_ORDER`,
  `LABDATA`.`REQUIRED_RESOURCE`,
  `LABDATA`.`LOCATION_ID`,
  `LABDATA`.`PROD_QUANTITY`,
  `LABDATA`.`PROD_UOM`,
  `LABDATA`.`DATE_OF_MANUFACTURE`,
  `LABDATA`.`EXPIRY_DATE`,
  `LABDATA`.`EXPIRY_MODE`,
  `LABDATA`.`PROD_EAN`,
  `LABDATA`.`PROD_VARIANT`,
  `LABDATA`.`CUSTOMER_ID`,
  `LABDATA`.`PRINT_COPIES`,
  `LABDATA`.`PRINT_QUEUE_NAME`,
  `LABDATA`.`BASE_EAN`,
  `LABDATA`.`BASE_VARIANT`,
  `LABDATA`.`BASE_QUANTITY`,
  `LABDATA`.`BASE_UOM`,
  `LABDATA`.`MODULE_ID`,
  `LABDATA`.`OVERRIDE_MANUFACTURE_DATE`,
  `LABDATA`.`OVERRIDE_EXPIRY_DATE`,
  `LABDATA`.`OVERRIDE_BATCH_PREFIX`,
  `LABDATA`.`BATCH_PREFIX`,
  `LABDATA`.`BATCH_SUFFIX`,
  `LABDATA`.`LABEL_TYPE`,
  `LABDATA`.`LINE`,
  `CUST`.`CUSTOMER_NAME`,
  `MAT`.`DESCRIPTION` AS `MATERIAL_DESCRIPTION`,
  `CUSTDATA1`.`DATA` AS `PART_NO`,
  `CUSTDATA2`.`DATA` AS `ALT_TEXT_1`
FROM
  `app_label_data` `LABDATA` 
  LEFT JOIN `app_customer` `CUST` ON (`LABDATA`.`CUSTOMER_ID` = `CUST`.`CUSTOMER_ID`)
  LEFT JOIN `app_material` `MAT` ON (`LABDATA`.`MATERIAL` = `MAT`.`MATERIAL`)
  LEFT JOIN `app_material_customer_data` `CUSTDATA1` ON (`CUSTDATA1`.`MATERIAL` = `LABDATA`.`MATERIAL`) AND (`CUSTDATA1`.`CUSTOMER_ID` = `LABDATA`.`CUSTOMER_ID`) AND (`CUSTDATA1`.`DATA_ID` = 'PART_NO')
  LEFT JOIN `app_material_customer_data` `CUSTDATA2` ON (`CUSTDATA2`.`MATERIAL` = `LABDATA`.`MATERIAL`) AND (`CUSTDATA2`.`CUSTOMER_ID` = `LABDATA`.`CUSTOMER_ID`) AND (`CUSTDATA2`.`DATA_ID` = 'ALT_TEXT_1')
</statement>

<statement>ALTER ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_label_data_process_order` 
AS SELECT
  `PO`.`PROCESS_ORDER`,
  `PO`.`STATUS`,
  `PO`.`MATERIAL`,
  `PO`.`REQUIRED_UOM`,
  `PO`.`REQUIRED_RESOURCE`,
  `PO`.`DUE_DATE`,
  `MAT`.`MATERIAL_TYPE`,
  `MAT`.`DESCRIPTION`,
   RIGHT(('00000000000000' + `MATUOM_PROD`.`EAN`), 14) AS `PROD_EAN`,
   RIGHT(('00' + `MATUOM_PROD`.`VARIANT`), 2) AS `PROD_VARIANT`,
  `MATUOM_BASE`.`NUMERATOR` AS `PROD_QUANTITY`,
   RIGHT(('00000000000000' + `MATUOM_BASE`.`EAN`), 14) AS `BASE_EAN`,
   RIGHT(('00' + `MATUOM_BASE`.`VARIANT`), 2) AS `BASE_VARIANT`,
  `MATUOM_PROD`.`NUMERATOR` AS `BASE_QUANTITY`,
  `c4j_GetFullPalletQuantity` (`PO`.`PROCESS_ORDER`) AS `PALLET_QUANTITY`,
  `c4j_GetLayers` (`PO`.`PROCESS_ORDER`) AS `PALLET_LAYERS`,
  `MAT`.`OLD_MATERIAL`,
  `MAT`.`SHELF_LIFE`,
  `MAT`.`SHELF_LIFE_UOM`,
  `MAT`.`SHELF_LIFE_RULE`,
  `PO`.`CUSTOMER_ID`,
  `CUST`.`CUSTOMER_NAME`,
  `c4j_GetFinalBatchNumber` (CURDATE(), 'N', '', '', `PO`.`PROCESS_ORDER`) AS `BATCH_NUMBER`,
  `c4j_GetFinalExpiryDate` (CURDATE(), `MAT`.`SHELF_LIFE`, `MAT`.`SHELF_LIFE_UOM`, `MAT`.`SHELF_LIFE_RULE`, 'N', CURDATE()) AS `EXPIRY_DATE`,
  `MAT`.`UPDATED` AS `MATERIAL_UPDATED`,
  `PO`.`UPDATED` AS `PROCESS_ORDER_UPDATED`,
  `CUSTDATA1`.`DATA` AS `PART_NO`,
  ifnull(`CUST`.`CUSTOMER_DATA_01`, '') AS `CASE__LABEL`,
  ifnull(`CUST`.`CUSTOMER_DATA_02`, '') AS `PALLET__LABEL`,
  `CUST`.`UPDATED` AS `CUSTOMER_UPDATED`,
  `CUSTDATA2`.`DATA` AS `ALT_TEXT_1`
FROM
   `app_process_order` `PO` 
   LEFT JOIN `app_material` `MAT` ON (`MAT`.`MATERIAL` = `PO`.`MATERIAL`)
   LEFT JOIN `app_customer` `CUST` ON (`CUST`.`CUSTOMER_ID` = `PO`.`CUSTOMER_ID`)
   LEFT JOIN `app_material_uom` `MATUOM_PROD` ON (`MATUOM_PROD`.`MATERIAL` = `PO`.`MATERIAL`) AND (`MATUOM_PROD`.`UOM` = `PO`.`REQUIRED_UOM`)
   LEFT JOIN `app_material_uom` `MATUOM_BASE` ON (`MATUOM_BASE`.`MATERIAL` = `PO`.`MATERIAL`) AND (`MATUOM_BASE`.`UOM` = `MAT`.`BASE_UOM`) AND (`MATUOM_BASE`.`UOM` = `MAT`.`BASE_UOM`)
   LEFT JOIN `app_material_customer_data` `CUSTDATA1` ON (`PO`.`MATERIAL` = `CUSTDATA1`.`MATERIAL`) AND (`PO`.`CUSTOMER_ID` = `CUSTDATA1`.`CUSTOMER_ID`) AND (`CUSTDATA1`.`DATA_ID` = 'PART_NO')
   LEFT JOIN `app_material_customer_data` `CUSTDATA2` ON (`PO`.`MATERIAL` = `CUSTDATA2`.`MATERIAL`) AND (`PO`.`CUSTOMER_ID` = `CUSTDATA2`.`CUSTOMER_ID`) AND (`CUSTDATA2`.`DATA_ID` = 'ALT_TEXT_1')
</statement>

<statement>CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_label_data_process_order_cdf`
AS
SELECT
  PO.PROCESS_ORDER,
  PO.STATUS,
  PO.MATERIAL,
  PO.REQUIRED_UOM,
  PO.REQUIRED_RESOURCE,
  PO.DUE_DATE,
  MAT.MATERIAL_TYPE,
  MAT.DESCRIPTION,
  RIGHT('00000000000000' + MATUOM_PROD.EAN, 14) AS PROD_EAN,
  RIGHT('00' + MATUOM_PROD.VARIANT, 2) AS PROD_VARIANT,
  MATUOM_BASE.NUMERATOR AS PROD_QUANTITY,
  RIGHT(('00000000000000' + `MATUOM_BASE`.`EAN`), 14) AS `BASE_EAN`,
  RIGHT(('00' + `MATUOM_BASE`.`VARIANT`), 2) AS `BASE_VARIANT`,
  coalesce(PART3.DATA, 0) AS BASE_QUANTITY,
  c4j_GetFullPalletQuantity (PO.PROCESS_ORDER) AS PALLET_QUANTITY,
  c4j_GetLayers (PO.PROCESS_ORDER) AS PALLET_LAYERS,
  MAT.OLD_MATERIAL,
  MAT.SHELF_LIFE,
  MAT.SHELF_LIFE_UOM,
  MAT.SHELF_LIFE_RULE,
  PO.CUSTOMER_ID,
  CUST.CUSTOMER_NAME,
  c4j_GetFinalBatchNumber (CURDATE(), 'N', '', '', PO.PROCESS_ORDER) AS BATCH_NUMBER,
  c4j_GetFinalExpiryDate (CURDATE(), MAT.SHELF_LIFE, MAT.SHELF_LIFE_UOM, MAT.SHELF_LIFE_RULE, 'N', CURDATE()) AS EXPIRY_DATE,
  MAT.UPDATED AS MATERIAL_UPDATED,
  PO.UPDATED AS PROCESS_ORDER_UPDATED,
  coalesce(PART1.DATA, '') AS PART_NO,
  coalesce(PART0.DATA, '') AS CASE_CONTENT,
  coalesce(CUST.CUSTOMER_DATA_01, '') AS CASE__LABEL,
  coalesce(CUST.CUSTOMER_DATA_02, '') AS PALLET__LABEL,
  CUST.UPDATED AS CUSTOMER_UPDATED,
  coalesce(PART5.DATA, '') AS ALT_TEXT_1
FROM
  APP_PROCESS_ORDER AS PO
  LEFT JOIN APP_MATERIAL AS MAT ON MAT.MATERIAL = PO.MATERIAL
  LEFT JOIN APP_CUSTOMER AS CUST ON CUST.CUSTOMER_ID = PO.CUSTOMER_ID
  LEFT JOIN APP_MATERIAL_UOM AS MATUOM_PROD ON MATUOM_PROD.MATERIAL = PO.MATERIAL AND MATUOM_PROD.UOM = PO.REQUIRED_UOM
  LEFT JOIN APP_MATERIAL_UOM AS MATUOM_BASE ON MATUOM_BASE.MATERIAL = PO.MATERIAL AND MATUOM_BASE.UOM = MAT.BASE_UOM
  LEFT JOIN APP_MATERIAL_CUSTOMER_DATA AS PART3 ON PO.MATERIAL = PART3.MATERIAL AND PO.CUSTOMER_ID = PART3.CUSTOMER_ID AND PART3.DATA_ID = 'CU_QUANTITY'
  LEFT JOIN APP_MATERIAL_CUSTOMER_DATA AS PART2 ON PO.MATERIAL = PART2.MATERIAL AND PO.CUSTOMER_ID = PART2.CUSTOMER_ID AND PART2.DATA_ID = 'CU_EAN'
  LEFT JOIN APP_MATERIAL_CUSTOMER_DATA AS PART4 ON PO.MATERIAL = PART4.MATERIAL AND PO.CUSTOMER_ID = PART4.CUSTOMER_ID AND PART4.DATA_ID = 'CU_VARIANT'
  LEFT JOIN APP_MATERIAL_CUSTOMER_DATA AS PART1 ON PO.MATERIAL = PART1.MATERIAL AND PO.CUSTOMER_ID = PART1.CUSTOMER_ID AND PART1.DATA_ID = 'PART_NO'
  LEFT JOIN APP_MATERIAL_CUSTOMER_DATA AS PART0 ON PO.MATERIAL = PART0.MATERIAL AND PO.CUSTOMER_ID = PART0.CUSTOMER_ID AND PART0.DATA_ID = 'CASE_CONTENT'
  LEFT JOIN APP_MATERIAL_CUSTOMER_DATA AS PART5 ON PO.MATERIAL = PART5.MATERIAL AND PO.CUSTOMER_ID = PART5.CUSTOMER_ID AND PART5.DATA_ID = 'ALT_TEXT_1';
</statement>

<statement>ALTER ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_labeller_process_order_info` 
AS
SELECT
  `PO`.`PROCESS_ORDER`,
  `PO`.`MATERIAL`,
  `PO`.`STATUS`,
  `PO`.`DUE_DATE`,
  `MAT`.`DESCRIPTION`,
  `MAT`.`SHELF_LIFE`,
  `MAT`.`SHELF_LIFE_UOM`,
  `MAT`.`SHELF_LIFE_RULE`,
  `PO`.`REQUIRED_UOM`,
  `MATUOM`.`EAN`,
  `MATUOM`.`VARIANT`,
  `MAT`.`OLD_MATERIAL`,
   GetFullPalletLayers (PO.MATERIAL, PO.REQUIRED_UOM) AS DEFAULT_LAYERS,
   c4j_GetFullPalletQuantity (PO.PROCESS_ORDER) AS DEFAULT_QUANTITY,
  `PO`.`UPDATED` AS `PROCESS_ORDER_UPDATED`,
  `MAT`.`UPDATED` AS `MATERIAL_UPDATED`,
  `CUST`.`CUSTOMER_NAME`,
  `CUSTDATA1`.`DATA` AS `PART_NO`,
  coalesce(`CUST`.`CUSTOMER_DATA_01`, '') AS `CASE__LABEL`,
  coalesce(`CUST`.`CUSTOMER_DATA_02`, '') AS `PALLET__LABEL`,
  `CUST`.`UPDATED` AS `CUSTOMER_UPDATED`,
  `CUSTDATA2`.`DATA` AS `ALT_TEXT_1`
FROM
  `app_process_order` `PO` 
  LEFT JOIN `app_customer` `CUST` ON (`PO`.`CUSTOMER_ID` = `CUST`.`CUSTOMER_ID`)
  LEFT JOIN `app_material` `MAT` ON (`PO`.`MATERIAL` = `MAT`.`MATERIAL`)
  LEFT JOIN `app_material_uom` `MATUOM` ON (`PO`.`MATERIAL` = `MATUOM`.`MATERIAL`) AND (`PO`.`REQUIRED_UOM` = `MATUOM`.`UOM` )
  LEFT JOIN `app_material_uom` `MATUOMFULL` ON (`PO`.`MATERIAL` = `MATUOMFULL`.`MATERIAL`) AND (`MATUOMFULL`.`UOM` = 'PAL')
  LEFT JOIN `app_material_customer_data` `CUSTDATA1` ON (`PO`.`MATERIAL` = `CUSTDATA1`.`MATERIAL`) AND (`PO`.`CUSTOMER_ID` = `CUSTDATA1`.`CUSTOMER_ID`) AND (`CUSTDATA1`.`DATA_ID` = 'PART_NO')
  LEFT JOIN `app_material_customer_data` `CUSTDATA2` ON (`PO`.`MATERIAL` = `CUSTDATA2`.`MATERIAL`) AND (`PO`.`CUSTOMER_ID` = `CUSTDATA2`.`CUSTOMER_ID`) AND (`CUSTDATA2`.`DATA_ID` = 'ALT_TEXT_1') 
  WHERE
  (`MATUOMFULL`.`UOM` = 'PAL');
</statement>

<statement>ALTER ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_pallet_expiry` 
AS 
SELECT
  `PALLET`.`SSCC`,
  `PALLET`.`LOCATION_ID`,
  `PALLET`.`MATERIAL`,
  `PALLET`.`BATCH_NUMBER`,
  `PALLET`.`PROCESS_ORDER`,
  `PALLET`.`QUANTITY`,
  `PALLET`.`UOM`,
  `PALLET`.`DATE_OF_MANUFACTURE`,
  `PALLET`.`STATUS`,
  `PALLET`.`EAN`,
  `PALLET`.`VARIANT`,
  `PALLET`.`DESPATCH_NO`,
  `PALLET`.`CONFIRMED`,
  `PALLET`.`LAYERS`,
  `PALLET`.`SSCC_EXPIRY_DATE`,
  `PALLET`.`CUSTOMER_ID`,
  `PALLET`.`MHN_NUMBER`,
  `PALLET`.`DECISION`,
  `BATCH`.`EXPIRY_DATE`,
  `MAT`.`DESCRIPTION`,
  `MAT`.`OLD_MATERIAL`,
  `CUST`.`CUSTOMER_NAME`,
  `CUST`.`PRINT_ON_LABEL`,
  `PALLET`.`DATE_CREATED`,
  `PALLET`.`CREATED_BY_USER_ID`,
  `PALLET`.`DATE_UPDATED`,
  `PALLET`.`UPDATED_BY_USER_ID`,
  `PALLET`.`EQUIPMENT_TYPE`,
  `MAT`.`GROSS_WEIGHT`,
  `MAT`.`NET_WEIGHT`,
  `MAT`.`WEIGHT_UOM`,
  `CUSTDATA1`.`DATA` AS `PART_NO`,
  `CUSTDATA2`.`DATA` AS `CASE_CONTENT`,
  `ORD`.`REQUIRED_RESOURCE` AS `REQUIRED_RESOURCE`,
  `UNIT2`.`EAN` AS `BASE_EAN`,
  `UNIT2`.`VARIANT` AS `BASE_VARIANT`,
  `MAT`.`BASE_UOM` AS `BASE_UOM`,
  ((`PALLET`.`QUANTITY` * `UNIT1`.`NUMERATOR`) / `UNIT1`.`DENOMINATOR`) AS `BASE_QUANTITY`,
  `CUSTDATA3`.`DATA` AS `ALT_TEXT_1`
FROM
  `app_pallet` `PALLET` 
  LEFT JOIN `app_material_batch` `BATCH` ON (`PALLET`.`MATERIAL` = `BATCH`.`MATERIAL`) AND (`PALLET`.`BATCH_NUMBER` = `BATCH`.`BATCH_NUMBER`)
  LEFT JOIN `app_material` `MAT` ON (`PALLET`.`MATERIAL` = `MAT`.`MATERIAL`)
  LEFT JOIN `app_customer` `CUST` ON (`PALLET`.`CUSTOMER_ID` = `CUST`.`CUSTOMER_ID`)
  LEFT JOIN `app_process_order` `ORD` ON (`PALLET`.`PROCESS_ORDER` = `ORD`.`PROCESS_ORDER`)
  LEFT JOIN `app_material_customer_data` `CUSTDATA1` ON (`CUSTDATA1`.`MATERIAL` = `PALLET`.`MATERIAL`) AND (`CUSTDATA1`.`CUSTOMER_ID` = `PALLET`.`CUSTOMER_ID`) AND (`CUSTDATA1`.`DATA_ID` = 'PART_NO')
  LEFT JOIN `app_material_customer_data` `CUSTDATA2` ON (`CUSTDATA2`.`MATERIAL` = `PALLET`.`MATERIAL`) AND (`CUSTDATA2`.`CUSTOMER_ID` = `PALLET`.`CUSTOMER_ID`) AND (`CUSTDATA2`.`DATA_ID` = 'CASE_CONTENT')
  LEFT JOIN `app_material_customer_data` `CUSTDATA3` ON (`CUSTDATA3`.`MATERIAL` = `PALLET`.`MATERIAL`) AND (`CUSTDATA3`.`CUSTOMER_ID` = `PALLET`.`CUSTOMER_ID`) AND (`CUSTDATA3`.`DATA_ID` = 'ALT_TEXT_1')
  LEFT JOIN `app_material_uom` `UNIT1` ON (`PALLET`.`UOM` = `UNIT1`.`UOM`) AND (`PALLET`.`MATERIAL` = `UNIT1`.`MATERIAL`)
  LEFT JOIN `app_material_uom` `UNIT2` ON (`MAT`.`MATERIAL` = `UNIT2`.`MATERIAL`) AND (`MAT`.`BASE_UOM` = `UNIT2`.`UOM`)
</statement>

	
</DDL>
